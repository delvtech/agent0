{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidForwarderAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20LINK_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "contract ERC20Forwarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployDetails",
      "outputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600080546001600160a01b0319166001908117909155805534801561002857600080fd5b506115e9806100386000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630710fd58146100515780630ecaea7314610081578063600eb4ba14610094578063d13053bb146100ca575b600080fd5b61006461005f3660046102cc565b6100e0565b6040516001600160a01b0390911681526020015b60405180910390f35b61006461008f3660046102cc565b6101b5565b6100ab6000546001546001600160a01b0390911691565b604080516001600160a01b039093168352602083019190915201610078565b6100d2610292565b604051908152602001610078565b604080516001600160a01b03841660208201529081018290526000908190606001604051602081830303815290604052805190602001209050600060ff60f81b308360405180602001610132906102bf565b6020820181038252601f19601f820116604052508051906020012060405160200161019494939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b60408051808303601f19018152919052805160209091012095945050505050565b6001819055600080546001600160a01b0319166001600160a01b038416908117825560408051602081019290925281018390528190606001604051602081830303815290604052805190602001209050600081604051610214906102bf565b8190604051809103906000f5905080158015610234573d6000803e3d6000fd5b50905061024185856100e0565b6001600160a01b0316816001600160a01b0316146102715760405162e0775560e61b815260040160405180910390fd5b600080546001600160a01b0319166001908117909155805591505092915050565b6040516102a1602082016102bf565b6020820181038252601f19601f820116604052508051906020012081565b6112af8061030583390190565b600080604083850312156102df57600080fd5b82356001600160a01b03811681146102f657600080fd5b94602093909301359350505056fe60e06040523480156200001157600080fd5b50604080516330075a5d60e11b815281513392839263600eb4ba926004808301939282900301816000875af11580156200004f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200007591906200019c565b60a08190526001600160a01b039091166080819052604051622b600360e21b81527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9262ad800c91620000cf919060040190815260200190565b600060405180830381865afa158015620000ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001179190810190620001ee565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060c05250620002c3565b60008060408385031215620001b057600080fd5b82516001600160a01b0381168114620001c857600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200020257600080fd5b82516001600160401b03808211156200021a57600080fd5b818501915085601f8301126200022f57600080fd5b815181811115620002445762000244620001d8565b604051601f8201601f19908116603f011681019083821181831017156200026f576200026f620001d8565b8160405282815288868487010111156200028857600080fd5b600093505b82841015620002ac57848401860151818501870152928501926200028d565b600086848301015280965050505050505092915050565b60805160a05160c051610f306200037f600039600081816101c601526108fc015260008181610140015281816102ab0152818161035f0152818161045d015281816105080152818161061a015281816106cf0152818161073e01528181610a030152610bab015260008181610263015281816102d4015281816103a5015281816104860152818161055601528181610653015281816106f80152818161078e01528181610a4001528181610b210152610be90152610f306000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e51511610097578063a9059cbb11610066578063a9059cbb14610223578063d505accf14610236578063dd62ed3e1461024b578063fc0c546a1461025e57600080fd5b80633644e515146101c157806370a08231146101e85780637ecebe00146101fb57806395d89b411461021b57600080fd5b806318160ddd116100d357806318160ddd1461017057806323b872dd1461017857806330adf81f1461018b578063313ce567146101b257600080fd5b806306fdde03146100fa578063095ea7b31461011857806317d70f7c1461013b575b600080fd5b61010261029d565b60405161010f9190610c7f565b60405180910390f35b61012b610126366004610cce565b610350565b604051901515815260200161010f565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010f565b61016261044e565b61012b610186366004610cf8565b6104f9565b6101627f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6040516012815260200161010f565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b6101626101f6366004610d34565b61060b565b610162610209366004610d34565b60006020819052908152604090205481565b6101026106c0565b61012b610231366004610cce565b61072f565b610249610244366004610d56565b610829565b005b610162610259366004610dc9565b610af7565b6102857f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b604051622b600360e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062ad800c906024015b600060405180830381865afa158015610323573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034b9190810190610e12565b905090565b6040516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b038381166024830152604482018390523360648301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b1580156103eb57600080fd5b505af11580156103ff573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a35060015b92915050565b60405163bd85b03960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bd85b03990602401602060405180830381865afa1580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190610ebf565b604051633912022f60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0384811660248301528381166044830152606482018390523360848301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105f991815260200190565b60405180910390a35060019392505050565b604051631b2b776160e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0382811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633656eec290604401602060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610ebf565b604051634e41a1fb60e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634e41a1fb90602401610306565b604051633912022f60e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482018190526001600160a01b0384811660448401526064830184905260848301919091526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161043c565b8342111561084a5760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166108715760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b038781166000818152602081815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e08501909152805191012061190160f01b6101008401527f0000000000000000000000000000000000000000000000000000000000000000610102840152610122830152906101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015610997573d6000803e3d6000fd5b505050602060405103519050896001600160a01b0316816001600160a01b0316146109d557604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b03808b1660008181526020819052604090819020600187019055516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201528b83166024820152604481018b905260648101919091527f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b50505050886001600160a01b03168a6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258a604051610ae391815260200190565b60405180910390a350505050505050505050565b60405163e985e9c560e01b81526001600160a01b03838116600483015282811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e985e9c590604401602060405180830381865afa158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190610ed8565b15610b9c5750600019610448565b6040516321ff32a960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b03848116602483015283811660448301527f000000000000000000000000000000000000000000000000000000000000000016906321ff32a990606401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190610ebf565b9050610448565b60005b83811015610c76578181015183820152602001610c5e565b50506000910152565b6020815260008251806020840152610c9e816040850160208701610c5b565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610cc957600080fd5b919050565b60008060408385031215610ce157600080fd5b610cea83610cb2565b946020939093013593505050565b600080600060608486031215610d0d57600080fd5b610d1684610cb2565b9250610d2460208501610cb2565b9150604084013590509250925092565b600060208284031215610d4657600080fd5b610d4f82610cb2565b9392505050565b600080600080600080600060e0888a031215610d7157600080fd5b610d7a88610cb2565b9650610d8860208901610cb2565b95506040880135945060608801359350608088013560ff81168114610dac57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ddc57600080fd5b610de583610cb2565b9150610df360208401610cb2565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e2457600080fd5b815167ffffffffffffffff80821115610e3c57600080fd5b818401915084601f830112610e5057600080fd5b815181811115610e6257610e62610dfc565b604051601f8201601f19908116603f01168101908382118183101715610e8a57610e8a610dfc565b81604052828152876020848701011115610ea357600080fd5b610eb4836020830160208801610c5b565b979650505050505050565b600060208284031215610ed157600080fd5b5051919050565b600060208284031215610eea57600080fd5b81518015158114610d4f57600080fdfea26469706673582212207c8ea1c90d2308fd4b94fc0169b806bb4908a6d2f8661dff76df42d7e3fe94a364736f6c63430008130033a264697066735822122031d2ade4a10eb6a7b135d22ebe733b8a9b81d04e3dc0459ce818d4860d94e16064736f6c63430008130033",
    "sourceMap": "968:2732:39:-:0;;;1152:52;;;-1:-1:-1;;;;;;1152:52:39;1201:1;1152:52;;;;;;1210:28;;1366:16;;;;;;;;;;968:2732;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "968:2732:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:484;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;557:32:167;;;539:51;;527:2;512:18;3214:484:39;;;;;;;;1832:851;;;;;;:::i;:::-;;:::i;2827:115::-;;2878:11;2918:6;;2926:8;-1:-1:-1;;;;;2918:6:39;;;;2827:115;;;;;-1:-1:-1;;;;;1045:32:167;;;1027:51;;1109:2;1094:18;;1087:34;;;;1000:18;2827:115:39;833:294:167;1266:93:39;;;:::i;:::-;;;1278:25:167;;;1266:2;1251:18;1266:93:39;1132:177:167;3214:484:39;3415:26;;;-1:-1:-1;;;;;1045:32:167;;3415:26:39;;;1027:51:167;1094:18;;;1087:34;;;3315:7:39;;;;1000:18:167;;3415:26:39;;;;;;;;;;;;3405:37;;;;;;3390:52;;3452:20;3522:4;3515:12;;3537:4;3544;1325:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1315:44;;;;;;3498:67;;;;;;;;;;-1:-1:-1;;;;;;1537:26:167;;;;1525:39;;1601:2;1597:15;;;;-1:-1:-1;;1593:53:167;1589:1;1580:11;;1573:74;1672:2;1663:12;;1656:28;1709:2;1700:12;;1693:28;1746:2;1737:12;;1314:441;3498:67:39;;;;;;;-1:-1:-1;;3498:67:39;;;;;;3475:100;;3498:67;3475:100;;;;;3214:484;-1:-1:-1;;;;;3214:484:39:o;1832:851::-;2009:8;:18;;;1924:14;2037;;-1:-1:-1;;;;;;2037:14:39;-1:-1:-1;;;;;2037:14:39;;;;;;;2150:26;;;;;;1027:51:167;;;;1094:18;;1087:34;;;1924:14:39;;1000:18:167;;2150:26:39;;;;;;;;;;;;2140:37;;;;;;2125:52;;2234:23;2286:4;2260:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:60;;2408:28;2421:5;2428:7;2408:12;:28::i;:::-;-1:-1:-1;;;;;2387:49:39;2395:8;-1:-1:-1;;;;;2387:49:39;;2381:127;;2460:37;;-1:-1:-1;;;2460:37:39;;;;;;;;;;;2381:127;2554:6;:32;;-1:-1:-1;;;;;;2554:32:39;2583:1;2554:32;;;;;;2596:12;;2667:8;-1:-1:-1;;1832:851:39;;;;:::o;1266:93::-;1325:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1315:44;;;;;;1266:93;:::o;-1:-1:-1:-;;;;;;;;:::o;14:374:167:-;102:6;110;163:2;151:9;142:7;138:23;134:32;131:52;;;179:1;176;169:12;131:52;205:23;;-1:-1:-1;;;;;257:31:167;;247:42;;237:70;;303:1;300;293:12;237:70;326:5;378:2;363:18;;;;350:32;;-1:-1:-1;;;14:374:167:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ERC20LINK_HASH()": "d13053bb",
    "create(address,uint256)": "0ecaea73",
    "getDeployDetails()": "600eb4ba",
    "getForwarder(address,uint256)": "0710fd58"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidForwarderAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20LINK_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract ERC20Forwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployDetails\",\"outputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"details\":\"This factory deploys them using create2 so that the multi token can do      cheap verification of the interfaces before they access sensitive      functions.\",\"kind\":\"dev\",\"methods\":{\"create(address,uint256)\":{\"params\":{\"token\":\"The multitoken which the forwarder should link to\",\"tokenId\":\"The id of the sub token from the multitoken which we are creating                 an interface for.\"},\"returns\":{\"_0\":\"returns the address of the deployed forwarder\"}},\"getDeployDetails()\":{\"returns\":{\"_0\":\"Returns the stored multitoken address and the sub token id\"}},\"getForwarder(address,uint256)\":{\"params\":{\"token\":\"The multitoken which the forwarder should link to\",\"tokenId\":\"The id of the sub token from the multitoken\"},\"returns\":{\"_0\":\"The expected address of the forwarder\"}}},\"title\":\"ForwarderFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidForwarderAddress()\":[{\"notice\":\"############################# ### ERC20ForwarderFactory ### #############################\"}]},\"kind\":\"user\",\"methods\":{\"create(address,uint256)\":{\"notice\":\"Uses create2 to deploy a forwarder at a predictable address as part of         our ERC20 multitoken implementation.\"},\"getDeployDetails()\":{\"notice\":\"Returns the transient storage of this contract\"},\"getForwarder(address,uint256)\":{\"notice\":\"Helper to calculate expected forwarder contract addresses\"}},\"notice\":\"Our MultiToken contract consists of fungible sub-tokens that         are similar to ERC20 tokens. In order to support ERC20 compatibility         we can deploy interfaces which are ERC20s.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/token/ForwarderFactory.sol\":\"ForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"contracts/src/interfaces/IDataProvider.sol\":{\"keccak256\":\"0xb5540e954a8d9311a4ddc94f1b1a893f419965c4059e5f64d3f966fa5d7bf843\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4322256d8ef1c32e16441b7be365169cbbfa72c6d952536ed0c2a4dab5befd15\",\"dweb:/ipfs/QmT1Zx7tHjgW52qb1e5C9KTjTbZaoniFxuyvZb3cWedUu7\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672\",\"dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w\"]},\"contracts/src/interfaces/IForwarderFactory.sol\":{\"keccak256\":\"0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3\",\"dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x5f4ebd8ae035c05b0a1f3f740dba21a1414306796082b814bcaa2e190ab845b7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1353dab25f7e01c7169f602b7d013ff90c77fe36d62d382e179649a10ae41e78\",\"dweb:/ipfs/QmXQdQBcx6rKeVcoV5s7NG52DrqVvhBhgMNQwTxddAstE5\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993\",\"dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt\"]},\"contracts/src/interfaces/IHyperdriveWrite.sol\":{\"keccak256\":\"0xd83e23e1894f3f4812d4812c5775c7a5267f3bfb80148b11f3ede3174ea936bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae5e91bb578ae9271426728ba69689ad659c6450853aa5ef0c52dd6d7c433206\",\"dweb:/ipfs/QmR5VU1UmZ8BN3azCs3zmHkCqJHzDKTUnVecdPjNQr8vYt\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0\",\"dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87\",\"dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939\",\"dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x\"]},\"contracts/src/interfaces/IMultiTokenWrite.sol\":{\"keccak256\":\"0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a\",\"dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe\"]},\"contracts/src/token/ERC20Forwarder.sol\":{\"keccak256\":\"0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034\",\"dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p\"]},\"contracts/src/token/ForwarderFactory.sol\":{\"keccak256\":\"0x96127d3ac11ff1b96bc816735913365618adf73ba6e9304b81ec59d32813106b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2a4c35ad20e307720ed4c643abd739084ae5fabd71112bc2ac9cb576045842e\",\"dweb:/ipfs/QmcoXSNSn4sVSxXFneGFFuR7W1ykbX7Pk79vNW37s7fDQZ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidForwarderAddress"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC20LINK_HASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "contract ERC20Forwarder",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeployDetails",
          "outputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "create(address,uint256)": {
            "params": {
              "token": "The multitoken which the forwarder should link to",
              "tokenId": "The id of the sub token from the multitoken which we are creating                 an interface for."
            },
            "returns": {
              "_0": "returns the address of the deployed forwarder"
            }
          },
          "getDeployDetails()": {
            "returns": {
              "_0": "Returns the stored multitoken address and the sub token id"
            }
          },
          "getForwarder(address,uint256)": {
            "params": {
              "token": "The multitoken which the forwarder should link to",
              "tokenId": "The id of the sub token from the multitoken"
            },
            "returns": {
              "_0": "The expected address of the forwarder"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "create(address,uint256)": {
            "notice": "Uses create2 to deploy a forwarder at a predictable address as part of         our ERC20 multitoken implementation."
          },
          "getDeployDetails()": {
            "notice": "Returns the transient storage of this contract"
          },
          "getForwarder(address,uint256)": {
            "notice": "Helper to calculate expected forwarder contract addresses"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aave/=lib/aave-v3-core/contracts/",
        ":aave-v3-core/=lib/aave-v3-core/",
        ":create3-factory/=lib/yield-daddy/lib/create3-factory/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":yield-daddy/=lib/yield-daddy/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/token/ForwarderFactory.sol": "ForwarderFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/interfaces/IDataProvider.sol": {
        "keccak256": "0xb5540e954a8d9311a4ddc94f1b1a893f419965c4059e5f64d3f966fa5d7bf843",
        "urls": [
          "bzz-raw://4322256d8ef1c32e16441b7be365169cbbfa72c6d952536ed0c2a4dab5befd15",
          "dweb:/ipfs/QmT1Zx7tHjgW52qb1e5C9KTjTbZaoniFxuyvZb3cWedUu7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c",
        "urls": [
          "bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672",
          "dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w"
        ],
        "license": "MIT"
      },
      "contracts/src/interfaces/IForwarderFactory.sol": {
        "keccak256": "0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af",
        "urls": [
          "bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3",
          "dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0x5f4ebd8ae035c05b0a1f3f740dba21a1414306796082b814bcaa2e190ab845b7",
        "urls": [
          "bzz-raw://1353dab25f7e01c7169f602b7d013ff90c77fe36d62d382e179649a10ae41e78",
          "dweb:/ipfs/QmXQdQBcx6rKeVcoV5s7NG52DrqVvhBhgMNQwTxddAstE5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        "urls": [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveWrite.sol": {
        "keccak256": "0xd83e23e1894f3f4812d4812c5775c7a5267f3bfb80148b11f3ede3174ea936bc",
        "urls": [
          "bzz-raw://ae5e91bb578ae9271426728ba69689ad659c6450853aa5ef0c52dd6d7c433206",
          "dweb:/ipfs/QmR5VU1UmZ8BN3azCs3zmHkCqJHzDKTUnVecdPjNQr8vYt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a",
        "urls": [
          "bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0",
          "dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc",
        "urls": [
          "bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87",
          "dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05",
        "urls": [
          "bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939",
          "dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenWrite.sol": {
        "keccak256": "0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8",
        "urls": [
          "bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a",
          "dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/ERC20Forwarder.sol": {
        "keccak256": "0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158",
        "urls": [
          "bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034",
          "dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/ForwarderFactory.sol": {
        "keccak256": "0x96127d3ac11ff1b96bc816735913365618adf73ba6e9304b81ec59d32813106b",
        "urls": [
          "bzz-raw://f2a4c35ad20e307720ed4c643abd739084ae5fabd71112bc2ac9cb576045842e",
          "dweb:/ipfs/QmcoXSNSn4sVSxXFneGFFuR7W1ykbX7Pk79vNW37s7fDQZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/token/ForwarderFactory.sol",
    "id": 11633,
    "exportedSymbols": {
      "ERC20Forwarder": [
        11454
      ],
      "ForwarderFactory": [
        11632
      ],
      "IForwarderFactory": [
        6999
      ],
      "IHyperdrive": [
        7431
      ],
      "IMultiToken": [
        7790
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3662:39",
    "nodes": [
      {
        "id": 11456,
        "nodeType": "PragmaDirective",
        "src": "39:23:39",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 11458,
        "nodeType": "ImportDirective",
        "src": "64:60:39",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IHyperdrive.sol",
        "file": "../interfaces/IHyperdrive.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11633,
        "sourceUnit": 7432,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11457,
              "name": "IHyperdrive",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7431,
              "src": "73:11:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11460,
        "nodeType": "ImportDirective",
        "src": "125:72:39",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IForwarderFactory.sol",
        "file": "../interfaces/IForwarderFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11633,
        "sourceUnit": 7000,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11459,
              "name": "IForwarderFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6999,
              "src": "134:17:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11462,
        "nodeType": "ImportDirective",
        "src": "198:60:39",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IMultiToken.sol",
        "file": "../interfaces/IMultiToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11633,
        "sourceUnit": 7791,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11461,
              "name": "IMultiToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7790,
              "src": "207:11:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11464,
        "nodeType": "ImportDirective",
        "src": "259:54:39",
        "nodes": [],
        "absolutePath": "contracts/src/token/ERC20Forwarder.sol",
        "file": "./ERC20Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11633,
        "sourceUnit": 11455,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11463,
              "name": "ERC20Forwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11454,
              "src": "268:14:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11632,
        "nodeType": "ContractDefinition",
        "src": "968:2732:39",
        "nodes": [
          {
            "id": 11476,
            "nodeType": "VariableDeclaration",
            "src": "1152:52:39",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "1172:6:39",
            "scope": 11632,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMultiToken_$7790",
              "typeString": "contract IMultiToken"
            },
            "typeName": {
              "id": 11469,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11468,
                "name": "IMultiToken",
                "nameLocations": [
                  "1152:11:39"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7790,
                "src": "1152:11:39"
              },
              "referencedDeclaration": 7790,
              "src": "1152:11:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMultiToken_$7790",
                "typeString": "contract IMultiToken"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "31",
                      "id": 11473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1201:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      }
                    ],
                    "id": 11472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1193:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 11471,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:39",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 11474,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1193:10:39",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 11470,
                "name": "IMultiToken",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7790,
                "src": "1181:11:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IMultiToken_$7790_$",
                  "typeString": "type(contract IMultiToken)"
                }
              },
              "id": 11475,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1181:23:39",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMultiToken_$7790",
                "typeString": "contract IMultiToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 11479,
            "nodeType": "VariableDeclaration",
            "src": "1210:28:39",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenId",
            "nameLocation": "1226:8:39",
            "scope": 11632,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11477,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1210:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 11478,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1237:1:39",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 11487,
            "nodeType": "VariableDeclaration",
            "src": "1266:93:39",
            "nodes": [],
            "constant": true,
            "functionSelector": "d13053bb",
            "mutability": "constant",
            "name": "ERC20LINK_HASH",
            "nameLocation": "1290:14:39",
            "scope": 11632,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11480,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1266:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11483,
                        "name": "ERC20Forwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11454,
                        "src": "1330:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Forwarder_$11454_$",
                          "typeString": "type(contract ERC20Forwarder)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Forwarder_$11454_$",
                          "typeString": "type(contract ERC20Forwarder)"
                        }
                      ],
                      "id": 11482,
                      "name": "type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -27,
                      "src": "1325:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 11484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1325:20:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_meta_type_t_contract$_ERC20Forwarder_$11454",
                      "typeString": "type(contract ERC20Forwarder)"
                    }
                  },
                  "id": 11485,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberLocation": "1346:12:39",
                  "memberName": "creationCode",
                  "nodeType": "MemberAccess",
                  "src": "1325:33:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 11481,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1315:9:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 11486,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1315:44:39",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11491,
            "nodeType": "FunctionDefinition",
            "src": "1366:16:39",
            "nodes": [],
            "body": {
              "id": 11490,
              "nodeType": "Block",
              "src": "1380:2:39",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:2:39"
            },
            "returnParameters": {
              "id": 11489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:0:39"
            },
            "scope": 11632,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11566,
            "nodeType": "FunctionDefinition",
            "src": "1832:851:39",
            "nodes": [],
            "body": {
              "id": 11565,
              "nodeType": "Block",
              "src": "1940:743:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 11505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11503,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11479,
                      "src": "2009:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11504,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11497,
                      "src": "2020:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2009:18:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11506,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:18:39"
                },
                {
                  "expression": {
                    "id": 11509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11507,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11476,
                      "src": "2037:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7790",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11508,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11495,
                      "src": "2046:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7790",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "src": "2037:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7790",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "id": 11510,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:14:39"
                },
                {
                  "assignments": [
                    11512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11512,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "2133:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11565,
                      "src": "2125:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 11511,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2125:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11520,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11516,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11495,
                            "src": "2161:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMultiToken_$7790",
                              "typeString": "contract IMultiToken"
                            }
                          },
                          {
                            "id": 11517,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11497,
                            "src": "2168:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMultiToken_$7790",
                              "typeString": "contract IMultiToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11514,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2150:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2154:6:39",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2150:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2150:26:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11513,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2140:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 11519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:37:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2125:52:39"
                },
                {
                  "assignments": [
                    11523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11523,
                      "mutability": "mutable",
                      "name": "deployed",
                      "nameLocation": "2249:8:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11565,
                      "src": "2234:23:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                        "typeString": "contract ERC20Forwarder"
                      },
                      "typeName": {
                        "id": 11522,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11521,
                          "name": "ERC20Forwarder",
                          "nameLocations": [
                            "2234:14:39"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11454,
                          "src": "2234:14:39"
                        },
                        "referencedDeclaration": 11454,
                        "src": "2234:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                          "typeString": "contract ERC20Forwarder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11530,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2260:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Forwarder_$11454_$",
                          "typeString": "function () returns (contract ERC20Forwarder)"
                        },
                        "typeName": {
                          "id": 11525,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11524,
                            "name": "ERC20Forwarder",
                            "nameLocations": [
                              "2264:14:39"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11454,
                            "src": "2264:14:39"
                          },
                          "referencedDeclaration": 11454,
                          "src": "2264:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                            "typeString": "contract ERC20Forwarder"
                          }
                        }
                      },
                      "id": 11528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "salt"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 11527,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11512,
                          "src": "2286:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "src": "2260:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Forwarder_$11454_$salt",
                        "typeString": "function () returns (contract ERC20Forwarder)"
                      }
                    },
                    "id": 11529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:34:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2234:60:39"
                },
                {
                  "condition": {
                    "id": 11541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2385:52:39",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 11533,
                                "name": "deployed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11523,
                                "src": "2395:8:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                                  "typeString": "contract ERC20Forwarder"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                                  "typeString": "contract ERC20Forwarder"
                                }
                              ],
                              "id": 11532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2387:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11531,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2387:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2387:17:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 11536,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11495,
                                "src": "2421:5:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IMultiToken_$7790",
                                  "typeString": "contract IMultiToken"
                                }
                              },
                              {
                                "id": 11537,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11497,
                                "src": "2428:7:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IMultiToken_$7790",
                                  "typeString": "contract IMultiToken"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 11535,
                              "name": "getForwarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11631,
                              "src": "2408:12:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IMultiToken_$7790_$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (contract IMultiToken,uint256) view returns (address)"
                              }
                            },
                            "id": 11538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2408:28:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2387:49:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 11540,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2386:51:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11548,
                  "nodeType": "IfStatement",
                  "src": "2381:127:39",
                  "trueBody": {
                    "id": 11547,
                    "nodeType": "Block",
                    "src": "2439:69:39",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 11542,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7431,
                              "src": "2460:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$7431_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 11544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2472:23:39",
                            "memberName": "InvalidForwarderAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7397,
                            "src": "2460:35:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:37:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11546,
                        "nodeType": "RevertStatement",
                        "src": "2453:44:39"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11549,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11476,
                      "src": "2554:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7790",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 11553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2583:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 11552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2575:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11551,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2575:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2575:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11550,
                        "name": "IMultiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7790,
                        "src": "2563:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMultiToken_$7790_$",
                          "typeString": "type(contract IMultiToken)"
                        }
                      },
                      "id": 11555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2563:23:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7790",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "src": "2554:32:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7790",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "id": 11557,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:32:39"
                },
                {
                  "expression": {
                    "id": 11560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11558,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11479,
                      "src": "2596:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 11559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2607:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2596:12:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11561,
                  "nodeType": "ExpressionStatement",
                  "src": "2596:12:39"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 11562,
                        "name": "deployed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11523,
                        "src": "2667:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                          "typeString": "contract ERC20Forwarder"
                        }
                      }
                    ],
                    "id": 11563,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2666:10:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "functionReturnParameters": 11502,
                  "id": 11564,
                  "nodeType": "Return",
                  "src": "2659:17:39"
                }
              ]
            },
            "documentation": {
              "id": 11492,
              "nodeType": "StructuredDocumentation",
              "src": "1428:399:39",
              "text": "@notice Uses create2 to deploy a forwarder at a predictable address as part of\n         our ERC20 multitoken implementation.\n @param token The multitoken which the forwarder should link to\n @param tokenId The id of the sub token from the multitoken which we are creating\n                 an interface for.\n @return returns the address of the deployed forwarder"
            },
            "functionSelector": "0ecaea73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "1841:6:39",
            "parameters": {
              "id": 11498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11495,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1869:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11566,
                  "src": "1857:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$7790",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 11494,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11493,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "1857:11:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7790,
                      "src": "1857:11:39"
                    },
                    "referencedDeclaration": 7790,
                    "src": "1857:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7790",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11497,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1892:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11566,
                  "src": "1884:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:58:39"
            },
            "returnParameters": {
              "id": 11502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11566,
                  "src": "1924:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                    "typeString": "contract ERC20Forwarder"
                  },
                  "typeName": {
                    "id": 11500,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11499,
                      "name": "ERC20Forwarder",
                      "nameLocations": [
                        "1924:14:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11454,
                      "src": "1924:14:39"
                    },
                    "referencedDeclaration": 11454,
                    "src": "1924:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$11454",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:16:39"
            },
            "scope": 11632,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11580,
            "nodeType": "FunctionDefinition",
            "src": "2827:115:39",
            "nodes": [],
            "body": {
              "id": 11579,
              "nodeType": "Block",
              "src": "2900:42:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 11575,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11476,
                        "src": "2918:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiToken_$7790",
                          "typeString": "contract IMultiToken"
                        }
                      },
                      {
                        "id": 11576,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11479,
                        "src": "2926:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 11577,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2917:18:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IMultiToken_$7790_$_t_uint256_$",
                      "typeString": "tuple(contract IMultiToken,uint256)"
                    }
                  },
                  "functionReturnParameters": 11574,
                  "id": 11578,
                  "nodeType": "Return",
                  "src": "2910:25:39"
                }
              ]
            },
            "baseFunctions": [
              6998
            ],
            "documentation": {
              "id": 11567,
              "nodeType": "StructuredDocumentation",
              "src": "2689:133:39",
              "text": "@notice Returns the transient storage of this contract\n @return Returns the stored multitoken address and the sub token id"
            },
            "functionSelector": "600eb4ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeployDetails",
            "nameLocation": "2836:16:39",
            "parameters": {
              "id": 11568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2852:2:39"
            },
            "returnParameters": {
              "id": 11574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11580,
                  "src": "2878:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$7790",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 11570,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11569,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "2878:11:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7790,
                      "src": "2878:11:39"
                    },
                    "referencedDeclaration": 7790,
                    "src": "2878:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7790",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11573,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11580,
                  "src": "2891:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2877:22:39"
            },
            "scope": 11632,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11631,
            "nodeType": "FunctionDefinition",
            "src": "3214:484:39",
            "nodes": [],
            "body": {
              "id": 11630,
              "nodeType": "Block",
              "src": "3324:374:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11592,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "3398:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11630,
                      "src": "3390:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 11591,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3390:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11600,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11596,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11584,
                            "src": "3426:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMultiToken_$7790",
                              "typeString": "contract IMultiToken"
                            }
                          },
                          {
                            "id": 11597,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11586,
                            "src": "3433:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMultiToken_$7790",
                              "typeString": "contract IMultiToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11594,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3415:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3419:6:39",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3415:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3415:26:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11593,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3405:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 11599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3405:37:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3390:52:39"
                },
                {
                  "assignments": [
                    11602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11602,
                      "mutability": "mutable",
                      "name": "addressBytes",
                      "nameLocation": "3460:12:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 11630,
                      "src": "3452:20:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 11601,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3452:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11618,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30786666",
                                "id": 11608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3522:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                },
                                "value": "0xff"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                }
                              ],
                              "id": 11607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3515:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 11606,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "3515:6:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3515:12:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 11612,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3537:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForwarderFactory_$11632",
                                  "typeString": "contract ForwarderFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForwarderFactory_$11632",
                                  "typeString": "contract ForwarderFactory"
                                }
                              ],
                              "id": 11611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3529:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11610,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3529:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3529:13:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11614,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11592,
                            "src": "3544:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 11615,
                            "name": "ERC20LINK_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11487,
                            "src": "3550:14:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 11604,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3498:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3502:12:39",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3498:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3498:67:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11603,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3475:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 11617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:100:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3452:123:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11625,
                                "name": "addressBytes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11602,
                                "src": "3676:12:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 11624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3668:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 11623,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3668:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3668:21:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3660:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 11621,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "3660:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3660:30:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 11620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3652:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 11619,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3652:7:39",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 11628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3652:39:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11590,
                  "id": 11629,
                  "nodeType": "Return",
                  "src": "3645:46:39"
                }
              ]
            },
            "documentation": {
              "id": 11581,
              "nodeType": "StructuredDocumentation",
              "src": "2948:261:39",
              "text": "@notice Helper to calculate expected forwarder contract addresses\n @param token The multitoken which the forwarder should link to\n @param tokenId The id of the sub token from the multitoken\n @return The expected address of the forwarder"
            },
            "functionSelector": "0710fd58",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getForwarder",
            "nameLocation": "3223:12:39",
            "parameters": {
              "id": 11587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11584,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3257:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11631,
                  "src": "3245:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$7790",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 11583,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11582,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "3245:11:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7790,
                      "src": "3245:11:39"
                    },
                    "referencedDeclaration": 7790,
                    "src": "3245:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7790",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11586,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3280:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11631,
                  "src": "3272:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3235:58:39"
            },
            "returnParameters": {
              "id": 11590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11589,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11631,
                  "src": "3315:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:9:39"
            },
            "scope": 11632,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11466,
              "name": "IForwarderFactory",
              "nameLocations": [
                "997:17:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6999,
              "src": "997:17:39"
            },
            "id": 11467,
            "nodeType": "InheritanceSpecifier",
            "src": "997:17:39"
          }
        ],
        "canonicalName": "ForwarderFactory",
        "contractDependencies": [
          11454
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11465,
          "nodeType": "StructuredDocumentation",
          "src": "315:653:39",
          "text": "@author DELV\n @title ForwarderFactory\n @notice Our MultiToken contract consists of fungible sub-tokens that\n         are similar to ERC20 tokens. In order to support ERC20 compatibility\n         we can deploy interfaces which are ERC20s.\n @dev This factory deploys them using create2 so that the multi token can do\n      cheap verification of the interfaces before they access sensitive\n      functions.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11632,
          6999
        ],
        "name": "ForwarderFactory",
        "nameLocation": "977:16:39",
        "scope": 11633,
        "usedErrors": [
          7397
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 39
}