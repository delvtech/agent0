{
  "abi": [
    {
      "inputs": [],
      "name": "InvalidForwarderAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20LINK_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "__token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "__tokenId",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "contract ERC20Forwarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployDetails",
      "outputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "__token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "__tokenId",
          "type": "uint256"
        }
      ],
      "name": "getForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "968:2713:48:-:0;;;1152:52;;;-1:-1:-1;;;;;;1152:52:48;1201:1;1152:52;;;;;;1210:28;;968:2713;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "968:2713:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3184:495;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;557:32:149;;;539:51;;527:2;512:18;3184:495:48;;;;;;;;1767:876;;;;;;:::i;:::-;;:::i;2789:115::-;;2840:11;2880:6;;2888:8;-1:-1:-1;;;;;2880:6:48;;;;2789:115;;;;;-1:-1:-1;;;;;1045:32:149;;;1027:51;;1109:2;1094:18;;1087:34;;;;1000:18;2789:115:48;833:294:149;1266:93:48;;;:::i;:::-;;;1278:25:149;;;1266:2;1251:18;1266:93:48;1132:177:149;3184:495:48;3390:30;;;-1:-1:-1;;;;;1045:32:149;;3390:30:48;;;1027:51:149;1094:18;;;1087:34;;;3289:7:48;;;;1000:18:149;;3390:30:48;;;;;;;;;;;;3380:41;;;;;;3365:56;;3431:20;3501:4;3494:12;;3516:4;3523;1325:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1315:44;;;;;;3477:67;;;;;;;;;;-1:-1:-1;;;;;;1537:26:149;;;;1525:39;;1601:2;1597:15;;;;-1:-1:-1;;1593:53:149;1589:1;1580:11;;1573:74;1672:2;1663:12;;1656:28;1709:2;1700:12;;1693:28;1746:2;1737:12;;1314:441;3477:67:48;;;;;;;-1:-1:-1;;3477:67:48;;;;;;3454:100;;3477:67;3454:100;;;;;3184:495;-1:-1:-1;;;;;3184:495:48:o;1767:876::-;1949:8;:20;;;1863:14;1979:16;;-1:-1:-1;;;;;;1979:16:48;-1:-1:-1;;;;;1979:16:48;;;;;;;2096:30;;;;;;1027:51:149;;;;1094:18;;1087:34;;;1863:14:48;;1000:18:149;;2096:30:48;;;;;;;;;;;;2086:41;;;;;;2071:56;;2186:23;2238:4;2212:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:60;;2362:32;2375:7;2384:9;2362:12;:32::i;:::-;-1:-1:-1;;;;;2341:53:48;2349:8;-1:-1:-1;;;;;2341:53:48;;2335:131;;2418:37;;-1:-1:-1;;;2418:37:48;;;;;;;;;;;2335:131;2514:6;:32;;-1:-1:-1;;;;;;2514:32:48;2543:1;2514:32;;;;;;2556:12;;2628:8;-1:-1:-1;;1767:876:48;;;;:::o;1266:93::-;1325:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1315:44;;;;;;1266:93;:::o;-1:-1:-1:-;;;;;;;;:::o;14:374:149:-;102:6;110;163:2;151:9;142:7;138:23;134:32;131:52;;;179:1;176;169:12;131:52;205:23;;-1:-1:-1;;;;;257:31:149;;247:42;;237:70;;303:1;300;293:12;237:70;326:5;378:2;363:18;;;;350:32;;-1:-1:-1;;;14:374:149:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ERC20LINK_HASH()": "d13053bb",
    "create(address,uint256)": "0ecaea73",
    "getDeployDetails()": "600eb4ba",
    "getForwarder(address,uint256)": "0710fd58"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidForwarderAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20LINK_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"__token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__tokenId\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract ERC20Forwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployDetails\",\"outputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"__token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__tokenId\",\"type\":\"uint256\"}],\"name\":\"getForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"details\":\"This factory deploys them using create2 so that the multi token can do      cheap verification of the interfaces before they access sensitive      functions.\",\"kind\":\"dev\",\"methods\":{\"create(address,uint256)\":{\"params\":{\"__token\":\"The multitoken which the forwarder should link to.\",\"__tokenId\":\"The id of the sub token from the multitoken which we are        creating an interface for.\"},\"returns\":{\"_0\":\"Returns the address of the deployed forwarder.\"}},\"getDeployDetails()\":{\"returns\":{\"_0\":\"Returns the stored multitoken address and the sub token id.\"}},\"getForwarder(address,uint256)\":{\"params\":{\"__token\":\"The multitoken which the forwarder should link to.\",\"__tokenId\":\"The id of the sub token from the multitoken.\"},\"returns\":{\"_0\":\"The expected address of the forwarder.\"}}},\"title\":\"ForwarderFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidForwarderAddress()\":[{\"notice\":\"############################# ### ERC20ForwarderFactory ### #############################\"}]},\"kind\":\"user\",\"methods\":{\"create(address,uint256)\":{\"notice\":\"Uses create2 to deploy a forwarder at a predictable address as         part of our ERC20 multitoken implementation.\"},\"getDeployDetails()\":{\"notice\":\"Returns the transient storage of this contract.\"},\"getForwarder(address,uint256)\":{\"notice\":\"Helper to calculate expected forwarder contract addresses.\"}},\"notice\":\"Our MultiToken contract consists of fungible sub-tokens that         are similar to ERC20 tokens. In order to support ERC20 compatibility         we can deploy interfaces which are ERC20s.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/token/ForwarderFactory.sol\":\"ForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0xfb57fe2ee4d8d1c6a8e2aa3b007da6f0e53d65388245b0b7d876234077ee95b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4303c41b9752b51c6eaa9b16aa11e5bffb34fc80c5c8761302539cd5922ae36\",\"dweb:/ipfs/QmZjVYBikfgPDX47hmbGJpG6kvm3Gyt6nKkFbZH6r8U4cL\"]},\"contracts/src/interfaces/IForwarderFactory.sol\":{\"keccak256\":\"0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3\",\"dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x833d56790728bfab7d35507b8584dc7ce607b26512a382e887483f61d528f6c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3dd009d6ff5a89d1173f7330916e81a31ffd139bf6848b3f4400673652554a70\",\"dweb:/ipfs/QmXkVovZSWqhRqrt8y9FFfHt1HWhnUuP9TMecQyd89yEQ3\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x84c73d8c4b67da41635f57fce2f30b8f04fc826ff6fb54c605de23d376f3403d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e6d636dff5c24916ae35a76695d741de2f14ee46876ea67c5393618bb7f9cf85\",\"dweb:/ipfs/QmUwxh8JeAqSFA8Z2qabVx3YWRSz7PJ9V2TQgnfctAgqPF\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993\",\"dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xcf3a4002275ea64e381f0a4aded3683e12960396ef79ba9dd153e2d1e395baad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9990491f7a5151fd696a45e6e5b0282a1dedf58521861dfb8c64db8cb60f5b6\",\"dweb:/ipfs/QmaywmqqQhz7DeYqZdoeykagr5h4ZhQRv6GasHqvdWqzSy\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0xdb7f24663cff7307a468ef5e4c6f3e4d01ec0475157b3bbb3405890c3e9ab87d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7f631a9a395fba5b07c3d9308fccac18d5aa59d890efe23442ed2a4da9871ae8\",\"dweb:/ipfs/QmV2a4wiAPfWzSST3faYt58i2tqEyoqCLAJV8aNCdJyxVE\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0x476240ea4328bae9ab820b6f0f40afb11c74ee52d26bdbef69e4ece28dc10bdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://843f73cb21eaec4e26952fd6cbde5e6815e3a28c438df9e026e249200d25076f\",\"dweb:/ipfs/QmXzE7gsRKMaRGQfTDodA1RXxNxUuBj8RT7grTYjZUdbe6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x9b92d81f2f038fcd4bb5d069ab2b754efc153234c451d4ee4caa6d74aaca16b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8686fddc99564c6b6524ea68a6b7ff081a9988fc795fc13197bb59ddaa2041c6\",\"dweb:/ipfs/QmarJYJAgoH6Z4H1BmdPoRgqLubRu5S6NDXBNV2fDApPuW\"]},\"contracts/src/token/ERC20Forwarder.sol\":{\"keccak256\":\"0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034\",\"dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p\"]},\"contracts/src/token/ForwarderFactory.sol\":{\"keccak256\":\"0x65bf95eaecd1edc73ecf5ba22e484d5c15f893acbc92aa28d88cc574a8903c33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1367a2109705082a3adf8adda8fea6a0c3f147ea81a10e74657b57c98405d9a9\",\"dweb:/ipfs/QmbiHDB7nXxd62BrFFRwjoobQH2Kq9FcWLW1hUB2yUxuJe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidForwarderAddress"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC20LINK_HASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "__token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "__tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "contract ERC20Forwarder",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeployDetails",
          "outputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "__token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "__tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "create(address,uint256)": {
            "params": {
              "__token": "The multitoken which the forwarder should link to.",
              "__tokenId": "The id of the sub token from the multitoken which we are        creating an interface for."
            },
            "returns": {
              "_0": "Returns the address of the deployed forwarder."
            }
          },
          "getDeployDetails()": {
            "returns": {
              "_0": "Returns the stored multitoken address and the sub token id."
            }
          },
          "getForwarder(address,uint256)": {
            "params": {
              "__token": "The multitoken which the forwarder should link to.",
              "__tokenId": "The id of the sub token from the multitoken."
            },
            "returns": {
              "_0": "The expected address of the forwarder."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "create(address,uint256)": {
            "notice": "Uses create2 to deploy a forwarder at a predictable address as         part of our ERC20 multitoken implementation."
          },
          "getDeployDetails()": {
            "notice": "Returns the transient storage of this contract."
          },
          "getForwarder(address,uint256)": {
            "notice": "Helper to calculate expected forwarder contract addresses."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":aave-v3-core/=lib/aave-v3-core/",
        ":create3-factory/=lib/yield-daddy/lib/create3-factory/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":yield-daddy/=lib/yield-daddy/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/token/ForwarderFactory.sol": "ForwarderFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0xfb57fe2ee4d8d1c6a8e2aa3b007da6f0e53d65388245b0b7d876234077ee95b4",
        "urls": [
          "bzz-raw://e4303c41b9752b51c6eaa9b16aa11e5bffb34fc80c5c8761302539cd5922ae36",
          "dweb:/ipfs/QmZjVYBikfgPDX47hmbGJpG6kvm3Gyt6nKkFbZH6r8U4cL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IForwarderFactory.sol": {
        "keccak256": "0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af",
        "urls": [
          "bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3",
          "dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0x833d56790728bfab7d35507b8584dc7ce607b26512a382e887483f61d528f6c5",
        "urls": [
          "bzz-raw://3dd009d6ff5a89d1173f7330916e81a31ffd139bf6848b3f4400673652554a70",
          "dweb:/ipfs/QmXkVovZSWqhRqrt8y9FFfHt1HWhnUuP9TMecQyd89yEQ3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveCore.sol": {
        "keccak256": "0x84c73d8c4b67da41635f57fce2f30b8f04fc826ff6fb54c605de23d376f3403d",
        "urls": [
          "bzz-raw://e6d636dff5c24916ae35a76695d741de2f14ee46876ea67c5393618bb7f9cf85",
          "dweb:/ipfs/QmUwxh8JeAqSFA8Z2qabVx3YWRSz7PJ9V2TQgnfctAgqPF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        "urls": [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xcf3a4002275ea64e381f0a4aded3683e12960396ef79ba9dd153e2d1e395baad",
        "urls": [
          "bzz-raw://c9990491f7a5151fd696a45e6e5b0282a1dedf58521861dfb8c64db8cb60f5b6",
          "dweb:/ipfs/QmaywmqqQhz7DeYqZdoeykagr5h4ZhQRv6GasHqvdWqzSy"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenCore.sol": {
        "keccak256": "0xdb7f24663cff7307a468ef5e4c6f3e4d01ec0475157b3bbb3405890c3e9ab87d",
        "urls": [
          "bzz-raw://7f631a9a395fba5b07c3d9308fccac18d5aa59d890efe23442ed2a4da9871ae8",
          "dweb:/ipfs/QmV2a4wiAPfWzSST3faYt58i2tqEyoqCLAJV8aNCdJyxVE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0x476240ea4328bae9ab820b6f0f40afb11c74ee52d26bdbef69e4ece28dc10bdb",
        "urls": [
          "bzz-raw://843f73cb21eaec4e26952fd6cbde5e6815e3a28c438df9e026e249200d25076f",
          "dweb:/ipfs/QmXzE7gsRKMaRGQfTDodA1RXxNxUuBj8RT7grTYjZUdbe6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x9b92d81f2f038fcd4bb5d069ab2b754efc153234c451d4ee4caa6d74aaca16b4",
        "urls": [
          "bzz-raw://8686fddc99564c6b6524ea68a6b7ff081a9988fc795fc13197bb59ddaa2041c6",
          "dweb:/ipfs/QmarJYJAgoH6Z4H1BmdPoRgqLubRu5S6NDXBNV2fDApPuW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/ERC20Forwarder.sol": {
        "keccak256": "0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158",
        "urls": [
          "bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034",
          "dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/ForwarderFactory.sol": {
        "keccak256": "0x65bf95eaecd1edc73ecf5ba22e484d5c15f893acbc92aa28d88cc574a8903c33",
        "urls": [
          "bzz-raw://1367a2109705082a3adf8adda8fea6a0c3f147ea81a10e74657b57c98405d9a9",
          "dweb:/ipfs/QmbiHDB7nXxd62BrFFRwjoobQH2Kq9FcWLW1hUB2yUxuJe"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/token/ForwarderFactory.sol",
    "id": 13070,
    "exportedSymbols": {
      "ERC20Forwarder": [
        12896
      ],
      "ForwarderFactory": [
        13069
      ],
      "IForwarderFactory": [
        3320
      ],
      "IHyperdrive": [
        3759
      ],
      "IMultiToken": [
        4168
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3643:48",
    "nodes": [
      {
        "id": 12898,
        "nodeType": "PragmaDirective",
        "src": "39:23:48",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 12900,
        "nodeType": "ImportDirective",
        "src": "64:60:48",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IHyperdrive.sol",
        "file": "../interfaces/IHyperdrive.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13070,
        "sourceUnit": 3760,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12899,
              "name": "IHyperdrive",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3759,
              "src": "73:11:48",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12902,
        "nodeType": "ImportDirective",
        "src": "125:72:48",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IForwarderFactory.sol",
        "file": "../interfaces/IForwarderFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13070,
        "sourceUnit": 3321,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12901,
              "name": "IForwarderFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3320,
              "src": "134:17:48",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12904,
        "nodeType": "ImportDirective",
        "src": "198:60:48",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IMultiToken.sol",
        "file": "../interfaces/IMultiToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13070,
        "sourceUnit": 4169,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12903,
              "name": "IMultiToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4168,
              "src": "207:11:48",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12906,
        "nodeType": "ImportDirective",
        "src": "259:54:48",
        "nodes": [],
        "absolutePath": "contracts/src/token/ERC20Forwarder.sol",
        "file": "./ERC20Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13070,
        "sourceUnit": 12897,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12905,
              "name": "ERC20Forwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12896,
              "src": "268:14:48",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13069,
        "nodeType": "ContractDefinition",
        "src": "968:2713:48",
        "nodes": [
          {
            "id": 12918,
            "nodeType": "VariableDeclaration",
            "src": "1152:52:48",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "1172:6:48",
            "scope": 13069,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMultiToken_$4168",
              "typeString": "contract IMultiToken"
            },
            "typeName": {
              "id": 12911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12910,
                "name": "IMultiToken",
                "nameLocations": [
                  "1152:11:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4168,
                "src": "1152:11:48"
              },
              "referencedDeclaration": 4168,
              "src": "1152:11:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMultiToken_$4168",
                "typeString": "contract IMultiToken"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "31",
                      "id": 12915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1201:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      }
                    ],
                    "id": 12914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1193:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 12913,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:48",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 12916,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1193:10:48",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 12912,
                "name": "IMultiToken",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4168,
                "src": "1181:11:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IMultiToken_$4168_$",
                  "typeString": "type(contract IMultiToken)"
                }
              },
              "id": 12917,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1181:23:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMultiToken_$4168",
                "typeString": "contract IMultiToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 12921,
            "nodeType": "VariableDeclaration",
            "src": "1210:28:48",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenId",
            "nameLocation": "1226:8:48",
            "scope": 13069,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12919,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1210:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 12920,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1237:1:48",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 12929,
            "nodeType": "VariableDeclaration",
            "src": "1266:93:48",
            "nodes": [],
            "constant": true,
            "functionSelector": "d13053bb",
            "mutability": "constant",
            "name": "ERC20LINK_HASH",
            "nameLocation": "1290:14:48",
            "scope": 13069,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12922,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1266:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12925,
                        "name": "ERC20Forwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12896,
                        "src": "1330:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Forwarder_$12896_$",
                          "typeString": "type(contract ERC20Forwarder)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Forwarder_$12896_$",
                          "typeString": "type(contract ERC20Forwarder)"
                        }
                      ],
                      "id": 12924,
                      "name": "type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -27,
                      "src": "1325:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 12926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1325:20:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_meta_type_t_contract$_ERC20Forwarder_$12896",
                      "typeString": "type(contract ERC20Forwarder)"
                    }
                  },
                  "id": 12927,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberLocation": "1346:12:48",
                  "memberName": "creationCode",
                  "nodeType": "MemberAccess",
                  "src": "1325:33:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 12923,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1315:9:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12928,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1315:44:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13003,
            "nodeType": "FunctionDefinition",
            "src": "1767:876:48",
            "nodes": [],
            "body": {
              "id": 13002,
              "nodeType": "Block",
              "src": "1879:764:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12941,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12921,
                      "src": "1949:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12942,
                      "name": "__tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12935,
                      "src": "1960:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1949:20:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12944,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:20:48"
                },
                {
                  "expression": {
                    "id": 12947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12945,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12918,
                      "src": "1979:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$4168",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12946,
                      "name": "__token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12933,
                      "src": "1988:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$4168",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "src": "1979:16:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$4168",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "id": 12948,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:16:48"
                },
                {
                  "assignments": [
                    12950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12950,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "2079:4:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 13002,
                      "src": "2071:12:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 12949,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2071:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12958,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12954,
                            "name": "__token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12933,
                            "src": "2107:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMultiToken_$4168",
                              "typeString": "contract IMultiToken"
                            }
                          },
                          {
                            "id": 12955,
                            "name": "__tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12935,
                            "src": "2116:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMultiToken_$4168",
                              "typeString": "contract IMultiToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 12952,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2096:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 12953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2100:6:48",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2096:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 12956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:30:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 12951,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2086:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 12957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:41:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2071:56:48"
                },
                {
                  "assignments": [
                    12961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12961,
                      "mutability": "mutable",
                      "name": "deployed",
                      "nameLocation": "2201:8:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 13002,
                      "src": "2186:23:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                        "typeString": "contract ERC20Forwarder"
                      },
                      "typeName": {
                        "id": 12960,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12959,
                          "name": "ERC20Forwarder",
                          "nameLocations": [
                            "2186:14:48"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12896,
                          "src": "2186:14:48"
                        },
                        "referencedDeclaration": 12896,
                        "src": "2186:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                          "typeString": "contract ERC20Forwarder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12968,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2212:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Forwarder_$12896_$",
                          "typeString": "function () returns (contract ERC20Forwarder)"
                        },
                        "typeName": {
                          "id": 12963,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12962,
                            "name": "ERC20Forwarder",
                            "nameLocations": [
                              "2216:14:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12896,
                            "src": "2216:14:48"
                          },
                          "referencedDeclaration": 12896,
                          "src": "2216:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                            "typeString": "contract ERC20Forwarder"
                          }
                        }
                      },
                      "id": 12966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "salt"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 12965,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12950,
                          "src": "2238:4:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "src": "2212:32:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Forwarder_$12896_$salt",
                        "typeString": "function () returns (contract ERC20Forwarder)"
                      }
                    },
                    "id": 12967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:34:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2186:60:48"
                },
                {
                  "condition": {
                    "id": 12979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2339:56:48",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 12971,
                                "name": "deployed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12961,
                                "src": "2349:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                                  "typeString": "contract ERC20Forwarder"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                                  "typeString": "contract ERC20Forwarder"
                                }
                              ],
                              "id": 12970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2341:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12969,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2341:7:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2341:17:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 12974,
                                "name": "__token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12933,
                                "src": "2375:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IMultiToken_$4168",
                                  "typeString": "contract IMultiToken"
                                }
                              },
                              {
                                "id": 12975,
                                "name": "__tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12935,
                                "src": "2384:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IMultiToken_$4168",
                                  "typeString": "contract IMultiToken"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 12973,
                              "name": "getForwarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13068,
                              "src": "2362:12:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IMultiToken_$4168_$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (contract IMultiToken,uint256) view returns (address)"
                              }
                            },
                            "id": 12976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2362:32:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2341:53:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 12978,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2340:55:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12986,
                  "nodeType": "IfStatement",
                  "src": "2335:131:48",
                  "trueBody": {
                    "id": 12985,
                    "nodeType": "Block",
                    "src": "2397:69:48",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 12980,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3759,
                              "src": "2418:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$3759_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 12982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2430:23:48",
                            "memberName": "InvalidForwarderAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3714,
                            "src": "2418:35:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2418:37:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12984,
                        "nodeType": "RevertStatement",
                        "src": "2411:44:48"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12987,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12918,
                      "src": "2514:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$4168",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 12991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2543:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 12990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2535:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12989,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2535:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12988,
                        "name": "IMultiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4168,
                        "src": "2523:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMultiToken_$4168_$",
                          "typeString": "type(contract IMultiToken)"
                        }
                      },
                      "id": 12993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2523:23:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$4168",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "src": "2514:32:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$4168",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "id": 12995,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:32:48"
                },
                {
                  "expression": {
                    "id": 12998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12996,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12921,
                      "src": "2556:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 12997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2567:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2556:12:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12999,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:12:48"
                },
                {
                  "expression": {
                    "id": 13000,
                    "name": "deployed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12961,
                    "src": "2628:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "functionReturnParameters": 12940,
                  "id": 13001,
                  "nodeType": "Return",
                  "src": "2621:15:48"
                }
              ]
            },
            "documentation": {
              "id": 12930,
              "nodeType": "StructuredDocumentation",
              "src": "1366:396:48",
              "text": "@notice Uses create2 to deploy a forwarder at a predictable address as\n         part of our ERC20 multitoken implementation.\n @param __token The multitoken which the forwarder should link to.\n @param __tokenId The id of the sub token from the multitoken which we are\n        creating an interface for.\n @return Returns the address of the deployed forwarder."
            },
            "functionSelector": "0ecaea73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "1776:6:48",
            "parameters": {
              "id": 12936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12933,
                  "mutability": "mutable",
                  "name": "__token",
                  "nameLocation": "1804:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 13003,
                  "src": "1792:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$4168",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 12932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12931,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "1792:11:48"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4168,
                      "src": "1792:11:48"
                    },
                    "referencedDeclaration": 4168,
                    "src": "1792:11:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$4168",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12935,
                  "mutability": "mutable",
                  "name": "__tokenId",
                  "nameLocation": "1829:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 13003,
                  "src": "1821:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1821:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:62:48"
            },
            "returnParameters": {
              "id": 12940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13003,
                  "src": "1863:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                    "typeString": "contract ERC20Forwarder"
                  },
                  "typeName": {
                    "id": 12938,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12937,
                      "name": "ERC20Forwarder",
                      "nameLocations": [
                        "1863:14:48"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12896,
                      "src": "1863:14:48"
                    },
                    "referencedDeclaration": 12896,
                    "src": "1863:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$12896",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1862:16:48"
            },
            "scope": 13069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13017,
            "nodeType": "FunctionDefinition",
            "src": "2789:115:48",
            "nodes": [],
            "body": {
              "id": 13016,
              "nodeType": "Block",
              "src": "2862:42:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 13012,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12918,
                        "src": "2880:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiToken_$4168",
                          "typeString": "contract IMultiToken"
                        }
                      },
                      {
                        "id": 13013,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12921,
                        "src": "2888:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 13014,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2879:18:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IMultiToken_$4168_$_t_uint256_$",
                      "typeString": "tuple(contract IMultiToken,uint256)"
                    }
                  },
                  "functionReturnParameters": 13011,
                  "id": 13015,
                  "nodeType": "Return",
                  "src": "2872:25:48"
                }
              ]
            },
            "baseFunctions": [
              3319
            ],
            "documentation": {
              "id": 13004,
              "nodeType": "StructuredDocumentation",
              "src": "2649:135:48",
              "text": "@notice Returns the transient storage of this contract.\n @return Returns the stored multitoken address and the sub token id."
            },
            "functionSelector": "600eb4ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeployDetails",
            "nameLocation": "2798:16:48",
            "parameters": {
              "id": 13005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2814:2:48"
            },
            "returnParameters": {
              "id": 13011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13017,
                  "src": "2840:11:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$4168",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 13007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13006,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "2840:11:48"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4168,
                      "src": "2840:11:48"
                    },
                    "referencedDeclaration": 4168,
                    "src": "2840:11:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$4168",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13010,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13017,
                  "src": "2853:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2839:22:48"
            },
            "scope": 13069,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13068,
            "nodeType": "FunctionDefinition",
            "src": "3184:495:48",
            "nodes": [],
            "body": {
              "id": 13067,
              "nodeType": "Block",
              "src": "3298:381:48",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13029,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "3373:4:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 13067,
                      "src": "3365:12:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13028,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3365:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13037,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13033,
                            "name": "__token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13021,
                            "src": "3401:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMultiToken_$4168",
                              "typeString": "contract IMultiToken"
                            }
                          },
                          {
                            "id": 13034,
                            "name": "__tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13023,
                            "src": "3410:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMultiToken_$4168",
                              "typeString": "contract IMultiToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 13031,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3390:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3394:6:48",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3390:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 13035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3390:30:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13030,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3380:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:41:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3365:56:48"
                },
                {
                  "assignments": [
                    13039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13039,
                      "mutability": "mutable",
                      "name": "addressBytes",
                      "nameLocation": "3439:12:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 13067,
                      "src": "3431:20:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13038,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3431:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13055,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30786666",
                                "id": 13045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3501:4:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                },
                                "value": "0xff"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                }
                              ],
                              "id": 13044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3494:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 13043,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "3494:6:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3494:12:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 13049,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3516:4:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForwarderFactory_$13069",
                                  "typeString": "contract ForwarderFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForwarderFactory_$13069",
                                  "typeString": "contract ForwarderFactory"
                                }
                              ],
                              "id": 13048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3508:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13047,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3508:7:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3508:13:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13051,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13029,
                            "src": "3523:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 13052,
                            "name": "ERC20LINK_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12929,
                            "src": "3529:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 13041,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3477:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3481:12:48",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3477:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 13053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3477:67:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13040,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3454:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:100:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3431:123:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13062,
                                "name": "addressBytes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13039,
                                "src": "3657:12:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 13061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3649:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 13060,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3649:7:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3649:21:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3641:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 13058,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "3641:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3641:30:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 13057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3633:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 13056,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3633:7:48",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 13065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3633:39:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13027,
                  "id": 13066,
                  "nodeType": "Return",
                  "src": "3626:46:48"
                }
              ]
            },
            "documentation": {
              "id": 13018,
              "nodeType": "StructuredDocumentation",
              "src": "2910:269:48",
              "text": "@notice Helper to calculate expected forwarder contract addresses.\n @param __token The multitoken which the forwarder should link to.\n @param __tokenId The id of the sub token from the multitoken.\n @return The expected address of the forwarder."
            },
            "functionSelector": "0710fd58",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getForwarder",
            "nameLocation": "3193:12:48",
            "parameters": {
              "id": 13024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13021,
                  "mutability": "mutable",
                  "name": "__token",
                  "nameLocation": "3227:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 13068,
                  "src": "3215:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$4168",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 13020,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13019,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "3215:11:48"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4168,
                      "src": "3215:11:48"
                    },
                    "referencedDeclaration": 4168,
                    "src": "3215:11:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$4168",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13023,
                  "mutability": "mutable",
                  "name": "__tokenId",
                  "nameLocation": "3252:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 13068,
                  "src": "3244:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3205:62:48"
            },
            "returnParameters": {
              "id": 13027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13068,
                  "src": "3289:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:9:48"
            },
            "scope": 13069,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12908,
              "name": "IForwarderFactory",
              "nameLocations": [
                "997:17:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3320,
              "src": "997:17:48"
            },
            "id": 12909,
            "nodeType": "InheritanceSpecifier",
            "src": "997:17:48"
          }
        ],
        "canonicalName": "ForwarderFactory",
        "contractDependencies": [
          12896
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 12907,
          "nodeType": "StructuredDocumentation",
          "src": "315:653:48",
          "text": "@author DELV\n @title ForwarderFactory\n @notice Our MultiToken contract consists of fungible sub-tokens that\n         are similar to ERC20 tokens. In order to support ERC20 compatibility\n         we can deploy interfaces which are ERC20s.\n @dev This factory deploys them using create2 so that the multi token can do\n      cheap verification of the interfaces before they access sensitive\n      functions.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13069,
          3320
        ],
        "name": "ForwarderFactory",
        "nameLocation": "977:16:48",
        "scope": 13070,
        "usedErrors": [
          3714
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 48
}