{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ERC20LINK_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "contract ERC20Forwarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployDetails",
      "outputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMultiToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600080546001600160a01b0319166001908117909155805534801561002857600080fd5b506115ff806100386000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630710fd58146100515780630ecaea7314610081578063600eb4ba14610094578063d13053bb146100ca575b600080fd5b61006461005f3660046102b9565b6100e0565b6040516001600160a01b0390911681526020015b60405180910390f35b61006461008f3660046102b9565b6101b5565b6100ab6000546001546001600160a01b0390911691565b604080516001600160a01b039093168352602083019190915201610078565b6100d261027f565b604051908152602001610078565b604080516001600160a01b03841660208201529081018290526000908190606001604051602081830303815290604052805190602001209050600060ff60f81b308360405180602001610132906102ac565b6020820181038252601f19601f820116604052508051906020012060405160200161019494939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b60408051808303601f19018152919052805160209091012095945050505050565b6001819055600080546001600160a01b0319166001600160a01b038416908117825560408051602081019290925281018390528190606001604051602081830303815290604052805190602001209050600081604051610214906102ac565b8190604051809103906000f5905080158015610234573d6000803e3d6000fd5b50905061024185856100e0565b6001600160a01b0316816001600160a01b03161461025e57600080fd5b600080546001600160a01b0319166001908117909155805591505092915050565b60405161028e602082016102ac565b6020820181038252601f19601f820116604052508051906020012081565b6112d8806102f283390190565b600080604083850312156102cc57600080fd5b82356001600160a01b03811681146102e357600080fd5b94602093909301359350505056fe60e06040523480156200001157600080fd5b50604080516330075a5d60e11b815281513392839263600eb4ba926004808301939282900301816000875af11580156200004f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200007591906200019c565b60a08190526001600160a01b039091166080819052604051622b600360e21b81527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9262ad800c91620000cf919060040190815260200190565b600060405180830381865afa158015620000ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001179190810190620001ee565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060c05250620002c3565b60008060408385031215620001b057600080fd5b82516001600160a01b0381168114620001c857600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200020257600080fd5b82516001600160401b03808211156200021a57600080fd5b818501915085601f8301126200022f57600080fd5b815181811115620002445762000244620001d8565b604051601f8201601f19908116603f011681019083821181831017156200026f576200026f620001d8565b8160405282815288868487010111156200028857600080fd5b600093505b82841015620002ac57848401860151818501870152928501926200028d565b600086848301015280965050505050505092915050565b60805160a05160c051610f596200037f600039600081816101c601526108fc015260008181610140015281816102ab0152818161035f0152818161045d015281816105080152818161061a015281816106cf0152818161073e01528181610a0d0152610bb3015260008181610263015281816102d4015281816103a5015281816104860152818161055601528181610653015281816106f80152818161078e01528181610a4a01528181610b290152610bf10152610f596000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e51511610097578063a9059cbb11610066578063a9059cbb14610223578063d505accf14610236578063dd62ed3e1461024b578063fc0c546a1461025e57600080fd5b80633644e515146101c157806370a08231146101e85780637ecebe00146101fb57806395d89b411461021b57600080fd5b806318160ddd116100d357806318160ddd1461017057806323b872dd1461017857806330adf81f1461018b578063313ce567146101b257600080fd5b806306fdde03146100fa578063095ea7b31461011857806317d70f7c1461013b575b600080fd5b61010261029d565b60405161010f9190610c87565b60405180910390f35b61012b610126366004610cd6565b610350565b604051901515815260200161010f565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010f565b61016261044e565b61012b610186366004610d00565b6104f9565b6101627f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6040516012815260200161010f565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b6101626101f6366004610d3c565b61060b565b610162610209366004610d3c565b60006020819052908152604090205481565b6101026106c0565b61012b610231366004610cd6565b61072f565b610249610244366004610d5e565b610829565b005b610162610259366004610dd1565b610aff565b6102857f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b604051622b600360e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062ad800c906024015b600060405180830381865afa158015610323573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034b9190810190610e1a565b905090565b6040516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b038381166024830152604482018390523360648301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b1580156103eb57600080fd5b505af11580156103ff573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a35060015b92915050565b60405163bd85b03960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bd85b03990602401602060405180830381865afa1580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190610ec7565b604051633912022f60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0384811660248301528381166044830152606482018390523360848301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105f991815260200190565b60405180910390a35060019392505050565b604051631b2b776160e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0382811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633656eec290604401602060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610ec7565b604051634e41a1fb60e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634e41a1fb90602401610306565b604051633912022f60e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482018190526001600160a01b0384811660448401526064830184905260848301919091526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161043c565b8342111561084a5760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166108715760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b038781166000818152602081815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e08501909152805191012061190160f01b6101008401527f0000000000000000000000000000000000000000000000000000000000000000610102840152610122830152906101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015610997573d6000803e3d6000fd5b505050602060405103519050896001600160a01b0316816001600160a01b0316146109d557604051638baa579f60e01b815260040160405180910390fd5b6109e0836001610ee0565b6001600160a01b03808c16600081815260208190526040908190209390935591516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201528b82166024820152604481018b905260648101929092527f00000000000000000000000000000000000000000000000000000000000000001690634ed2d6ac90608401600060405180830381600087803b158015610a8e57600080fd5b505af1158015610aa2573d6000803e3d6000fd5b50505050886001600160a01b03168a6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258a604051610aeb91815260200190565b60405180910390a350505050505050505050565b60405163e985e9c560e01b81526001600160a01b03838116600483015282811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e985e9c590604401602060405180830381865afa158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b969190610f01565b15610ba45750600019610448565b6040516321ff32a960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b03848116602483015283811660448301527f000000000000000000000000000000000000000000000000000000000000000016906321ff32a990606401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190610ec7565b9050610448565b60005b83811015610c7e578181015183820152602001610c66565b50506000910152565b6020815260008251806020840152610ca6816040850160208701610c63565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610cd157600080fd5b919050565b60008060408385031215610ce957600080fd5b610cf283610cba565b946020939093013593505050565b600080600060608486031215610d1557600080fd5b610d1e84610cba565b9250610d2c60208501610cba565b9150604084013590509250925092565b600060208284031215610d4e57600080fd5b610d5782610cba565b9392505050565b600080600080600080600060e0888a031215610d7957600080fd5b610d8288610cba565b9650610d9060208901610cba565b95506040880135945060608801359350608088013560ff81168114610db457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610de457600080fd5b610ded83610cba565b9150610dfb60208401610cba565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e2c57600080fd5b815167ffffffffffffffff80821115610e4457600080fd5b818401915084601f830112610e5857600080fd5b815181811115610e6a57610e6a610e04565b604051601f8201601f19908116603f01168101908382118183101715610e9257610e92610e04565b81604052828152876020848701011115610eab57600080fd5b610ebc836020830160208801610c63565b979650505050505050565b600060208284031215610ed957600080fd5b5051919050565b8082018082111561044857634e487b7160e01b600052601160045260246000fd5b600060208284031215610f1357600080fd5b81518015158114610d5757600080fdfea2646970667358221220f5f059826d82fe0ab994364a40568e817aeada24d0dfc742035ebd6f08ab269364736f6c63430008130033a26469706673582212200f383b7c2acaa5cf3060e48a490c277e85e516dbb5741bcfbd91d6ff1972144364736f6c63430008130033",
    "sourceMap": "907:2664:33:-:0;;;1091:52;;;-1:-1:-1;;;;;;1091:52:33;1140:1;1091:52;;;;;;1149:28;;1305:16;;;;;;;;;;907:2664;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "907:2664:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3085:484;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;557:32:158;;;539:51;;527:2;512:18;3085:484:33;;;;;;;;1771:783;;;;;;:::i;:::-;;:::i;2698:115::-;;2749:11;2789:6;;2797:8;-1:-1:-1;;;;;2789:6:33;;;;2698:115;;;;;-1:-1:-1;;;;;1045:32:158;;;1027:51;;1109:2;1094:18;;1087:34;;;;1000:18;2698:115:33;833:294:158;1205:93:33;;;:::i;:::-;;;1278:25:158;;;1266:2;1251:18;1205:93:33;1132:177:158;3085:484:33;3286:26;;;-1:-1:-1;;;;;1045:32:158;;3286:26:33;;;1027:51:158;1094:18;;;1087:34;;;3186:7:33;;;;1000:18:158;;3286:26:33;;;;;;;;;;;;3276:37;;;;;;3261:52;;3323:20;3393:4;3386:12;;3408:4;3415;1264:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1254:44;;;;;;3369:67;;;;;;;;;;-1:-1:-1;;;;;;1537:26:158;;;;1525:39;;1601:2;1597:15;;;;-1:-1:-1;;1593:53:158;1589:1;1580:11;;1573:74;1672:2;1663:12;;1656:28;1709:2;1700:12;;1693:28;1746:2;1737:12;;1314:441;3369:67:33;;;;;;;-1:-1:-1;;3369:67:33;;;;;;3346:100;;3369:67;3346:100;;;;;3085:484;-1:-1:-1;;;;;3085:484:33:o;1771:783::-;1948:8;:18;;;1863:14;1976;;-1:-1:-1;;;;;;1976:14:33;-1:-1:-1;;;;;1976:14:33;;;;;;;2089:26;;;;;;1027:51:158;;;;1094:18;;1087:34;;;1863:14:33;;1000:18:158;;2089:26:33;;;;;;;;;;;;2079:37;;;;;;2064:52;;2173:23;2225:4;2199:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:60;;2349:28;2362:5;2369:7;2349:12;:28::i;:::-;-1:-1:-1;;;;;2328:49:33;2336:8;-1:-1:-1;;;;;2328:49:33;;2320:58;;;;;;2425:6;:32;;-1:-1:-1;;;;;;2425:32:33;2454:1;2425:32;;;;;;2467:12;;2538:8;-1:-1:-1;;1771:783:33;;;;:::o;1205:93::-;1264:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1254:44;;;;;;1205:93;:::o;-1:-1:-1:-;;;;;;;;:::o;14:374:158:-;102:6;110;163:2;151:9;142:7;138:23;134:32;131:52;;;179:1;176;169:12;131:52;205:23;;-1:-1:-1;;;;;257:31:158;;247:42;;237:70;;303:1;300;293:12;237:70;326:5;378:2;363:18;;;;350:32;;-1:-1:-1;;;14:374:158:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ERC20LINK_HASH()": "d13053bb",
    "create(address,uint256)": "0ecaea73",
    "getDeployDetails()": "600eb4ba",
    "getForwarder(address,uint256)": "0710fd58"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC20LINK_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract ERC20Forwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployDetails\",\"outputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"details\":\"This factory deploys them using create2 so that the multi token can do      cheap verification of the interfaces before they access sensitive      functions.\",\"kind\":\"dev\",\"methods\":{\"create(address,uint256)\":{\"params\":{\"token\":\"The multitoken which the forwarder should link to\",\"tokenId\":\"The id of the sub token from the multitoken which we are creating                 an interface for.\"},\"returns\":{\"_0\":\"returns the address of the deployed forwarder\"}},\"getDeployDetails()\":{\"returns\":{\"_0\":\"Returns the stored multitoken address and the sub token id\"}},\"getForwarder(address,uint256)\":{\"params\":{\"token\":\"The multitoken which the forwarder should link to\",\"tokenId\":\"The id of the sub token from the multitoken\"},\"returns\":{\"_0\":\"The expected address of the forwarder\"}}},\"title\":\"ForwarderFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"create(address,uint256)\":{\"notice\":\"Uses create2 to deploy a forwarder at a predictable address as part of         our ERC20 multitoken implementation.\"},\"getDeployDetails()\":{\"notice\":\"Returns the transient storage of this contract\"},\"getForwarder(address,uint256)\":{\"notice\":\"Helper to calculate expected forwarder contract addresses\"}},\"notice\":\"Our MultiToken contract consists of fungible sub-tokens that         are similar to ERC20 tokens. In order to support ERC20 compatibility         we can deploy interfaces which are ERC20s.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/token/ForwarderFactory.sol\":\"ForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672\",\"dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w\"]},\"contracts/src/interfaces/IForwarderFactory.sol\":{\"keccak256\":\"0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3\",\"dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x6555a5d1b0ea168b5c76bb5e84f151a9317cd8dd548671f43057ce1d564c6284\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://962406e2819ea21f3bc9f3470698aa23cf0ec6dabbeb0df39f89132a8f62e0ff\",\"dweb:/ipfs/Qmc3vuCt6oRkNnEVZMr2cKKXHMF7Dw1dfYFZ2BB6NQtywp\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993\",\"dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt\"]},\"contracts/src/interfaces/IHyperdriveWrite.sol\":{\"keccak256\":\"0x407ca42c0388e20c22c47eca42455c193fc0d06f92480cea09cbd092f5e27a16\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ec5a45bb2951555f1e8191d999f08793f52568a98da819ead491686f139eab5\",\"dweb:/ipfs/QmbcCg5s94WvJsv32DQyYM9xQaWyP6U1hJVJ8aQCTKbKSx\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0\",\"dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87\",\"dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939\",\"dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x\"]},\"contracts/src/interfaces/IMultiTokenWrite.sol\":{\"keccak256\":\"0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a\",\"dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe\"]},\"contracts/src/token/ERC20Forwarder.sol\":{\"keccak256\":\"0x82443836e43eb3192b6277876728a71856609e556938297439dcac65f0c4c51f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4d998ce99436f0df0d0f9c4adfcc2fb0303f49d7cd29eb28d716ffff5053a66f\",\"dweb:/ipfs/QmbHaeJszwo5J1xUHQwDEXLe4oCnsBwqsbmVuPKWWBjGEN\"]},\"contracts/src/token/ForwarderFactory.sol\":{\"keccak256\":\"0x264d2a5f6baca07e39f58e92aebea29aef138e8a4fef74f2526ef03d7b0ee253\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://60a4490ed1690cc61d961ad50146ea9e389158c56f4cb3c66121a631ace1726e\",\"dweb:/ipfs/QmbKfYAbmpdzCaLmWKoDPLitqNKX4EoypmEAaj81PCqm7N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC20LINK_HASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "contract ERC20Forwarder",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeployDetails",
          "outputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IMultiToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "create(address,uint256)": {
            "params": {
              "token": "The multitoken which the forwarder should link to",
              "tokenId": "The id of the sub token from the multitoken which we are creating                 an interface for."
            },
            "returns": {
              "_0": "returns the address of the deployed forwarder"
            }
          },
          "getDeployDetails()": {
            "returns": {
              "_0": "Returns the stored multitoken address and the sub token id"
            }
          },
          "getForwarder(address,uint256)": {
            "params": {
              "token": "The multitoken which the forwarder should link to",
              "tokenId": "The id of the sub token from the multitoken"
            },
            "returns": {
              "_0": "The expected address of the forwarder"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "create(address,uint256)": {
            "notice": "Uses create2 to deploy a forwarder at a predictable address as part of         our ERC20 multitoken implementation."
          },
          "getDeployDetails()": {
            "notice": "Returns the transient storage of this contract"
          },
          "getForwarder(address,uint256)": {
            "notice": "Helper to calculate expected forwarder contract addresses"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/solmate/src/",
        "yield-daddy/=lib/yield-daddy/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/token/ForwarderFactory.sol": "ForwarderFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c",
        "urls": [
          "bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672",
          "dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w"
        ],
        "license": "MIT"
      },
      "contracts/src/interfaces/IForwarderFactory.sol": {
        "keccak256": "0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af",
        "urls": [
          "bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3",
          "dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0x6555a5d1b0ea168b5c76bb5e84f151a9317cd8dd548671f43057ce1d564c6284",
        "urls": [
          "bzz-raw://962406e2819ea21f3bc9f3470698aa23cf0ec6dabbeb0df39f89132a8f62e0ff",
          "dweb:/ipfs/Qmc3vuCt6oRkNnEVZMr2cKKXHMF7Dw1dfYFZ2BB6NQtywp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        "urls": [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveWrite.sol": {
        "keccak256": "0x407ca42c0388e20c22c47eca42455c193fc0d06f92480cea09cbd092f5e27a16",
        "urls": [
          "bzz-raw://5ec5a45bb2951555f1e8191d999f08793f52568a98da819ead491686f139eab5",
          "dweb:/ipfs/QmbcCg5s94WvJsv32DQyYM9xQaWyP6U1hJVJ8aQCTKbKSx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a",
        "urls": [
          "bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0",
          "dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc",
        "urls": [
          "bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87",
          "dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05",
        "urls": [
          "bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939",
          "dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenWrite.sol": {
        "keccak256": "0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8",
        "urls": [
          "bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a",
          "dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/ERC20Forwarder.sol": {
        "keccak256": "0x82443836e43eb3192b6277876728a71856609e556938297439dcac65f0c4c51f",
        "urls": [
          "bzz-raw://4d998ce99436f0df0d0f9c4adfcc2fb0303f49d7cd29eb28d716ffff5053a66f",
          "dweb:/ipfs/QmbHaeJszwo5J1xUHQwDEXLe4oCnsBwqsbmVuPKWWBjGEN"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/ForwarderFactory.sol": {
        "keccak256": "0x264d2a5f6baca07e39f58e92aebea29aef138e8a4fef74f2526ef03d7b0ee253",
        "urls": [
          "bzz-raw://60a4490ed1690cc61d961ad50146ea9e389158c56f4cb3c66121a631ace1726e",
          "dweb:/ipfs/QmbKfYAbmpdzCaLmWKoDPLitqNKX4EoypmEAaj81PCqm7N"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/token/ForwarderFactory.sol",
    "id": 12034,
    "exportedSymbols": {
      "ERC20Forwarder": [
        11863
      ],
      "ForwarderFactory": [
        12033
      ],
      "IForwarderFactory": [
        6591
      ],
      "IMultiToken": [
        7257
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3533:33",
    "nodes": [
      {
        "id": 11865,
        "nodeType": "PragmaDirective",
        "src": "39:23:33",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 11867,
        "nodeType": "ImportDirective",
        "src": "64:72:33",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IForwarderFactory.sol",
        "file": "../interfaces/IForwarderFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12034,
        "sourceUnit": 6592,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11866,
              "name": "IForwarderFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6591,
              "src": "73:17:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11869,
        "nodeType": "ImportDirective",
        "src": "137:60:33",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IMultiToken.sol",
        "file": "../interfaces/IMultiToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12034,
        "sourceUnit": 7258,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11868,
              "name": "IMultiToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7257,
              "src": "146:11:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11871,
        "nodeType": "ImportDirective",
        "src": "198:54:33",
        "nodes": [],
        "absolutePath": "contracts/src/token/ERC20Forwarder.sol",
        "file": "./ERC20Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12034,
        "sourceUnit": 11864,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11870,
              "name": "ERC20Forwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11863,
              "src": "207:14:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12033,
        "nodeType": "ContractDefinition",
        "src": "907:2664:33",
        "nodes": [
          {
            "id": 11883,
            "nodeType": "VariableDeclaration",
            "src": "1091:52:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "1111:6:33",
            "scope": 12033,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMultiToken_$7257",
              "typeString": "contract IMultiToken"
            },
            "typeName": {
              "id": 11876,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11875,
                "name": "IMultiToken",
                "nameLocations": [
                  "1091:11:33"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7257,
                "src": "1091:11:33"
              },
              "referencedDeclaration": 7257,
              "src": "1091:11:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMultiToken_$7257",
                "typeString": "contract IMultiToken"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "31",
                      "id": 11880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1140:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      }
                    ],
                    "id": 11879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1132:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 11878,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1132:7:33",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 11881,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1132:10:33",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 11877,
                "name": "IMultiToken",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7257,
                "src": "1120:11:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IMultiToken_$7257_$",
                  "typeString": "type(contract IMultiToken)"
                }
              },
              "id": 11882,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1120:23:33",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMultiToken_$7257",
                "typeString": "contract IMultiToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 11886,
            "nodeType": "VariableDeclaration",
            "src": "1149:28:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenId",
            "nameLocation": "1165:8:33",
            "scope": 12033,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11884,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1149:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 11885,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1176:1:33",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 11894,
            "nodeType": "VariableDeclaration",
            "src": "1205:93:33",
            "nodes": [],
            "constant": true,
            "functionSelector": "d13053bb",
            "mutability": "constant",
            "name": "ERC20LINK_HASH",
            "nameLocation": "1229:14:33",
            "scope": 12033,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11887,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1205:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11890,
                        "name": "ERC20Forwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11863,
                        "src": "1269:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Forwarder_$11863_$",
                          "typeString": "type(contract ERC20Forwarder)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Forwarder_$11863_$",
                          "typeString": "type(contract ERC20Forwarder)"
                        }
                      ],
                      "id": 11889,
                      "name": "type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -27,
                      "src": "1264:4:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 11891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:20:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_meta_type_t_contract$_ERC20Forwarder_$11863",
                      "typeString": "type(contract ERC20Forwarder)"
                    }
                  },
                  "id": 11892,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberLocation": "1285:12:33",
                  "memberName": "creationCode",
                  "nodeType": "MemberAccess",
                  "src": "1264:33:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 11888,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1254:9:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 11893,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1254:44:33",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11898,
            "nodeType": "FunctionDefinition",
            "src": "1305:16:33",
            "nodes": [],
            "body": {
              "id": 11897,
              "nodeType": "Block",
              "src": "1319:2:33",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:2:33"
            },
            "returnParameters": {
              "id": 11896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1319:0:33"
            },
            "scope": 12033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11967,
            "nodeType": "FunctionDefinition",
            "src": "1771:783:33",
            "nodes": [],
            "body": {
              "id": 11966,
              "nodeType": "Block",
              "src": "1879:675:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 11912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11910,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11886,
                      "src": "1948:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11911,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11904,
                      "src": "1959:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1948:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11913,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:18:33"
                },
                {
                  "expression": {
                    "id": 11916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11914,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11883,
                      "src": "1976:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7257",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11915,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11902,
                      "src": "1985:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7257",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "src": "1976:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7257",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "id": 11917,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:14:33"
                },
                {
                  "assignments": [
                    11919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11919,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "2072:4:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 11966,
                      "src": "2064:12:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 11918,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2064:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11927,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11923,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11902,
                            "src": "2100:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMultiToken_$7257",
                              "typeString": "contract IMultiToken"
                            }
                          },
                          {
                            "id": 11924,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11904,
                            "src": "2107:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMultiToken_$7257",
                              "typeString": "contract IMultiToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11921,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2089:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2093:6:33",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2089:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2089:26:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11920,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2079:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 11926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:37:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2064:52:33"
                },
                {
                  "assignments": [
                    11930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11930,
                      "mutability": "mutable",
                      "name": "deployed",
                      "nameLocation": "2188:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 11966,
                      "src": "2173:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                        "typeString": "contract ERC20Forwarder"
                      },
                      "typeName": {
                        "id": 11929,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11928,
                          "name": "ERC20Forwarder",
                          "nameLocations": [
                            "2173:14:33"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11863,
                          "src": "2173:14:33"
                        },
                        "referencedDeclaration": 11863,
                        "src": "2173:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                          "typeString": "contract ERC20Forwarder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11937,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2199:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Forwarder_$11863_$",
                          "typeString": "function () returns (contract ERC20Forwarder)"
                        },
                        "typeName": {
                          "id": 11932,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11931,
                            "name": "ERC20Forwarder",
                            "nameLocations": [
                              "2203:14:33"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11863,
                            "src": "2203:14:33"
                          },
                          "referencedDeclaration": 11863,
                          "src": "2203:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                            "typeString": "contract ERC20Forwarder"
                          }
                        }
                      },
                      "id": 11935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "salt"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 11934,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11919,
                          "src": "2225:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "src": "2199:32:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Forwarder_$11863_$salt",
                        "typeString": "function () returns (contract ERC20Forwarder)"
                      }
                    },
                    "id": 11936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:34:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2173:60:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11941,
                              "name": "deployed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11930,
                              "src": "2336:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                                "typeString": "contract ERC20Forwarder"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                                "typeString": "contract ERC20Forwarder"
                              }
                            ],
                            "id": 11940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2328:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11939,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2328:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2328:17:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11944,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11902,
                              "src": "2362:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMultiToken_$7257",
                                "typeString": "contract IMultiToken"
                              }
                            },
                            {
                              "id": 11945,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11904,
                              "src": "2369:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMultiToken_$7257",
                                "typeString": "contract IMultiToken"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11943,
                            "name": "getForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12032,
                            "src": "2349:12:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IMultiToken_$7257_$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (contract IMultiToken,uint256) view returns (address)"
                            }
                          },
                          "id": 11946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2349:28:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2328:49:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11938,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2320:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:58:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11949,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:58:33"
                },
                {
                  "expression": {
                    "id": 11957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11950,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11883,
                      "src": "2425:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7257",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 11954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2454:1:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 11953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2446:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11952,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2446:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2446:10:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11951,
                        "name": "IMultiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7257,
                        "src": "2434:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMultiToken_$7257_$",
                          "typeString": "type(contract IMultiToken)"
                        }
                      },
                      "id": 11956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2434:23:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiToken_$7257",
                        "typeString": "contract IMultiToken"
                      }
                    },
                    "src": "2425:32:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7257",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "id": 11958,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:32:33"
                },
                {
                  "expression": {
                    "id": 11961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11959,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11886,
                      "src": "2467:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 11960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2478:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2467:12:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11962,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:12:33"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 11963,
                        "name": "deployed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11930,
                        "src": "2538:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                          "typeString": "contract ERC20Forwarder"
                        }
                      }
                    ],
                    "id": 11964,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2537:10:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "functionReturnParameters": 11909,
                  "id": 11965,
                  "nodeType": "Return",
                  "src": "2530:17:33"
                }
              ]
            },
            "documentation": {
              "id": 11899,
              "nodeType": "StructuredDocumentation",
              "src": "1367:399:33",
              "text": "@notice Uses create2 to deploy a forwarder at a predictable address as part of\n         our ERC20 multitoken implementation.\n @param token The multitoken which the forwarder should link to\n @param tokenId The id of the sub token from the multitoken which we are creating\n                 an interface for.\n @return returns the address of the deployed forwarder"
            },
            "functionSelector": "0ecaea73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "1780:6:33",
            "parameters": {
              "id": 11905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11902,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1808:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 11967,
                  "src": "1796:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$7257",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 11901,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11900,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "1796:11:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7257,
                      "src": "1796:11:33"
                    },
                    "referencedDeclaration": 7257,
                    "src": "1796:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7257",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11904,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1831:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 11967,
                  "src": "1823:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1786:58:33"
            },
            "returnParameters": {
              "id": 11909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11908,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11967,
                  "src": "1863:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                    "typeString": "contract ERC20Forwarder"
                  },
                  "typeName": {
                    "id": 11907,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11906,
                      "name": "ERC20Forwarder",
                      "nameLocations": [
                        "1863:14:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11863,
                      "src": "1863:14:33"
                    },
                    "referencedDeclaration": 11863,
                    "src": "1863:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Forwarder_$11863",
                      "typeString": "contract ERC20Forwarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1862:16:33"
            },
            "scope": 12033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11981,
            "nodeType": "FunctionDefinition",
            "src": "2698:115:33",
            "nodes": [],
            "body": {
              "id": 11980,
              "nodeType": "Block",
              "src": "2771:42:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 11976,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11883,
                        "src": "2789:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiToken_$7257",
                          "typeString": "contract IMultiToken"
                        }
                      },
                      {
                        "id": 11977,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11886,
                        "src": "2797:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 11978,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2788:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IMultiToken_$7257_$_t_uint256_$",
                      "typeString": "tuple(contract IMultiToken,uint256)"
                    }
                  },
                  "functionReturnParameters": 11975,
                  "id": 11979,
                  "nodeType": "Return",
                  "src": "2781:25:33"
                }
              ]
            },
            "baseFunctions": [
              6590
            ],
            "documentation": {
              "id": 11968,
              "nodeType": "StructuredDocumentation",
              "src": "2560:133:33",
              "text": "@notice Returns the transient storage of this contract\n @return Returns the stored multitoken address and the sub token id"
            },
            "functionSelector": "600eb4ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeployDetails",
            "nameLocation": "2707:16:33",
            "parameters": {
              "id": 11969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2723:2:33"
            },
            "returnParameters": {
              "id": 11975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11981,
                  "src": "2749:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$7257",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 11971,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11970,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "2749:11:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7257,
                      "src": "2749:11:33"
                    },
                    "referencedDeclaration": 7257,
                    "src": "2749:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7257",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11974,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11981,
                  "src": "2762:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2748:22:33"
            },
            "scope": 12033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12032,
            "nodeType": "FunctionDefinition",
            "src": "3085:484:33",
            "nodes": [],
            "body": {
              "id": 12031,
              "nodeType": "Block",
              "src": "3195:374:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11993,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "3269:4:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 12031,
                      "src": "3261:12:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 11992,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3261:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12001,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11997,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11985,
                            "src": "3297:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMultiToken_$7257",
                              "typeString": "contract IMultiToken"
                            }
                          },
                          {
                            "id": 11998,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11987,
                            "src": "3304:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMultiToken_$7257",
                              "typeString": "contract IMultiToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11995,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3286:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3290:6:33",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3286:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3286:26:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11994,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3276:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 12000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:37:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3261:52:33"
                },
                {
                  "assignments": [
                    12003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12003,
                      "mutability": "mutable",
                      "name": "addressBytes",
                      "nameLocation": "3331:12:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 12031,
                      "src": "3323:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 12002,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3323:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12019,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30786666",
                                "id": 12009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3393:4:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                },
                                "value": "0xff"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                }
                              ],
                              "id": 12008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3386:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 12007,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "3386:6:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3386:12:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 12013,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3408:4:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForwarderFactory_$12033",
                                  "typeString": "contract ForwarderFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForwarderFactory_$12033",
                                  "typeString": "contract ForwarderFactory"
                                }
                              ],
                              "id": 12012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3400:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12011,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3400:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3400:13:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 12015,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "3415:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 12016,
                            "name": "ERC20LINK_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11894,
                            "src": "3421:14:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 12005,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3369:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 12006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3373:12:33",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3369:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 12017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3369:67:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 12004,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3346:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 12018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3346:100:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3323:123:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12026,
                                "name": "addressBytes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12003,
                                "src": "3547:12:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 12025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3539:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 12024,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3539:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3539:21:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 12023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3531:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 12022,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "3531:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3531:30:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 12021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3523:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 12020,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3523:7:33",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 12029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3523:39:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11991,
                  "id": 12030,
                  "nodeType": "Return",
                  "src": "3516:46:33"
                }
              ]
            },
            "documentation": {
              "id": 11982,
              "nodeType": "StructuredDocumentation",
              "src": "2819:261:33",
              "text": "@notice Helper to calculate expected forwarder contract addresses\n @param token The multitoken which the forwarder should link to\n @param tokenId The id of the sub token from the multitoken\n @return The expected address of the forwarder"
            },
            "functionSelector": "0710fd58",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getForwarder",
            "nameLocation": "3094:12:33",
            "parameters": {
              "id": 11988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11985,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3128:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12032,
                  "src": "3116:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMultiToken_$7257",
                    "typeString": "contract IMultiToken"
                  },
                  "typeName": {
                    "id": 11984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11983,
                      "name": "IMultiToken",
                      "nameLocations": [
                        "3116:11:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7257,
                      "src": "3116:11:33"
                    },
                    "referencedDeclaration": 7257,
                    "src": "3116:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiToken_$7257",
                      "typeString": "contract IMultiToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11987,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3151:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12032,
                  "src": "3143:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3143:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3106:58:33"
            },
            "returnParameters": {
              "id": 11991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12032,
                  "src": "3186:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3186:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3185:9:33"
            },
            "scope": 12033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11873,
              "name": "IForwarderFactory",
              "nameLocations": [
                "936:17:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6591,
              "src": "936:17:33"
            },
            "id": 11874,
            "nodeType": "InheritanceSpecifier",
            "src": "936:17:33"
          }
        ],
        "canonicalName": "ForwarderFactory",
        "contractDependencies": [
          11863
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11872,
          "nodeType": "StructuredDocumentation",
          "src": "254:653:33",
          "text": "@author DELV\n @title ForwarderFactory\n @notice Our MultiToken contract consists of fungible sub-tokens that\n         are similar to ERC20 tokens. In order to support ERC20 compatibility\n         we can deploy interfaces which are ERC20s.\n @dev This factory deploys them using create2 so that the multi token can do\n      cheap verification of the interfaces before they access sensitive\n      functions.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12033,
          6591
        ],
        "name": "ForwarderFactory",
        "nameLocation": "916:16:33",
        "scope": 12034,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 33
}