{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumTransactionAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "checkpointDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "curve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flat",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IHyperdrive.Fees",
              "name": "fees",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "oracleSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updateGap",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHyperdrive.PoolConfig",
          "name": "_config",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_linkerCodeHash_",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_factory_",
          "type": "address"
        },
        {
          "internalType": "contract IERC4626",
          "name": "_pool_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FixedPointMath_InvalidExponent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FixedPointMath_InvalidInput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCheckpointDuration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFeeAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMinimumShareReserves",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPositionDuration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTradeSize",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NegativePresentValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QueryOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ReturnData",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "getCheckpoint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "sharePrice",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "longExposure",
              "type": "int128"
            }
          ],
          "internalType": "struct IHyperdrive.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarketState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "shareReserves",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bondReserves",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "shareAdjustment",
              "type": "int128"
            },
            {
              "internalType": "uint128",
              "name": "longExposure",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "longsOutstanding",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shortsOutstanding",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "longAverageMaturityTime",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shortAverageMaturityTime",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isInitialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isPaused",
              "type": "bool"
            }
          ],
          "internalType": "struct IHyperdrive.MarketState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumTransactionAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "checkpointDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "curve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flat",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IHyperdrive.Fees",
              "name": "fees",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "oracleSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updateGap",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHyperdrive.PoolConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "shareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "shareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "bondReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longAverageMaturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortAverageMaturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalSharesReadyToWithdraw",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalSharesProceeds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longExposure",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHyperdrive.PoolInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUncollectedGovernanceFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawPool",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "readyToWithdraw",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "proceeds",
              "type": "uint128"
            }
          ],
          "internalType": "struct IHyperdrive.WithdrawPool",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "isSweepable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkerCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_slots",
          "type": "uint256[]"
        }
      ],
      "name": "load",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "perTokenApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IERC4626",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "query",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61026060405260016000553480156200001757600080fd5b5060405162002a8638038062002a868339810160408190526200003a91620002bc565b6001600160a01b0380831660805260a084905284511660c052604084015184908490849083906103e8111562000083576040516349db44f560e01b815260040160405180910390fd5b60408101516101605260608101516101805260a0810151600003620000bb57604051635428734d60e01b815260040160405180910390fd5b60a08101805160e0525160808201511080620000eb57508060a001518160800151620000e89190620003c2565b15155b156200010a5760405163253fffcf60e11b815260040160405180910390fd5b608081015161010090815260c082015161012090815260208301516101405260e0830151601180546001600160a01b0319166001600160a01b03928316179055918301519091166102005281015151670de0b6b3a764000010806200017f5750670de0b6b3a764000081610120015160200151115b806200019b5750670de0b6b3a764000081610120015160400151115b15620001ba576040516322f72cc360e11b815260040160405180910390fd5b61012081018051516101a0528051602001516101c05251604001516101e0526101600151610220525050506001600160a01b03166102405250620003e5915050565b60405161018081016001600160401b03811182821017156200022e57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200024c57600080fd5b919050565b6000606082840312156200026457600080fd5b604051606081016001600160401b03811182821017156200029557634e487b7160e01b600052604160045260246000fd5b80604052508091508251815260208301516020820152604083015160408201525092915050565b600080600080848603610220811215620002d557600080fd5b6101c080821215620002e657600080fd5b620002f0620001fc565b9150620002fd8762000234565b82526020870151602083015260408701516040830152606087015160608301526080870151608083015260a087015160a083015260c087015160c08301526200034960e0880162000234565b60e08301526101006200035e81890162000234565b90830152610120620003738989830162000251565b908301526101808701516101408301526101a08701516101608301528601519094509250620003a66101e0860162000234565b9150620003b7610200860162000234565b905092959194509250565b600082620003e057634e487b7160e01b600052601260045260246000fd5b500690565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051610240516125bd620004c96000396000818161035c0152610feb01526000610a63015260006109b301526000610a2c01526000610a07015260006109e40152600061090d0152600081816108e801526111260152600081816108be0152611100015260008181610983015261114c01526000818161093701526115b901526000818161095d01526118450152600081816108990152610bc401526000610c1701526000610b8401526125bd6000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c8063bd85b039116100ad578063c905a4b511610071578063c905a4b514610295578063cc962f8e1461029d578063d8165743146102c0578063e985e9c5146102d5578063fba56008146102e857600080fd5b8063bd85b0391461024a578063becee9c31461025d578063c45a01551461027d578063c55dae6314610285578063c69e16ad1461028d57600080fd5b80634e41a1fb116100f45780634e41a1fb146101e757806360246c88146101fa5780637ecebe001461020f578063afdac68d14610222578063b0d965801461023557600080fd5b8062ad800c1461013057806316f0115b1461015957806320fc48811461017957806321ff32a9146101b35780633656eec2146101d4575b600080fd5b61014361013e366004611e6d565b610317565b6040516101509190611ed6565b60405180910390f35b61016161034e565b6040516001600160a01b039091168152602001610150565b61018c610187366004611e6d565b610391565b6040805182516001600160801b03168152602092830151600f0b9281019290925201610150565b6101c66101c1366004611f00565b6103e3565b604051908152602001610150565b6101c66101e2366004611f3c565b610429565b6101436101f5366004611e6d565b610462565b610202610470565b6040516101509190611f68565b6101c661021d366004611ff3565b61066a565b6101c6610230366004611e6d565b610696565b61023d61087c565b604051610150919061200e565b6101c6610258366004611e6d565b610a99565b61027061026b3660046120d0565b610abb565b6040516101509190612145565b610161610b76565b610161610bb6565b6101c6610bf6565b6101c6610c10565b6102b06102ab366004611ff3565b610c48565b6040519015158152602001610150565b6102c8610c7e565b6040516101509190612189565b6102b06102e3366004612276565b610ce4565b6102f0610d28565b6040805182516001600160801b039081168252602093840151169281019290925201610150565b606061034961032583610d87565b6040516020016103359190611ed6565b604051602081830303815290604052610eb5565b919050565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161038e9101610335565b90565b6040805180820190915260008082526020820152610349600e600084815260200190815260200160002060405160200161033591546001600160801b038116825260801d600f0b602082015260400190565b60008381526004602090815260408083206001600160a01b03868116855290835281842090851684528252808320548151928301526104229101610335565b9392505050565b60008281526001602090815260408083206001600160a01b038516845282528083205481519283015261045c9101610335565b92915050565b606061034961032583610ed9565b6104db604051806101a00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006104e5610fcb565b600d5460026020527f3ccfbaf375b4885450e3887dab0704e32e03acfeaf0442976372f6750e322c1f5460008080527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b54939450926001600160801b039092169161055091906122cc565b61055a91906122df565b9050600080831161056c576000610587565b6105878361058161057c86611063565b6111c9565b90611437565b604080516101a0810182526008546001600160801b038082168352600954600f0b6020840152600160801b918290048116938301939093526060820186905260808201879052600a5480841660a0840152600b5480851660c085015290829004841660e08401528190048316610100830152600d54808416610120840152049091166101408201529091506000906101608101841561062f5761062a848661144c565b610632565b60005b8152600954600160801b90046001600160801b03166020918201526040519192506106639161033591849101611f68565b5050505090565b6001600160a01b0381166000908152600760209081526040808320548151928301526103499101610335565b601354601280546000926001600160801b03600160801b8204811693911691849190839081106106c8576106c86122f2565b600091825260208083206040805180820190915292015463ffffffff8116835264010000000090046001600160e01b031690820152915061070986856122df565b9050600083156107235761071e6001856122df565b610732565b601254610732906001906122df565b60408051808201909152600080825260208201529091505b8482146107e157600060128381548110610766576107666122f2565b6000918252602090912001805490915063ffffffff1684106107b45760408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015290506107e1565b82156107ca576107c56001846122df565b6107d9565b6012546107d9906001906122df565b92505061074a565b805163ffffffff1660000361080957604051630a89817b60e41b815260040160405180910390fd5b600081602001516001600160e01b031685602001516001600160e01b031661083191906122df565b8251865191925060009161084e9163ffffffff90811691166122df565b905061086f61085d828461231e565b60405160200161033591815260200190565b5050505050505050919050565b610884611dcf565b60408051610180810182526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f00000000000000000000000000000000000000000000000000000000000000006020808401919091527f0000000000000000000000000000000000000000000000000000000000000000838501527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f000000000000000000000000000000000000000000000000000000000000000060808501527f000000000000000000000000000000000000000000000000000000000000000060a08501527f000000000000000000000000000000000000000000000000000000000000000060c0850152601154831660e08501527f0000000000000000000000000000000000000000000000000000000000000000909216610100840152835191820184527f000000000000000000000000000000000000000000000000000000000000000082527f0000000000000000000000000000000000000000000000000000000000000000828201527f0000000000000000000000000000000000000000000000000000000000000000828501526101208301919091526012546101408301527f0000000000000000000000000000000000000000000000000000000000000000610160830152915161038e9261033592910161200e565b6000818152600260209081526040808320548151928301526103499101610335565b606060008267ffffffffffffffff811115610ad857610ad8612332565b604051908082528060200260200182016040528015610b01578160200160208202803683370190505b50905060005b83811015610b5a576000858583818110610b2357610b236122f2565b90506020020135905060008154905080848481518110610b4557610b456122f2565b60209081029190910101525050600101610b07565b50610b6f816040516020016103359190612145565b5092915050565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161038e9101610335565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161038e9101610335565b600061038e60105460405160200161033591815260200190565b600061038e7f000000000000000000000000000000000000000000000000000000000000000060405160200161033591815260200190565b6001600160a01b0381166000908152601460209081526040808320549051610349926103359260ff169101901515815260200190565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915261038e60086040516020016103359190612348565b6001600160a01b038281166000908152600360209081526040808320938516835292815282822054835160ff909116151591810191909152909161045c9101610335565b6040805180820190915260008082526020820152604080518082018252600d546001600160801b03808216808452600160801b909204811660209384019081528451938401929092529051169181019190915261038e90606001610335565b606060f882901c6001600160f81b0383166000610da382611461565b90506000836003811115610db957610db96122a0565b03610deb576040518060400160405280600d81526020016c048797065726472697665204c5609c1b8152509350610ead565b6001836003811115610dff57610dff6122a0565b03610e2b5780604051602001610e1591906123c9565b6040516020818303038152906040529350610ead565b6002836003811115610e3f57610e3f6122a0565b03610e555780604051602001610e159190612402565b6003836003811115610e6957610e696122a0565b03610ead576040517f48797065726472697665205769746864726177616c20536861726500000000006020820152603b015b60405160208183030381529060405293505b505050919050565b80604051636e64089360e11b8152600401610ed09190611ed6565b60405180910390fd5b606060f882901c6001600160f81b0383166000610ef582611461565b90506000836003811115610f0b57610f0b6122a0565b03610f3d576040518060400160405280600d81526020016c0485950455244524956452d4c5609c1b8152509350610ead565b6001836003811115610f5157610f516122a0565b03610f675780604051602001610e15919061243c565b6002836003811115610f7b57610f7b6122a0565b03610f915780604051602001610e159190612474565b6003836003811115610fa557610fa56122a0565b03610ead576040516c485950455244524956452d575360981b6020820152602d01610e9b565b6040516303d1689d60e11b8152670de0b6b3a764000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307a2d13a90602401602060405180830381865afa15801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e91906124a0565b905090565b6110c060405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610160810182526008546001600160801b038082168352600954600f0b6020840152600160801b909104811692820192909252606081018490527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201527f000000000000000000000000000000000000000000000000000000000000000060c0820152600a54821660e0820152600b54909161010083019161118f911661156e565b8152600a546001600160801b03600160801b9182900481166020840152600b546040909301926111c19290041661156e565b905292915050565b6000806111e983610140015184610120015161143790919063ffffffff16565b61010084015160e08501516111fd91611437565b61120791906124b9565b9050600061121d846000015185602001516115e4565b905060008213156112bd57600061125f8286604001518760a001518860c00151670de0b6b3a764000061125091906122df565b89606001518a60800151611601565b905061126b81846116a1565b905080156112b7576112a4828660400151838860c00151670de0b6b3a764000061129591906122df565b89606001518a608001516116b6565b855186906112b39083906122df565b9052505b50611379565b6000821215611379576112cf826124d9565b915060006113038286604001518760c00151670de0b6b3a76400006112f491906122df565b886060015189608001516116f5565b905061130f81846116a1565b9050801561135b57611348828660400151838860c00151670de0b6b3a764000061133991906122df565b89606001518a6080015161178b565b855186906113579083906122cc565b9052505b61136581846122df565b855186906113749083906122cc565b905250505b60006113a8856101000151670de0b6b3a764000061139791906122df565b606087015160e08801519190611820565b6113d6866101400151670de0b6b3a76400006113c491906122df565b60608801516101208901519190611820565b6113e091906124b9565b905060008186600001516113f491906124f5565b90508560a0015181121561141b5760405163aeeb825d60e01b815260040160405180910390fd5b80865260a086015161142d90826122df565b9695505050505050565b60006104228383670de0b6b3a7640000611820565b600061042283670de0b6b3a764000084611820565b60408051604d808252608082019092526060919060009082602082018180368337019050509050611493600a85612515565b61149e9060306122cc565b60f81b816114ad6001856122df565b815181106114bd576114bd6122f2565b60200101906001600160f81b031916908160001a9053506114df600a8561231e565b935060015b8415611560576114f5600a86612515565b6115009060306122cc565b60f81b82600161151084876122df565b61151a91906122df565b8151811061152a5761152a6122f2565b60200101906001600160f81b031916908160001a90535061154c600a8661231e565b94508061155881612529565b9150506114e4565b918290030190815292915050565b600080670de0b6b3a764000061158261183e565b61158c9190612542565b905080831161159c5760006115a6565b6115a681846122df565b91506104226115dd670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000612542565b839061144c565b6000806115f183856124b9565b9050600081121561042257600080fd5b6000806116118888878787611874565b9050600061163461162c87611626878b6118a3565b906118b8565b86908661190f565b61163e90836122df565b9050670de0b6b3a764000081106116725761166b611664670de0b6b3a76400008861144c565b82906118b8565b905061168a565b611687611664670de0b6b3a764000088611935565b90505b61169488826122df565b9998505050505050505050565b60008183116116b05782610422565b50919050565b6000806116c788888888888861194a565b9092509050806116ea57604051637ac17d2560e01b815260040160405180910390fd5b509695505050505050565b6000806117058787878787611a0c565b90506000611730670de0b6b3a764000061171f878761144c565b61172991906122cc565b8390611935565b9050670de0b6b3a7640000811061175d57611756611664670de0b6b3a764000088611935565b9050611775565b611772611664670de0b6b3a76400008861144c565b90505b61177f81886122df565b98975050505050505050565b60008061179b8888878787611a0c565b90506117ab85611626888a6122df565b965060006117c584866117be8b866122df565b919061190f565b9050670de0b6b3a764000081106117f2576117eb611664670de0b6b3a764000088611935565b905061180a565b611807611664670de0b6b3a76400008861144c565b90505b6118148185611935565b905061169489826122df565b600082600019048411830215820261183757600080fd5b5091020490565b600061186a7f000000000000000000000000000000000000000000000000000000000000000042612515565b61105e90426122df565b600061188085856118b8565b61189961189186611626868b611437565b859085611820565b61142d91906122cc565b60006104228383670de0b6b3a764000061190f565b6000816000036118d15750670de0b6b3a764000061045c565b826000036118e15750600061045c565b8160006118ed85611a31565b9050818102611904670de0b6b3a764000082612559565b905061142d81611c44565b600082600019048411830215820261192657600080fd5b50910281810615159190040190565b600061042283670de0b6b3a76400008461190f565b600080600061195c8989888888611a0c565b905061196c86611626898b6122cc565b975087811015611983576000809250925050611a01565b600061199485876117be8c866122df565b9050670de0b6b3a764000081106119c1576119ba611664670de0b6b3a764000089611935565b90506119d9565b6119d6611664670de0b6b3a76400008961144c565b90505b6119e38186611935565b9050808a11156119fa576119f7818b6122df565b93505b6001925050505b965096945050505050565b6000611a1885856118b8565b611899611a2986611626868b6118a3565b85908561190f565b6000808213611a5357604051636838feed60e11b815260040160405180910390fd5b5060606001600160801b03821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110600190811b90911783811c90911017609f81810383019390931b90921c6c465772b2bbbb5f824b15207a3081018102821d6d0388eaa27412d5aca026815d636e018102821d6d0df99ac502031bf953eff472fdcc018102821d6d13cdffb29d51d99322bdff5f2211018102821d6d0a0f742023def783a307a986912e018102821d6d01920d8043ca89b5239253284e42018102821d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7882018202831d6d0139601a2efabe717e604cbb4894018202831d6d02247f7a7b6594320649aa03aba1018202831d6c8c3f38e95a6b1ff2ab1c3b343619018202831d6d02384773bdf1ac5676facced60901901820290921d6cb9a025d814b29c212b8b1a07cd190102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a550602605f19919091017d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b6000680248ce36a70cb26b3e198213611c5f57506000919050565b680755bf798b4a1bf1e58212611c885760405163df92cc9d60e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b60405180610180016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001611e5960405180606001604052806000815260200160008152602001600081525090565b815260200160008152602001600081525090565b600060208284031215611e7f57600080fd5b5035919050565b60005b83811015611ea1578181015183820152602001611e89565b50506000910152565b60008151808452611ec2816020860160208601611e86565b601f01601f19169290920160200192915050565b6020815260006104226020830184611eaa565b80356001600160a01b038116811461034957600080fd5b600080600060608486031215611f1557600080fd5b83359250611f2560208501611ee9565b9150611f3360408501611ee9565b90509250925092565b60008060408385031215611f4f57600080fd5b82359150611f5f60208401611ee9565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018091820151918101919091526101a00190565b60006020828403121561200557600080fd5b61042282611ee9565b81516001600160a01b031681526101c081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015161207660e08401826001600160a01b03169052565b50610100838101516001600160a01b03811684830152505061012083810151805184830152602081015161014085015260408101516101608501525050610140830151610180830152610160909201516101a09091015290565b600080602083850312156120e357600080fd5b823567ffffffffffffffff808211156120fb57600080fd5b818501915085601f83011261210f57600080fd5b81358181111561211e57600080fd5b8660208260051b850101111561213357600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b8181101561217d57835183529284019291840191600101612161565b50909695505050505050565b81516001600160801b03168152610140810160208301516121b560208401826001600160801b03169052565b5060408301516121ca6040840182600f0b9052565b5060608301516121e560608401826001600160801b03169052565b50608083015161220060808401826001600160801b03169052565b5060a083015161221b60a08401826001600160801b03169052565b5060c083015161223660c08401826001600160801b03169052565b5060e083015161225160e08401826001600160801b03169052565b506101008381015115159083015261012080840151801515828501525b505092915050565b6000806040838503121561228957600080fd5b61229283611ee9565b9150611f5f60208401611ee9565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561045c5761045c6122b6565b8181038181111561045c5761045c6122b6565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261232d5761232d612308565b500490565b634e487b7160e01b600052604160045260246000fd5b81546001600160801b038082168352608091821c60208401526001840154600f81900b6040850152821c6060840152600284015480821683850152821c60a0840152600384015490811660c0840152901c60e0820152600482015460ff8082161515610100840152600882901c161515610120830152610140820190610b6f565b700243cb832b9323934bb32902637b7339d1607d1b8152600082516123f5816011850160208701611e86565b9190910160110192915050565b710243cb832b9323934bb329029b437b93a1d160751b81526000825161242f816012850160208701611e86565b9190910160120192915050565b6f242ca822a9222924ab2296a627a7239d60811b815260008251612467816010850160208701611e86565b9190910160100192915050565b70242ca822a9222924ab2296a9a427a92a1d60791b8152600082516123f5816011850160208701611e86565b6000602082840312156124b257600080fd5b5051919050565b8181036000831280158383131683831282161715610b6f57610b6f6122b6565b6000600160ff1b82016124ee576124ee6122b6565b5060000390565b808201828112600083128015821682158216171561226e5761226e6122b6565b60008261252457612524612308565b500690565b60006001820161253b5761253b6122b6565b5060010190565b808202811582820484141761045c5761045c6122b6565b60008261256857612568612308565b600160ff1b821460001984141615612582576125826122b6565b50059056fea26469706673582212202d03121fd1fa8d3412498643db31ee184a08e88abd268e3207bf7994bd5be89d64736f6c63430008130033",
    "sourceMap": "732:1765:12:-:0;;;454:1:103;429:26;;1377:286:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1944:20:42;;;;;1974:34;;;;4466:17:7;;4453:30;;;5012:28;;;;1559:7:12;;1599:16;;1617:9;;1559:7;;5043:3:7;-1:-1:-1;5008:113:7;;;5069:41;;-1:-1:-1;;;5069:41:7;;;;;;;;;;;5008:113;5154:28;;;;5130:52;;5221:32;;;;5193:60;;5418:26;;;;5448:1;5418:31;5414:108;;5472:39;;-1:-1:-1;;;5472:39:7;;;;;;;;;;;5414:108;5553:26;;;;;5531:48;;5633:26;5606:24;;;;:53;;:127;;;5702:7;:26;;;5675:7;:24;;;:53;;;;:::i;:::-;:58;;5606:127;5589:224;;;5765:37;;-1:-1:-1;;;5765:37:7;;;;;;;;;;;5589:224;5842:24;;;;5822:44;;;;5891:19;;;;5876:34;;;;5941:25;;;;5920:46;;5990:18;;;;5976:11;:32;;-1:-1:-1;;;;;;5976:32:7;-1:-1:-1;;;;;5976:32:7;;;;;;6034:20;;;;6018:36;;;;;6082:12;;;:18;6103:4;-1:-1:-1;;6082:65:7;;;6143:4;6123:7;:12;;;:17;;;:24;6082:65;:111;;;;6189:4;6163:7;:12;;;:23;;;:30;6082:111;6065:202;;;6225:31;;-1:-1:-1;;;6225:31:7;;;;;;;;;;;6065:202;6288:12;;;;;:18;6276:30;;6327:12;;:17;;;6316:28;;6371:12;:23;;;6354:40;;6452:17;;;6439:30;;-1:-1:-1;;;;;;;;1642:14:12::2;;::::0;-1:-1:-1;732:1765:12;;-1:-1:-1;;732:1765:12;14:347:167;81:2;75:9;123:6;111:19;;-1:-1:-1;;;;;145:34:167;;181:22;;;142:62;139:185;;;246:10;241:3;237:20;234:1;227:31;281:4;278:1;271:15;309:4;306:1;299:15;139:185;340:2;333:22;14:347;:::o;366:185::-;453:13;;-1:-1:-1;;;;;495:31:167;;485:42;;475:70;;541:1;538;531:12;475:70;366:185;;;:::o;556:622::-;618:5;666:4;654:9;649:3;645:19;641:30;638:50;;;684:1;681;674:12;638:50;717:2;711:9;759:4;747:17;;-1:-1:-1;;;;;779:34:167;;815:22;;;776:62;773:185;;;880:10;875:3;871:20;868:1;861:31;915:4;912:1;905:15;943:4;940:1;933:15;773:185;978:10;974:2;967:22;;1007:6;998:15;;1043:9;1037:16;1029:6;1022:32;1108:2;1097:9;1093:18;1087:25;1082:2;1074:6;1070:15;1063:50;1167:2;1156:9;1152:18;1146:25;1141:2;1133:6;1129:15;1122:50;;556:622;;;;:::o;1183:1469::-;1325:6;1333;1341;1349;1393:9;1384:7;1380:23;1423:3;1419:2;1415:12;1412:32;;;1440:1;1437;1430:12;1412:32;1463:6;1489:2;1485;1481:11;1478:31;;;1505:1;1502;1495:12;1478:31;1531:17;;:::i;:::-;1518:30;;1571:48;1609:9;1571:48;:::i;:::-;1564:5;1557:63;1673:2;1662:9;1658:18;1652:25;1647:2;1640:5;1636:14;1629:49;1731:2;1720:9;1716:18;1710:25;1705:2;1698:5;1694:14;1687:49;1789:2;1778:9;1774:18;1768:25;1763:2;1756:5;1752:14;1745:49;1848:3;1837:9;1833:19;1827:26;1821:3;1814:5;1810:15;1803:51;1908:3;1897:9;1893:19;1887:26;1881:3;1874:5;1870:15;1863:51;1968:3;1957:9;1953:19;1947:26;1941:3;1934:5;1930:15;1923:51;2007:58;2060:3;2049:9;2045:19;2007:58;:::i;:::-;2001:3;1994:5;1990:15;1983:83;2085:3;2120:57;2173:2;2162:9;2158:18;2120:57;:::i;:::-;2104:14;;;2097:81;2197:3;2232:62;2286:7;2266:18;;;2232:62;:::i;:::-;2216:14;;;2209:86;2352:6;2337:22;;2331:29;2322:6;2311:18;;2304:57;2418:3;2403:19;;2397:26;2388:6;2377:18;;2370:54;2473:18;;2467:25;2220:5;;-1:-1:-1;2467:25:167;-1:-1:-1;2511:58:167;2564:3;2549:19;;2511:58;:::i;:::-;2501:68;;2588:58;2641:3;2630:9;2626:19;2588:58;:::i;:::-;2578:68;;1183:1469;;;;;;;:::o;2657:209::-;2689:1;2715;2705:132;;2759:10;2754:3;2750:20;2747:1;2740:31;2794:4;2791:1;2784:15;2822:4;2819:1;2812:15;2705:132;-1:-1:-1;2851:9:167;;2657:209::o;:::-;732:1765:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "732:1765:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:160:41;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2173:92:12;;;:::i;:::-;;;-1:-1:-1;;;;;1255:32:167;;;1237:51;;1225:2;1210:18;2173:92:12;1074:220:167;1822:179:3;;;;;;:::i;:::-;;:::i;:::-;;;;1745:13:167;;-1:-1:-1;;;;;1741:54:167;1723:73;;1867:4;1855:17;;;1849:24;1845:2;1834:40;1812:20;;;1805:70;;;;1696:18;1822:179:3;1521:360:167;2777:232:41;;;;;;:::i;:::-;;:::i;:::-;;;2543:25:167;;;2531:2;2516:18;2777:232:41;2397:177:167;1696:182:41;;;;;;:::i;:::-;;:::i;3411:164::-;;;;;;:::i;:::-;;:::i;3291:1460:3:-;;;:::i;:::-;;;;;;;:::i;3724:128:41:-;;;;;;:::i;:::-;;:::i;6727:1589:3:-;;;;;;:::i;:::-;;:::i;2206:910::-;;;:::i;:::-;;;;;;;:::i;2013:152:41:-;;;;;;:::i;:::-;;:::i;5811:564:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1429:97:41:-;;;:::i;1590:101:3:-;;;:::i;5275:132::-;;;:::i;1195:111:41:-;;;:::i;2369:126:12:-;;;;;;:::i;:::-;;:::i;:::-;;;7448:14:167;;7441:22;7423:41;;7411:2;7396:18;2369:126:12;7283:187:167;5413:159:3;;;:::i;:::-;;;;;;;:::i;2354:195:41:-;;;;;;:::i;:::-;;:::i;4757:367:3:-;;;:::i;:::-;;;;9392:13:167;;-1:-1:-1;;;;;9388:22:167;;;9370:41;;9471:4;9459:17;;;9453:24;9449:33;9427:20;;;9420:63;;;;9290:18;4757:367:3;9111:378:167;3128:160:41;3205:13;3230:51;3249:30;3271:7;3249:21;:30::i;:::-;3238:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;3230:7;:51::i;:::-;3128:160;;;:::o;2173:92:12:-;2240:17;;;-1:-1:-1;;;;;2251:5:12;1255:32:167;2240:17:12;;;1237:51:167;2212:8:12;;2232:26;;1210:18:167;2240:17:12;1074:220:167;2232:26:12;2173:92;:::o;1822:179:3:-;-1:-1:-1;;;;;;;;;;;;;;;;;1946:48:3;1965:12;:27;1978:13;1965:27;;;;;;;;;;;1954:39;;;;;;9710:13:167;-1:-1:-1;;;;;9750:50:167;;9732:69;;9858:3;9854:19;9850:2;9839:35;9832:4;9817:20;;9810:65;9681:2;9666:18;;9494:387;2777:232:41;2917:7;2955:27;;;:18;:27;;;;;;;;-1:-1:-1;;;;;2955:36:41;;;;;;;;;;;:45;;;;;;;;;;;2944:57;;;;;2543:25:167;2936:66:41;;2516:18:167;2944:57:41;2397:177:167;2936:66:41;2777:232;;;;;:::o;1696:182::-;1803:7;1841:19;;;:10;:19;;;;;;;;-1:-1:-1;;;;;1841:28:41;;;;;;;;;;1830:40;;;;;2543:25:167;1822:49:41;;2516:18:167;1830:40:41;2397:177:167;1822:49:41;1696:182;;;;:::o;3411:164::-;3490:13;3515:53;3534:32;3558:7;3534:23;:32::i;3291:1460:3:-;3337:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3337:27:3;3376:18;3397:16;:14;:16::i;:::-;3559:13;:29;3496:12;:48;;;;3423:21;3447:34;;;;;3376:37;;-1:-1:-1;3423:21:3;-1:-1:-1;;;;;3559:29:3;;;;3447:97;;3496:48;3447:97;:::i;:::-;:141;;;;:::i;:::-;3423:165;;3598:20;3634:1;3621:10;:14;:171;;3791:1;3621:171;;;3650:126;3765:10;3650:89;3704:34;3727:10;3704:22;:34::i;:::-;3650:53;:89::i;:::-;:114;;:126::i;:::-;3841:864;;;;;;;;3891:12;:26;-1:-1:-1;;;;;3891:26:3;;;3841:864;;3948:28;;;;3841:864;;;;-1:-1:-1;;;4004:25:3;;;;;;3841:864;;;;;;;;;;;;;;;;;;;4097:29;;;;;3841:864;;;;4165:36;;;;;3841:864;;;;4234:30;;;;;;3841:864;;;;4304:37;;;;;3891:26;3841:864;;;4550:13;:29;;;;3841:864;;;;4619:22;;;;3841:864;;;;3598:194;;-1:-1:-1;3802:36:3;;3841:864;;;4411:18;;:92;;4468:35;:12;4489:13;4468:20;:35::i;:::-;4411:92;;;4448:1;4411:92;3841:864;;4669:25;;-1:-1:-1;;;4669:25:3;;-1:-1:-1;;;;;4669:25:3;3841:864;;;;;4723:20;;3802:903;;-1:-1:-1;4715:29:3;;4723:20;;3802:903;;4723:20;;:::i;4715:29::-;3366:1385;;;;3291:1460;:::o;3724:128:41:-;-1:-1:-1;;;;;3827:16:41;;3789:7;3827:16;;;:7;:16;;;;;;;;;3816:28;;;;;2543:25:167;3808:37:41;;2516:18:167;3816:28:41;2397:177:167;6727:1589:3;6865:7;:21;6976:7;:13;;6781:7;;-1:-1:-1;;;;;;;;6865:21:3;;;;;6920:12;;;6781:7;;6976;6920:12;;6976:13;;;;;;:::i;:::-;;;;;;;;;6944:45;;;;;;;;;6976:13;;6944:45;;;;;;;;;-1:-1:-1;;;;;6944:45:3;;;;;;-1:-1:-1;7020:31:3;7045:6;7028:13;7020:31;:::i;:::-;6999:52;-1:-1:-1;7212:20:3;7235:9;;:41;;7268:8;7275:1;7268:4;:8;:::i;:::-;7235:41;;;7247:7;:14;:18;;7264:1;;7247:18;:::i;:::-;7314:16;;;;;;;;;7286:25;7314:16;;;;;;;7212:64;;-1:-1:-1;7340:547:3;7363:4;7347:12;:20;7340:547;;7549:35;7587:7;7595:12;7587:21;;;;;;;;:::i;:::-;;;;;;;;;;7634:26;;7587:21;;-1:-1:-1;7634:26:3;;7626:49;-1:-1:-1;7622:137:3;;7695:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7695:26:3;;;;;;-1:-1:-1;7739:5:3;;7622:137;7787:17;;:89;;7860:16;7875:1;7860:12;:16;:::i;:::-;7787:89;;;7823:7;:14;:18;;7840:1;;7823:18;:::i;:::-;7772:104;;7369:518;7340:547;;;7901:17;;:22;;:17;:22;7897:64;;7932:29;;-1:-1:-1;;;7932:29:3;;;;;;;;;;;7897:64;8089:16;8144:7;:12;;;-1:-1:-1;;;;;8136:21:3;8116:11;:16;;;-1:-1:-1;;;;;8108:25:3;:49;;;;:::i;:::-;8240:17;;8195:21;;8089:68;;-1:-1:-1;8167:17:3;;8187:71;;8232:26;;;;;8187:30;:71;:::i;:::-;8167:91;-1:-1:-1;8268:41:3;8287:20;8167:91;8287:8;:20;:::i;:::-;8276:32;;;;;;2543:25:167;;2531:2;2516:18;;2397:177;8268:41:3;6790:1526;;;;;;;;6727:1589;;;:::o;2206:910::-;2278:29;;:::i;:::-;2372:713;;;;;;;;-1:-1:-1;;;;;2428:10:3;2372:713;;;;2479:18;2372:713;;;;;;;;2541:21;2372:713;;;;2610:25;2372:713;;;;;;;;2675:17;2372:713;;;;2734:19;2372:713;;;;2788:12;2372:713;;;;2834:11;;;;2372:713;;;;2881:13;2372:713;;;2834:11;2372:713;;;2922:53;;;;;;;2939:9;2922:53;;2950:8;2922:53;;;;2960:14;2922:53;;;;2372:713;;;;;;;3052:7;:14;2372:713;;;;3008:10;2372:713;;;;2344:755;;2323:786;;2344:755;;2372:713;2344:755;;:::i;2013:152:41:-;2097:7;2135:21;;;:12;:21;;;;;;;;;2124:33;;;;;2543:25:167;2116:42:41;;2516:18:167;2124:33:41;2397:177:167;5811:564:3;5889:16;5917:23;5957:6;5943:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5943:28:3;;5917:54;;6042:9;6037:294;6057:17;;;6037:294;;;6092:12;6107:6;;6114:1;6107:9;;;;;;;:::i;:::-;;;;;;;6092:24;;6130:12;6213:4;6207:11;6199:19;;6257:4;6245:6;6252:1;6245:9;;;;;;;;:::i;:::-;;;;;;;;;;:16;-1:-1:-1;;6303:3:3;;6037:294;;;;6341:27;6360:6;6349:18;;;;;;;;:::i;6341:27::-;5907:468;5811:564;;;;:::o;1429:97:41:-;1498:20;;;-1:-1:-1;;;;;1509:8:41;1255:32:167;1498:20:41;;;1237:51:167;1471:7:41;;1490:29;;1210:18:167;1498:20:41;1074:220:167;1590:101:3;1661:22;;;-1:-1:-1;;;;;1672:10:3;1255:32:167;1661:22:3;;;1237:51:167;1634:7:3;;1653:31;;1210:18:167;1661:22:3;1074:220:167;5275:132:3;5338:7;5357:43;5376:22;;5365:34;;;;;;2543:25:167;;2531:2;2516:18;;2397:177;1195:111:41;1244:7;1263:36;1282:15;1271:27;;;;;;2543:25:167;;2531:2;2516:18;;2397:177;2369:126:12;-1:-1:-1;;;;;2465:21:12;;2430:4;2465:21;;;:12;:21;;;;;;;;;2454:33;;2446:42;;2454:33;;2465:21;;;2454:33;7448:14:167;;7441:22;7423:41;;7411:2;7396:18;;7283:187;5413:159:3;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5532:33:3;5551:12;5540:24;;;;;;;;:::i;2354:195:41:-;-1:-1:-1;;;;;2504:26:41;;;2469:4;2504:26;;;:17;:26;;;;;;;;:36;;;;;;;;;;;;2493:48;;2504:36;;;;7448:14:167;7441:22;2493:48:41;;;7423:41:167;;;;2469:4:41;;2485:57;;7396:18:167;2493:48:41;7283:187:167;4757:367:3;-1:-1:-1;;;;;;;;;;;;;;;;;4927:166:3;;;;;;;;4991:13;:29;-1:-1:-1;;;;;4991:29:3;;;4927:166;;;-1:-1:-1;;;5052:22:3;;;;;4927:166;;;;;;;4899:208;;;;;9370:41:167;;;;9453:24;;9449:33;9427:20;;;9420:63;;;;4878:239:3;;9290:18:167;;4899:208:3;9111:378:167;2533:719:32;2606:19;2200:4;2196:14;;;-1:-1:-1;;;;;2253:120:32;;2638:20;2736:19;2253:120;2736:8;:19::i;:::-;2709:46;-1:-1:-1;2779:16:32;2769:6;:26;;;;;;;;:::i;:::-;;2765:481;;2811:23;;;;;;;;;;;;;-1:-1:-1;;;2811:23:32;;;;;2765:481;;;2865:18;2855:6;:28;;;;;;;;:::i;:::-;;2851:395;;2952:10;2914:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;2899:65;;2851:395;;;2995:19;2985:6;:29;;;;;;;;:::i;:::-;;2981:265;;3084:10;3045:50;;;;;;;;:::i;2981:265::-;3127:29;3117:6;:39;;;;;;;;:::i;:::-;;3113:133;;3187:47;;13498:29:167;3187:47:32;;;13486:42:167;13544:12;;3187:47:32;;;;;;;;;;;;;3172:63;;3113:133;2627:625;;;2533:719;;;:::o;4040:106:41:-;4132:6;4109:30;;-1:-1:-1;;;4109:30:41;;;;;;;;:::i;:::-;;;;;;;;3384:705:32;3459:19;2200:4;2196:14;;;-1:-1:-1;;;;;2253:120:32;;3491:20;3589:19;2253:120;3589:8;:19::i;:::-;3562:46;-1:-1:-1;3632:16:32;3622:6;:26;;;;;;;;:::i;:::-;;3618:465;;3664:23;;;;;;;;;;;;;-1:-1:-1;;;3664:23:32;;;;;3618:465;;;3718:18;3708:6;:28;;;;;;;;:::i;:::-;;3704:379;;3804:10;3767:48;;;;;;;;:::i;3704:379::-;3847:19;3837:6;:29;;;;;;;;:::i;:::-;;3833:250;;3935:10;3897:49;;;;;;;;:::i;3833:250::-;3978:29;3968:6;:39;;;;;;;;:::i;:::-;;3964:119;;4038:33;;-1:-1:-1;;;4038:33:32;;;14899:28:167;14943:12;;4038:33:32;14697:264:167;1891:188:12;2028:44;;-1:-1:-1;;;2028:44:12;;565:4:33;2028:44:12;;;2543:25:167;1981:18:12;;2028:5;-1:-1:-1;;;;;2028:21:12;;;;2516:18:167;;2028:44:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2015:57;;1891:188;:::o;8679:1001:7:-;8793:53;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8793:53:7;8877:796;;;;;;;;8940:12;:26;-1:-1:-1;;;;;8940:26:7;;;8877:796;;8997:28;;;;8877:796;;;;-1:-1:-1;;;9053:25:7;;;;;8877:796;;;;;;;;;;;;;9148:18;8877:796;;;;9202:21;8877:796;;;;9250:12;8877:796;;;;9294:29;;;;8877:796;;;;9410:36;;8877:796;;8940:26;8877:796;;;9363:97;;9410:36;9363:29;:97::i;:::-;8877:796;;9493:30;;-1:-1:-1;;;;;;;;9493:30:7;;;;;;8877:796;;;;9611:37;;8877:796;;;;;9564:98;;9611:37;;;9564:29;:98::i;:::-;8877:796;;8862:811;8679:1001;-1:-1:-1;;8679:1001:7:o;20164:5466:34:-;20267:7;20417:20;20575:106;20630:7;:33;;;20575:7;:25;;;:33;;:106;;;;:::i;:::-;20493:32;;;;20460:24;;;;:66;;:32;:66::i;:::-;20440:255;;;;:::i;:::-;20417:278;;20705:30;20738:113;20783:7;:21;;;20818:7;:23;;;20738:31;:113::i;:::-;20705:146;;20881:1;20865:13;:17;20861:3671;;;21550:21;21574:291;21623:22;21663:7;:20;;;21701:7;:28;;;21753:7;:19;;;150:4:33;21747:25:34;;;;:::i;:::-;21790:7;:18;;;21826:7;:25;;;21574:31;:291::i;:::-;21550:315;-1:-1:-1;21895:41:34;21550:315;21921:13;21895:17;:41::i;:::-;21879:57;-1:-1:-1;22005:17:34;;22001:565;;22180:371;22276:22;22324:7;:20;;;22370:13;22415:7;:19;;;150:4:33;22409:25:34;;;;:::i;:::-;22460:7;:18;;;22504:7;:25;;;22180:70;:371::i;:::-;22155:396;;:7;;:396;;;;;:::i;:::-;;;-1:-1:-1;22001:565:34;20884:1692;20861:3671;;;22602:1;22586:13;:17;22582:1950;;;23407:14;23408:13;23407:14;:::i;:::-;23391:30;;23482:21;23506:244;23554:22;23594:7;:20;;;23638:7;:19;;;150:4:33;23632:25:34;;;;:::i;:::-;23675:7;:18;;;23711:7;:25;;;23506:30;:244::i;:::-;23482:268;-1:-1:-1;23780:41:34;23482:268;23806:13;23780:17;:41::i;:::-;23764:57;-1:-1:-1;23886:17:34;;23882:563;;24061:369;24155:22;24203:7;:20;;;24249:13;24294:7;:19;;;150:4:33;24288:25:34;;;;:::i;:::-;24339:7;:18;;;24383:7;:25;;;24061:68;:369::i;:::-;24036:394;;:7;;:394;;;;;:::i;:::-;;;-1:-1:-1;23882:563:34;24483:38;24508:13;24491;24483:38;:::i;:::-;24458:63;;:7;;:63;;;;;:::i;:::-;;;-1:-1:-1;;22582:1950:34;24665:19;24899:153;24962:7;:32;;;150:4:33;24956:38:34;;;;:::i;:::-;25016:18;;;;24899:24;;;;;:153;:35;:153::i;:::-;24707:143;24767:7;:33;;;150:4:33;24761:39:34;;;;:::i;:::-;24818:18;;;;24707:25;;;;;:143;:36;:143::i;:::-;24687:379;;;;:::i;:::-;24665:401;;25076:27;25150:12;25113:7;:21;;;25106:56;;;;:::i;:::-;25076:86;;25206:7;:28;;;25176:20;:59;25172:131;;;25258:34;;-1:-1:-1;;;25258:34:34;;;;;;;;;;;25172:131;25312:53;;;25595:28;;;;25571:52;;25344:20;25571:52;:::i;:::-;25564:59;20164:5466;-1:-1:-1;;;;;;20164:5466:34:o;1814:119:33:-;1876:7;1903:22;1914:1;1917;1920:4;1903:10;:22::i;2207:165::-;2269:7;2296:22;2307:1;2310:4;2316:1;2296:10;:22::i;4247:1154:32:-;4582:26;;;4545:2;4582:26;;;;;;;;;4316:20;;4545:2;4519:23;;4545:2;4582:26;;;;;;;;;;-1:-1:-1;;4557:51:32;-1:-1:-1;4841:9:32;4848:2;4841:4;:9;:::i;:::-;4840:16;;4854:2;4840:16;:::i;:::-;4806:62;;4773:9;4783:19;4801:1;4783:15;:19;:::i;:::-;4773:30;;;;;;;;:::i;:::-;;;;:95;-1:-1:-1;;;;;4773:95:32;;;;;;;;-1:-1:-1;4878:10:32;4886:2;4878:10;;:::i;:::-;;-1:-1:-1;4915:1:32;4926:201;4933:9;;4926:201;;5039:9;5046:2;5039:4;:9;:::i;:::-;5038:16;;5052:2;5038:16;:::i;:::-;5000:70;;4958:9;4995:1;4968:24;4986:6;4968:15;:24;:::i;:::-;:28;;;;:::i;:::-;4958:39;;;;;;;;:::i;:::-;;;;:112;-1:-1:-1;;;;;4958:112:32;;;;;;;;-1:-1:-1;5084:10:32;5092:2;5084:10;;:::i;:::-;;-1:-1:-1;5108:8:32;;;;:::i;:::-;;;;4926:201;;;5298:28;;;;5283:44;5340:22;;;5283:44;4247:1154;-1:-1:-1;;4247:1154:32:o;7277:444:7:-;7376:21;7409:24;565:4:33;7436:19:7;:17;:19::i;:::-;:43;;;;:::i;:::-;7409:70;;7521:16;7505:13;:32;:95;;7599:1;7505:95;;;7552:32;7568:16;7552:13;:32;:::i;:::-;7489:111;-1:-1:-1;7626:88:7;7663:41;565:4:33;7663:17:7;:41;:::i;:::-;7627:13;;7626:23;:88::i;30120:340:34:-;30255:7;;30306:53;30343:16;30313:14;30306:53;:::i;:::-;30274:85;;30403:1;30377:22;:27;;30369:36;;;;;12091:1116:36;12264:7;12704:9;12716:21;12722:1;12725;12728;12731;12734:2;12716:5;:21::i;:::-;12704:33;-1:-1:-1;12747:16:36;12770:37;12781:21;12800:1;12781:14;:2;12790:4;12781:8;:14::i;:::-;:18;;:21::i;:::-;12770:1;;12804:2;12770:10;:37::i;:::-;12766:41;;:1;:41;:::i;:::-;12747:60;;150:4:33;12821:8:36;:15;12817:295;;12935:28;12948:14;150:4:33;12960:1:36;12948:11;:14::i;:::-;12935:8;;:12;:28::i;:::-;12924:39;;12817:295;;;13075:26;13088:12;150:4:33;13098:1:36;13088:9;:12::i;13075:26::-;13064:37;;12817:295;13188:12;13199:1;13188:8;:12;:::i;:::-;13181:19;12091:1116;-1:-1:-1;;;;;;;;;12091:1116:36:o;14433:104:33:-;14491:7;14521:1;14517;:5;:13;;14529:1;14517:13;;;-1:-1:-1;14525:1:33;14433:104;-1:-1:-1;14433:104:33:o;7297:489:36:-;7486:14;7512:12;7554:140;7606:1;7621;7636:2;7652:1;7667;7682:2;7554:38;:140::i;:::-;7534:160;;-1:-1:-1;7534:160:36;-1:-1:-1;7534:160:36;7704:76;;7739:30;;-1:-1:-1;;;7739:30:36;;;;;;;;;;;7704:76;7502:284;7297:489;;;;;;;;:::o;10391:1124::-;10541:7;11029:9;11041:19;11045:1;11048;11051;11054;11057:2;11041:3;:19::i;:::-;11029:31;-1:-1:-1;11070:16:36;11089:28;150:4:33;11097:13:36;:1;11107:2;11097:9;:13::i;:::-;:19;;;;:::i;:::-;11089:1;;:7;:28::i;:::-;11070:47;;150:4:33;11131:8:36;:15;11127:293;;11242:26;11255:12;150:4:33;11265:1:36;11255:9;:12::i;11242:26::-;11231:37;;11127:293;;;11381:28;11394:14;150:4:33;11406:1:36;11394:11;:14::i;11381:28::-;11370:39;;11127:293;11496:12;11500:8;11496:1;:12;:::i;:::-;11489:19;10391:1124;-1:-1:-1;;;;;;;;10391:1124:36:o;3827:1099::-;4014:7;4170:9;4182:19;4186:1;4189;4192;4195;4198:2;4182:3;:19::i;:::-;4170:31;-1:-1:-1;4244:15:36;4257:1;4245:6;4249:2;4245:1;:6;:::i;4244:15::-;4240:19;-1:-1:-1;4415:10:36;4428:23;4445:2;4449:1;4429:5;4240:19;4429:1;:5;:::i;:::-;4428:16;:23;:16;:23::i;:::-;4415:36;;150:4:33;4465:2:36;:9;4461:261;;4563:20;4570:12;150:4:33;4580:1:36;4570:9;:12::i;4563:20::-;4558:25;;4461:261;;;4689:22;4696:14;150:4:33;4708:1:36;4696:11;:14::i;4689:22::-;4684:27;;4461:261;4804:12;:2;4813;4804:8;:12::i;:::-;4799:17;-1:-1:-1;4913:6:36;4918:1;4799:17;4913:6;:::i;984:556:33:-;1100:9;1365:1;-1:-1:-1;;1348:19:33;1345:1;1342:26;1339:1;1335:34;1328:42;1315:11;1311:60;1284:146;;1414:1;1411;1404:12;1284:146;-1:-1:-1;1501:9:33;;1497:27;;984:556::o;7834:223:7:-;7910:24;8012:37;8030:19;8012:15;:37;:::i;:::-;7981:69;;:15;:69;:::i;14610:278:36:-;14750:7;14873:8;:1;14879;14873:5;:8::i;:::-;14832:38;14845:20;14863:1;14845:13;:2;14856:1;14845:10;:13::i;:20::-;14832:1;;14867:2;14832:12;:38::i;:::-;:49;;;;:::i;3750:115:33:-;3810:7;3837:20;3846:1;3849;3852:4;3837:8;:20::i;4671:846::-;4729:7;4795:1;4800;4795:6;4791:50;;-1:-1:-1;565:4:33;4817:13;;4791:50;4894:1;4899;4894:6;4890:45;;-1:-1:-1;4923:1:33;4916:8;;4890:45;5098:1;5073:15;5276:14;5287:1;5276:3;:14::i;:::-;5263:27;-1:-1:-1;5368:18:33;;;5405:22;565:4;5368:18;5405:22;:::i;:::-;;;5500:9;5504:4;5500:3;:9::i;2726:748::-;2840:9;3105:1;-1:-1:-1;;3088:19:33;3085:1;3082:26;3079:1;3075:34;3068:42;3055:11;3051:60;3024:146;;3154:1;3151;3144:12;3024:146;-1:-1:-1;3421:9:33;;3368:27;;;3365:34;;3417:27;;;3344:114;;2726:748::o;4141:115::-;4201:7;4228:20;4237:1;4240:4;4246:1;4228:8;:20::i;8540:1314:36:-;8733:14;8749:12;8910:9;8922:19;8926:1;8929;8932;8935;8938:2;8922:3;:19::i;:::-;8910:31;-1:-1:-1;8984:15:36;8997:1;8985:6;8989:2;8985:1;:6;:::i;8984:15::-;8980:19;;9081:1;9077;:5;9073:53;;;9106:1;9109:5;9098:17;;;;;;;9073:53;9281:10;9294:23;9311:2;9315:1;9295:5;9299:1;9295;:5;:::i;9294:23::-;9281:36;;150:4:33;9331:2:36;:9;9327:263;;9430:20;9437:12;150:4:33;9447:1:36;9437:9;:12::i;9430:20::-;9425:25;;9327:263;;;9557:22;9564:14;150:4:33;9576:1:36;9564:11;:14::i;9557:22::-;9552:27;;9327:263;9672:12;:2;9681;9672:8;:12::i;:::-;9667:17;;9780:2;9776:1;:6;9772:52;;;9807:6;9811:2;9807:1;:6;:::i;:::-;9798:15;;9772:52;9843:4;9833:14;;8763:1091;;8540:1314;;;;;;;;;;:::o;13772:272::-;13910:7;14029:8;:1;14035;14029:5;:8::i;:::-;13992:34;14003:18;14019:1;14003:11;:2;14012:1;14003:8;:11::i;:18::-;13992:1;;14023:2;13992:10;:34::i;9632:3592:33:-;9677:8;9730:1;9725;:6;9721:60;;9740:41;;-1:-1:-1;;;9740:41:33;;;;;;;;;;;9721:60;-1:-1:-1;10747:2:33;-1:-1:-1;;;;;;;10158:1:33;10154:49;10261:9;;;10241:18;10238:33;10235:1;10231:41;10225:48;10323:9;;;10311:10;10308:25;10305:1;10301:33;10295:40;10381:9;;;10373:6;10370:21;10367:1;10363:29;10357:36;10437:9;;;10431:4;10428:19;10425:1;10421:27;;;10415:34;;;10492:9;;;10487:3;10484:18;10481:1;10477:26;10471:33;10547:9;;;10539:18;;;10536:1;10532:26;;;10526:33;;;10595:9;;;10587:18;;;10581:25;10777:3;:7;;;;;10763:22;;;;10810:17;;;11603:31;11599:35;;11654:5;;11653:13;;11670:32;11652:50;11722:5;;11721:13;;11738:33;11720:51;11791:5;;11790:13;;11807:33;11789:51;11860:5;;11859:13;;11876:33;11858:51;11929:5;;11928:13;;11945:32;11927:50;11997:5;;11996:13;;12013:30;11995:48;11000:31;10996:35;;11051:5;;11050:13;;11067:32;11049:50;11119:5;;11118:13;;11135:32;11117:50;11187:5;;11186:13;;-1:-1:-1;;11185:50:33;11255:5;;11254:13;;-1:-1:-1;;11253:50:33;11323:5;;11322:13;;;-1:-1:-1;;11321:50:33;11389:5;-1:-1:-1;;11389:46:33;12384:10;12774:43;12769:48;-1:-1:-1;;10743:6:33;;;;12897:71;:91;12876:112;13061:72;13056:77;13204:3;13198:9;;9632:3592::o;5773:3347::-;5819:8;-1:-1:-1;;5996:1:33;:26;5992:40;;-1:-1:-1;6031:1:33;;5773:3347;-1:-1:-1;5773:3347:33:o;5992:40::-;6231:21;6226:1;:26;6222:99;;6277:44;;-1:-1:-1;;;6277:44:33;;;;;;;;;;;6222:99;6594:7;6588:2;6583:7;;;6582:19;;-1:-1:-1;6930:8:33;7014:2;6954:29;6943:7;;;6942:41;-1:-1:-1;;;6942:51:33;6941:75;;7042:29;7038:33;;7034:37;;;-1:-1:-1;;7713:35:33;;7768:5;;7348:2;7767:13;;;7784:32;7766:50;7836:5;;7835:13;;-1:-1:-1;;7834:51:33;7905:5;;7904:13;;7921:34;7903:52;7975:5;;7974:13;;-1:-1:-1;;7973:53:33;8046:5;;8045:13;;8062:35;8044:53;7354:32;7287:31;7283:35;;7338:5;;7337:13;;7336:50;;;7411:5;;;-1:-1:-1;;7411:40:33;7471:5;7470:13;;;7487:35;7469:53;7540:5;;;-1:-1:-1;;;7540:50:33;8462:10;8999:49;8966:82;9081:3;:7;;;;8965:124;;;;;;-1:-1:-1;;5773:3347:33:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:167:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:167;;14:180;-1:-1:-1;14:180:167:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:167;423:16;;416:27;199:250::o;454:271::-;496:3;534:5;528:12;561:6;556:3;549:19;577:76;646:6;639:4;634:3;630:14;623:4;616:5;612:16;577:76;:::i;:::-;707:2;686:15;-1:-1:-1;;682:29:167;673:39;;;;714:4;669:50;;454:271;-1:-1:-1;;454:271:167:o;730:220::-;879:2;868:9;861:21;842:4;899:45;940:2;929:9;925:18;917:6;899:45;:::i;1886:173::-;1954:20;;-1:-1:-1;;;;;2003:31:167;;1993:42;;1983:70;;2049:1;2046;2039:12;2064:328;2141:6;2149;2157;2210:2;2198:9;2189:7;2185:23;2181:32;2178:52;;;2226:1;2223;2216:12;2178:52;2262:9;2249:23;2239:33;;2291:38;2325:2;2314:9;2310:18;2291:38;:::i;:::-;2281:48;;2348:38;2382:2;2371:9;2367:18;2348:38;:::i;:::-;2338:48;;2064:328;;;;;:::o;2579:254::-;2647:6;2655;2708:2;2696:9;2687:7;2683:23;2679:32;2676:52;;;2724:1;2721;2714:12;2676:52;2760:9;2747:23;2737:33;;2789:38;2823:2;2812:9;2808:18;2789:38;:::i;:::-;2779:48;;2579:254;;;;;:::o;2838:1098::-;3055:13;;3037:32;;3125:4;3113:17;;;3107:24;3085:20;;;3078:54;3188:4;3176:17;;;3170:24;3148:20;;;3141:54;3251:4;3239:17;;;3233:24;3211:20;;;3204:54;3314:4;3302:17;;;3296:24;3274:20;;;3267:54;3377:4;3365:17;;;3359:24;3337:20;;;3330:54;3440:4;3428:17;;;3422:24;3400:20;;;3393:54;3503:4;3491:17;;;3485:24;3463:20;;;3456:54;3529:6;3577:15;;;3571:22;3551:18;;;3544:50;3613:6;3661:15;;;3655:22;3635:18;;;3628:50;3697:6;3745:15;;;3739:22;3719:18;;;3712:50;3781:6;3829:15;;;3823:22;3803:18;;;3796:50;3865:6;3913:15;;;3907:22;3887:18;;;3880:50;;;;3024:3;3009:19;;2838:1098::o;3941:186::-;4000:6;4053:2;4041:9;4032:7;4028:23;4024:32;4021:52;;;4069:1;4066;4059:12;4021:52;4092:29;4111:9;4092:29;:::i;4338:1197::-;4570:13;;-1:-1:-1;;;;;1031:31:167;1019:44;;4528:3;4513:19;;4651:4;4643:6;4639:17;4633:24;4626:4;4615:9;4611:20;4604:54;4714:4;4706:6;4702:17;4696:24;4689:4;4678:9;4674:20;4667:54;4777:4;4769:6;4765:17;4759:24;4752:4;4741:9;4737:20;4730:54;4840:4;4832:6;4828:17;4822:24;4815:4;4804:9;4800:20;4793:54;4903:4;4895:6;4891:17;4885:24;4878:4;4867:9;4863:20;4856:54;4966:4;4958:6;4954:17;4948:24;4941:4;4930:9;4926:20;4919:54;5020:4;5012:6;5008:17;5002:24;5035:64;5093:4;5082:9;5078:20;5064:12;-1:-1:-1;;;;;1031:31:167;1019:44;;955:114;5035:64;-1:-1:-1;5118:6:167;5161:15;;;5155:22;-1:-1:-1;;;;;1031:31:167;;5231:18;;;1019:44;-1:-1:-1;;5269:6:167;5312:15;;;5306:22;4202:12;;5376:18;;;4190:25;4264:4;4253:16;;4247:23;4231:14;;;4224:47;4320:4;4309:16;;4303:23;4287:14;;;4280:47;-1:-1:-1;;5453:6:167;5441:19;;5435:26;5426:6;5411:22;;5404:58;5520:6;5508:19;;;5502:26;5493:6;5478:22;;;5471:58;4338:1197;:::o;5540:615::-;5626:6;5634;5687:2;5675:9;5666:7;5662:23;5658:32;5655:52;;;5703:1;5700;5693:12;5655:52;5743:9;5730:23;5772:18;5813:2;5805:6;5802:14;5799:34;;;5829:1;5826;5819:12;5799:34;5867:6;5856:9;5852:22;5842:32;;5912:7;5905:4;5901:2;5897:13;5893:27;5883:55;;5934:1;5931;5924:12;5883:55;5974:2;5961:16;6000:2;5992:6;5989:14;5986:34;;;6016:1;6013;6006:12;5986:34;6069:7;6064:2;6054:6;6051:1;6047:14;6043:2;6039:23;6035:32;6032:45;6029:65;;;6090:1;6087;6080:12;6029:65;6121:2;6113:11;;;;;6143:6;;-1:-1:-1;5540:615:167;;-1:-1:-1;;;;5540:615:167:o;6160:632::-;6331:2;6383:21;;;6453:13;;6356:18;;;6475:22;;;6302:4;;6331:2;6554:15;;;;6528:2;6513:18;;;6302:4;6597:169;6611:6;6608:1;6605:13;6597:169;;;6672:13;;6660:26;;6741:15;;;;6706:12;;;;6633:1;6626:9;6597:169;;;-1:-1:-1;6783:3:167;;6160:632;-1:-1:-1;;;;;;6160:632:167:o;7475:1366::-;7699:13;;-1:-1:-1;;;;;1365:46:167;1353:59;;7667:3;7652:19;;7771:4;7763:6;7759:17;7753:24;7786:54;7834:4;7823:9;7819:20;7805:12;-1:-1:-1;;;;;1365:46:167;1353:59;;1299:119;7786:54;;7889:4;7881:6;7877:17;7871:24;7904:55;7953:4;7942:9;7938:20;7922:14;1499:2;1488:21;1476:34;;1423:93;7904:55;;8008:4;8000:6;7996:17;7990:24;8023:56;8073:4;8062:9;8058:20;8042:14;-1:-1:-1;;;;;1365:46:167;1353:59;;1299:119;8023:56;;8128:4;8120:6;8116:17;8110:24;8143:56;8193:4;8182:9;8178:20;8162:14;-1:-1:-1;;;;;1365:46:167;1353:59;;1299:119;8143:56;;8248:4;8240:6;8236:17;8230:24;8263:56;8313:4;8302:9;8298:20;8282:14;-1:-1:-1;;;;;1365:46:167;1353:59;;1299:119;8263:56;;8368:4;8360:6;8356:17;8350:24;8383:56;8433:4;8422:9;8418:20;8402:14;-1:-1:-1;;;;;1365:46:167;1353:59;;1299:119;8383:56;;8488:4;8480:6;8476:17;8470:24;8503:56;8553:4;8542:9;8538:20;8522:14;-1:-1:-1;;;;;1365:46:167;1353:59;;1299:119;8503:56;-1:-1:-1;8578:6:167;8621:15;;;8615:22;7257:13;7250:21;8678:18;;;7238:34;8716:6;8759:15;;;8753:22;7257:13;;7250:21;8816:18;;;7238:34;8784:51;;;7475:1366;;;;:::o;8846:260::-;8914:6;8922;8975:2;8963:9;8954:7;8950:23;8946:32;8943:52;;;8991:1;8988;8981:12;8943:52;9014:29;9033:9;9014:29;:::i;:::-;9004:39;;9062:38;9096:2;9085:9;9081:18;9062:38;:::i;9886:127::-;9947:10;9942:3;9938:20;9935:1;9928:31;9978:4;9975:1;9968:15;10002:4;9999:1;9992:15;10018:127;10079:10;10074:3;10070:20;10067:1;10060:31;10110:4;10107:1;10100:15;10134:4;10131:1;10124:15;10150:125;10215:9;;;10236:10;;;10233:36;;;10249:18;;:::i;10280:128::-;10347:9;;;10368:11;;;10365:37;;;10382:18;;:::i;10413:127::-;10474:10;10469:3;10465:20;10462:1;10455:31;10505:4;10502:1;10495:15;10529:4;10526:1;10519:15;10545:127;10606:10;10601:3;10597:20;10594:1;10587:31;10637:4;10634:1;10627:15;10661:4;10658:1;10651:15;10677:120;10717:1;10743;10733:35;;10748:18;;:::i;:::-;-1:-1:-1;10782:9:167;;10677:120::o;10802:127::-;10863:10;10858:3;10854:20;10851:1;10844:31;10894:4;10891:1;10884:15;10918:4;10915:1;10908:15;11157:1213;11376:13;;-1:-1:-1;;;;;11470:18:167;;;1353:59;;11532:3;11528:19;;;11564:4;11549:20;;1353:59;11616:4;11604:17;;11598:24;11660:2;11649:27;;;11693:4;11678:20;;1476:34;11727:21;;11765:4;11750:20;;1353:59;11817:4;11805:17;;11799:24;11851:20;;;11873:19;;;1353:59;11921:21;;11959:4;11944:20;;1353:59;12011:4;11999:17;;11993:24;12045:20;;;12082:4;12067:20;;1353:59;12116:21;;12154:4;12139:20;;1353:59;12206:4;12194:17;;12188:24;12254:4;12237:22;;;7257:13;7250:21;12276:6;12261:22;;7238:34;12317:1;12313:19;;;12309:30;7257:13;7250:21;12356:6;12341:22;;7238:34;11346:3;11331:19;;;12293:71;7187:91;12375:449;-1:-1:-1;;;12632:3:167;12625:32;12607:3;12686:6;12680:13;12702:75;12770:6;12765:2;12760:3;12756:12;12749:4;12741:6;12737:17;12702:75;:::i;:::-;12797:16;;;;12815:2;12793:25;;12375:449;-1:-1:-1;;12375:449:167:o;12829:450::-;-1:-1:-1;;;13086:3:167;13079:33;13061:3;13141:6;13135:13;13157:75;13225:6;13220:2;13215:3;13211:12;13204:4;13196:6;13192:17;13157:75;:::i;:::-;13252:16;;;;13270:2;13248:25;;12829:450;-1:-1:-1;;12829:450:167:o;13790:448::-;-1:-1:-1;;;14047:3:167;14040:31;14022:3;14100:6;14094:13;14116:75;14184:6;14179:2;14174:3;14170:12;14163:4;14155:6;14151:17;14116:75;:::i;:::-;14211:16;;;;14229:2;14207:25;;13790:448;-1:-1:-1;;13790:448:167:o;14243:449::-;-1:-1:-1;;;14500:3:167;14493:32;14475:3;14554:6;14548:13;14570:75;14638:6;14633:2;14628:3;14624:12;14617:4;14609:6;14605:17;14570:75;:::i;14966:184::-;15036:6;15089:2;15077:9;15068:7;15064:23;15060:32;15057:52;;;15105:1;15102;15095:12;15057:52;-1:-1:-1;15128:16:167;;14966:184;-1:-1:-1;14966:184:167:o;15155:200::-;15221:9;;;15194:4;15249:9;;15277:10;;15289:12;;;15273:29;15312:12;;;15304:21;;15270:56;15267:82;;;15329:18;;:::i;15360:136::-;15395:3;-1:-1:-1;;;15416:22:167;;15413:48;;15441:18;;:::i;:::-;-1:-1:-1;15481:1:167;15477:13;;15360:136::o;15501:216::-;15565:9;;;15593:11;;;15540:3;15623:9;;15651:10;;15647:19;;15676:10;;15668:19;;15644:44;15641:70;;;15691:18;;:::i;15722:112::-;15754:1;15780;15770:35;;15785:18;;:::i;:::-;-1:-1:-1;15819:9:167;;15722:112::o;15839:135::-;15878:3;15899:17;;;15896:43;;15919:18;;:::i;:::-;-1:-1:-1;15966:1:167;15955:13;;15839:135::o;15979:168::-;16052:9;;;16083;;16100:15;;;16094:22;;16080:37;16070:71;;16121:18;;:::i;16152:193::-;16191:1;16217;16207:35;;16222:18;;:::i;:::-;-1:-1:-1;;;16258:18:167;;-1:-1:-1;;16278:13:167;;16254:38;16251:64;;;16295:18;;:::i;:::-;-1:-1:-1;16329:10:167;;16152:193::o",
    "linkReferences": {},
    "immutableReferences": {
      "12488": [
        {
          "start": 2948,
          "length": 32
        }
      ],
      "12490": [
        {
          "start": 3095,
          "length": 32
        }
      ],
      "4811": [
        {
          "start": 2201,
          "length": 32
        },
        {
          "start": 3012,
          "length": 32
        }
      ],
      "4814": [
        {
          "start": 2397,
          "length": 32
        },
        {
          "start": 6213,
          "length": 32
        }
      ],
      "4817": [
        {
          "start": 2359,
          "length": 32
        },
        {
          "start": 5561,
          "length": 32
        }
      ],
      "4820": [
        {
          "start": 2435,
          "length": 32
        },
        {
          "start": 4428,
          "length": 32
        }
      ],
      "4823": [
        {
          "start": 2238,
          "length": 32
        },
        {
          "start": 4352,
          "length": 32
        }
      ],
      "4826": [
        {
          "start": 2280,
          "length": 32
        },
        {
          "start": 4390,
          "length": 32
        }
      ],
      "4829": [
        {
          "start": 2317,
          "length": 32
        }
      ],
      "4840": [
        {
          "start": 2532,
          "length": 32
        }
      ],
      "4843": [
        {
          "start": 2567,
          "length": 32
        }
      ],
      "4846": [
        {
          "start": 2604,
          "length": 32
        }
      ],
      "4864": [
        {
          "start": 2483,
          "length": 32
        }
      ],
      "4867": [
        {
          "start": 2659,
          "length": 32
        }
      ],
      "6210": [
        {
          "start": 860,
          "length": 32
        },
        {
          "start": 4075,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "balanceOf(uint256,address)": "3656eec2",
    "baseToken()": "c55dae63",
    "factory()": "c45a0155",
    "getCheckpoint(uint256)": "20fc4881",
    "getMarketState()": "d8165743",
    "getPoolConfig()": "b0d96580",
    "getPoolInfo()": "60246c88",
    "getUncollectedGovernanceFees()": "c69e16ad",
    "getWithdrawPool()": "fba56008",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isSweepable(address)": "cc962f8e",
    "linkerCodeHash()": "c905a4b5",
    "load(uint256[])": "becee9c3",
    "name(uint256)": "00ad800c",
    "nonces(address)": "7ecebe00",
    "perTokenApprovals(uint256,address,address)": "21ff32a9",
    "pool()": "16f0115b",
    "query(uint256)": "afdac68d",
    "symbol(uint256)": "4e41a1fb",
    "totalSupply(uint256)": "bd85b039"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governance\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"oracleSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateGap\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_linkerCodeHash_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory_\",\"type\":\"address\"},{\"internalType\":\"contract IERC4626\",\"name\":\"_pool_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FixedPointMath_InvalidExponent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FixedPointMath_InvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTradeSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NegativePresentValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueryOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ReturnData\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"getCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"sharePrice\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"longExposure\",\"type\":\"int128\"}],\"internalType\":\"struct IHyperdrive.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"shareReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bondReserves\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"shareAdjustment\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"longExposure\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"internalType\":\"struct IHyperdrive.MarketState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governance\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"oracleSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateGap\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesReadyToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longExposure\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncollectedGovernanceFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"readyToWithdraw\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"proceeds\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.WithdrawPool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"isSweepable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkerCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_slots\",\"type\":\"uint256[]\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"query\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(uint256,address)\":{\"params\":{\"account\":\"The account.\",\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The balance.\"}},\"baseToken()\":{\"returns\":{\"_0\":\"The base token.\"}},\"constructor\":{\"params\":{\"_factory_\":\"The factory which is used to deploy the linking contracts\",\"_linkerCodeHash_\":\"The hash of the erc20 linker contract deploy code\",\"_pool_\":\"The ERC4626 pool.\"}},\"factory()\":{\"returns\":{\"_0\":\"The linking factory.\"}},\"getCheckpoint(uint256)\":{\"params\":{\"_checkpointId\":\"The checkpoint ID.\"},\"returns\":{\"_0\":\"The checkpoint.\"}},\"getPoolConfig()\":{\"details\":\"These parameters are immutable, so this should only need to be      called once.\",\"returns\":{\"_0\":\"The PoolConfig struct.\"}},\"getPoolInfo()\":{\"returns\":{\"_0\":\"The PoolInfo struct.\"}},\"getUncollectedGovernanceFees()\":{\"returns\":{\"_0\":\"Governance fees denominated in shares yet to be collected\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account.\",\"operator\":\"The operator.\"},\"returns\":{\"_0\":\"The approval status.\"}},\"isSweepable(address)\":{\"params\":{\"_target\":\"The target address.\"}},\"linkerCodeHash()\":{\"returns\":{\"_0\":\"The code hash.\"}},\"load(uint256[])\":{\"params\":{\"_slots\":\"The storage slots the caller wants the data from\"},\"returns\":{\"_0\":\"A raw array of loaded data\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The name.\"}},\"nonces(address)\":{\"params\":{\"account\":\"The account.\"},\"returns\":{\"_0\":\"The signature nonce.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"account\":\"The account.\",\"spender\":\"The spender.\",\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The approval status.\"}},\"pool()\":{\"returns\":{\"_0\":\"The 4626 pool.\"}},\"query(uint256)\":{\"details\":\"Any integrations should assert the returned value is not equal to the QueryOutOfRange() selector\",\"params\":{\"period\":\"The gap in our time sample.\"},\"returns\":{\"_0\":\"The average price in that time\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The symbol.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The total supply.\"}}},\"stateVariables\":{\"_isSweepable\":{\"details\":\"A mapping from addresses to their status as a sweep target. This      mapping does not change after construction.\"}},\"title\":\"ERC4626DataProvider\",\"version\":1},\"userdoc\":{\"errors\":{\"FixedPointMath_InvalidExponent()\":[{\"notice\":\"###################### ### FixedPointMath ### ######################\"}],\"InvalidTradeSize()\":[{\"notice\":\"###################### ### YieldSpaceMath ### ######################\"}],\"QueryOutOfRange()\":[{\"notice\":\"############ ### TWAP ### ############\"}],\"ReturnData(bytes)\":[{\"notice\":\"#################### ### DataProvider ### ####################\"}]},\"kind\":\"user\",\"methods\":{\"balanceOf(uint256,address)\":{\"notice\":\"Gets an account's balance of a sub-token.\"},\"baseToken()\":{\"notice\":\"Gets the base token.\"},\"constructor\":{\"notice\":\"Initializes the data provider.\"},\"factory()\":{\"notice\":\"Gets the factory which is used to deploy the linking contracts.\"},\"getCheckpoint(uint256)\":{\"notice\":\"Gets a specified checkpoint.\"},\"getPoolConfig()\":{\"notice\":\"Gets the pool's configuration parameters.\"},\"getPoolInfo()\":{\"notice\":\"Gets info about the pool's reserves and other state that is         important to evaluate potential trades.\"},\"getUncollectedGovernanceFees()\":{\"notice\":\"Gets info about the fees presently accrued by the pool\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval status of an operator for an account.\"},\"isSweepable(address)\":{\"notice\":\"Gets the sweepable status of a target.\"},\"linkerCodeHash()\":{\"notice\":\"Gets the code hash of the erc20 linker contract.\"},\"load(uint256[])\":{\"notice\":\"Allows plugin data libs to provide getters or other complex         logic instead of the main.\"},\"name(uint256)\":{\"notice\":\"Gets the name of a sub-token.\"},\"nonces(address)\":{\"notice\":\"Gets the permitForAll signature nonce for an account.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the approval status of an operator for an account.\"},\"pool()\":{\"notice\":\"Gets the 4626 pool.\"},\"query(uint256)\":{\"notice\":\"Returns the average price between the last recorded timestamp looking a user determined         time into the past\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of a sub-token.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of a sub-token.\"}},\"notice\":\"The data provider for ERC4626Hyperdrive instances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/instances/ERC4626DataProvider.sol\":\"ERC4626DataProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"contracts/src/HyperdriveDataProvider.sol\":{\"keccak256\":\"0xa3bc354d7e923ff1aad4191999ff6cd98e2ac4c034ac3188c87d5b974194820c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa2503a7ed51e469625aef59b0870b64c6fd0c9e774ed08f39decc5c8e4d74c6\",\"dweb:/ipfs/QmbUFAPgVb8uXmHUdQP9Ck3gZCHxRQBNGuWGJydkM8EGhG\"]},\"contracts/src/HyperdriveStorage.sol\":{\"keccak256\":\"0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a\",\"dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY\"]},\"contracts/src/instances/ERC4626DataProvider.sol\":{\"keccak256\":\"0xff9052b6730f9f730426a45026a2bd0f0201b457c899f8faed0b4c69c6ee1985\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88f763a766bf86163d7bf417737a3980a1ee4dbd7959bbbf4c7d60e7b59c6c37\",\"dweb:/ipfs/QmdqVv7iUpopKYcXLo97JBC5fjXnYUGSb1wcBdYYQCYmW9\"]},\"contracts/src/interfaces/IDataProvider.sol\":{\"keccak256\":\"0xb5540e954a8d9311a4ddc94f1b1a893f419965c4059e5f64d3f966fa5d7bf843\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4322256d8ef1c32e16441b7be365169cbbfa72c6d952536ed0c2a4dab5befd15\",\"dweb:/ipfs/QmT1Zx7tHjgW52qb1e5C9KTjTbZaoniFxuyvZb3cWedUu7\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672\",\"dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w\"]},\"contracts/src/interfaces/IERC4626.sol\":{\"keccak256\":\"0xaf48462596aa9c7544086c0a5e53adc7bf8f713662a5fb270ffb4e4db16e23cf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b2e5e6d94edba7e97dce8b5e061d40955d39fa586579d170f66cbecdbd2348dc\",\"dweb:/ipfs/QmeUkSbHaBmCeZnmup5RujvxRAyhw1u9vpRRpzeuU2wiia\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x5f4ebd8ae035c05b0a1f3f740dba21a1414306796082b814bcaa2e190ab845b7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1353dab25f7e01c7169f602b7d013ff90c77fe36d62d382e179649a10ae41e78\",\"dweb:/ipfs/QmXQdQBcx6rKeVcoV5s7NG52DrqVvhBhgMNQwTxddAstE5\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993\",\"dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt\"]},\"contracts/src/interfaces/IHyperdriveWrite.sol\":{\"keccak256\":\"0xd83e23e1894f3f4812d4812c5775c7a5267f3bfb80148b11f3ede3174ea936bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae5e91bb578ae9271426728ba69689ad659c6450853aa5ef0c52dd6d7c433206\",\"dweb:/ipfs/QmR5VU1UmZ8BN3azCs3zmHkCqJHzDKTUnVecdPjNQr8vYt\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0\",\"dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87\",\"dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939\",\"dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x\"]},\"contracts/src/interfaces/IMultiTokenWrite.sol\":{\"keccak256\":\"0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a\",\"dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0xcf8493b00dd39c50754a63f66dc612f3cd466cbac8c7ea5ed0c5ea68aa99267a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a1986d6bc80e465dde116a70d3a30027b3e75969117a9b3517c6866c2e5e73a\",\"dweb:/ipfs/QmSASHifHWyKBycGAm1pUs9dw26Uf6A61V9nkEQnFj9mya\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b\",\"dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xa425f4064f7e95fc5da7763b26627ef0be68db76763bde67cd54cfda489a19ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abc4b8f6f8c66a0d966b1dc366d689fc2844a60d866ed3f19cdd3852a0c274f6\",\"dweb:/ipfs/QmUSo1URvRru11TYPMGSdQR6FDRZk7SPh8tcze3T6XL4gL\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5\",\"dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0xbd61fe3be6d0c8742f09a8174a5a2757e9070805b49d3fc7217f120b83c0ce0f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5b6524a56a3062a3d9b47c2ad2712f90643a84971cd155f8f00fd31ef7a432fe\",\"dweb:/ipfs/QmXYtLBzjaVkh4WhTxTE1GEoqjcyidw1peyAenfAd5vPPr\"]},\"contracts/src/token/MultiTokenDataProvider.sol\":{\"keccak256\":\"0xd1317d856f35950481598cedcb42722c7068e2483f6a220be615128baa607c57\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1c9641add84eb43fc5a4a68921ac492b416223523d269a41b50e1858a8dc86a0\",\"dweb:/ipfs/QmUdADg8AwChKPyGxm9TJuwb7gvgqewoXfNzT4qqdyHWcs\"]},\"contracts/src/token/MultiTokenStorage.sol\":{\"keccak256\":\"0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6\",\"dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IHyperdrive.PoolConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumTransactionAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "checkpointDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "governance",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                },
                {
                  "internalType": "struct IHyperdrive.Fees",
                  "name": "fees",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "curve",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flat",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "governance",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "oracleSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updateGap",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "_linkerCodeHash_",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "_factory_",
              "type": "address"
            },
            {
              "internalType": "contract IERC4626",
              "name": "_pool_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FixedPointMath_InvalidExponent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FixedPointMath_InvalidInput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCheckpointDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidFeeAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMinimumShareReserves"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPositionDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTradeSize"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NegativePresentValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "QueryOutOfRange"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ReturnData"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_checkpointId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCheckpoint",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "sharePrice",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "longExposure",
                  "type": "int128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketState",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.MarketState",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "shareReserves",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "bondReserves",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "shareAdjustment",
                  "type": "int128"
                },
                {
                  "internalType": "uint128",
                  "name": "longExposure",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "longsOutstanding",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "shortsOutstanding",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "longAverageMaturityTime",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "shortAverageMaturityTime",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "isInitialized",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isPaused",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolConfig",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.PoolConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumTransactionAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "checkpointDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "governance",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                },
                {
                  "internalType": "struct IHyperdrive.Fees",
                  "name": "fees",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "curve",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flat",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "governance",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "oracleSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updateGap",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolInfo",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.PoolInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lpTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageMaturityTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageMaturityTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalSharesReadyToWithdraw",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalSharesProceeds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lpSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longExposure",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUncollectedGovernanceFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawPool",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.WithdrawPool",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "readyToWithdraw",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "proceeds",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSweepable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "linkerCodeHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_slots",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "load",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "perTokenApprovals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool",
          "outputs": [
            {
              "internalType": "contract IERC4626",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "period",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "query",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(uint256,address)": {
            "params": {
              "account": "The account.",
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The balance."
            }
          },
          "baseToken()": {
            "returns": {
              "_0": "The base token."
            }
          },
          "constructor": {
            "params": {
              "_factory_": "The factory which is used to deploy the linking contracts",
              "_linkerCodeHash_": "The hash of the erc20 linker contract deploy code",
              "_pool_": "The ERC4626 pool."
            }
          },
          "factory()": {
            "returns": {
              "_0": "The linking factory."
            }
          },
          "getCheckpoint(uint256)": {
            "params": {
              "_checkpointId": "The checkpoint ID."
            },
            "returns": {
              "_0": "The checkpoint."
            }
          },
          "getPoolConfig()": {
            "details": "These parameters are immutable, so this should only need to be      called once.",
            "returns": {
              "_0": "The PoolConfig struct."
            }
          },
          "getPoolInfo()": {
            "returns": {
              "_0": "The PoolInfo struct."
            }
          },
          "getUncollectedGovernanceFees()": {
            "returns": {
              "_0": "Governance fees denominated in shares yet to be collected"
            }
          },
          "isApprovedForAll(address,address)": {
            "params": {
              "account": "The account.",
              "operator": "The operator."
            },
            "returns": {
              "_0": "The approval status."
            }
          },
          "isSweepable(address)": {
            "params": {
              "_target": "The target address."
            }
          },
          "linkerCodeHash()": {
            "returns": {
              "_0": "The code hash."
            }
          },
          "load(uint256[])": {
            "params": {
              "_slots": "The storage slots the caller wants the data from"
            },
            "returns": {
              "_0": "A raw array of loaded data"
            }
          },
          "name(uint256)": {
            "params": {
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The name."
            }
          },
          "nonces(address)": {
            "params": {
              "account": "The account."
            },
            "returns": {
              "_0": "The signature nonce."
            }
          },
          "perTokenApprovals(uint256,address,address)": {
            "params": {
              "account": "The account.",
              "spender": "The spender.",
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The approval status."
            }
          },
          "pool()": {
            "returns": {
              "_0": "The 4626 pool."
            }
          },
          "query(uint256)": {
            "details": "Any integrations should assert the returned value is not equal to the QueryOutOfRange() selector",
            "params": {
              "period": "The gap in our time sample."
            },
            "returns": {
              "_0": "The average price in that time"
            }
          },
          "symbol(uint256)": {
            "params": {
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The symbol."
            }
          },
          "totalSupply(uint256)": {
            "params": {
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The total supply."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(uint256,address)": {
            "notice": "Gets an account's balance of a sub-token."
          },
          "baseToken()": {
            "notice": "Gets the base token."
          },
          "constructor": {
            "notice": "Initializes the data provider."
          },
          "factory()": {
            "notice": "Gets the factory which is used to deploy the linking contracts."
          },
          "getCheckpoint(uint256)": {
            "notice": "Gets a specified checkpoint."
          },
          "getPoolConfig()": {
            "notice": "Gets the pool's configuration parameters."
          },
          "getPoolInfo()": {
            "notice": "Gets info about the pool's reserves and other state that is         important to evaluate potential trades."
          },
          "getUncollectedGovernanceFees()": {
            "notice": "Gets info about the fees presently accrued by the pool"
          },
          "isApprovedForAll(address,address)": {
            "notice": "Gets the approval status of an operator for an account."
          },
          "isSweepable(address)": {
            "notice": "Gets the sweepable status of a target."
          },
          "linkerCodeHash()": {
            "notice": "Gets the code hash of the erc20 linker contract."
          },
          "load(uint256[])": {
            "notice": "Allows plugin data libs to provide getters or other complex         logic instead of the main."
          },
          "name(uint256)": {
            "notice": "Gets the name of a sub-token."
          },
          "nonces(address)": {
            "notice": "Gets the permitForAll signature nonce for an account."
          },
          "perTokenApprovals(uint256,address,address)": {
            "notice": "Gets the approval status of an operator for an account."
          },
          "pool()": {
            "notice": "Gets the 4626 pool."
          },
          "query(uint256)": {
            "notice": "Returns the average price between the last recorded timestamp looking a user determined         time into the past"
          },
          "symbol(uint256)": {
            "notice": "Gets the symbol of a sub-token."
          },
          "totalSupply(uint256)": {
            "notice": "Gets the total supply of a sub-token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aave/=lib/aave-v3-core/contracts/",
        ":aave-v3-core/=lib/aave-v3-core/",
        ":create3-factory/=lib/yield-daddy/lib/create3-factory/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":yield-daddy/=lib/yield-daddy/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/instances/ERC4626DataProvider.sol": "ERC4626DataProvider"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/HyperdriveDataProvider.sol": {
        "keccak256": "0xa3bc354d7e923ff1aad4191999ff6cd98e2ac4c034ac3188c87d5b974194820c",
        "urls": [
          "bzz-raw://fa2503a7ed51e469625aef59b0870b64c6fd0c9e774ed08f39decc5c8e4d74c6",
          "dweb:/ipfs/QmbUFAPgVb8uXmHUdQP9Ck3gZCHxRQBNGuWGJydkM8EGhG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/HyperdriveStorage.sol": {
        "keccak256": "0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc",
        "urls": [
          "bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a",
          "dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/instances/ERC4626DataProvider.sol": {
        "keccak256": "0xff9052b6730f9f730426a45026a2bd0f0201b457c899f8faed0b4c69c6ee1985",
        "urls": [
          "bzz-raw://88f763a766bf86163d7bf417737a3980a1ee4dbd7959bbbf4c7d60e7b59c6c37",
          "dweb:/ipfs/QmdqVv7iUpopKYcXLo97JBC5fjXnYUGSb1wcBdYYQCYmW9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IDataProvider.sol": {
        "keccak256": "0xb5540e954a8d9311a4ddc94f1b1a893f419965c4059e5f64d3f966fa5d7bf843",
        "urls": [
          "bzz-raw://4322256d8ef1c32e16441b7be365169cbbfa72c6d952536ed0c2a4dab5befd15",
          "dweb:/ipfs/QmT1Zx7tHjgW52qb1e5C9KTjTbZaoniFxuyvZb3cWedUu7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c",
        "urls": [
          "bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672",
          "dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w"
        ],
        "license": "MIT"
      },
      "contracts/src/interfaces/IERC4626.sol": {
        "keccak256": "0xaf48462596aa9c7544086c0a5e53adc7bf8f713662a5fb270ffb4e4db16e23cf",
        "urls": [
          "bzz-raw://b2e5e6d94edba7e97dce8b5e061d40955d39fa586579d170f66cbecdbd2348dc",
          "dweb:/ipfs/QmeUkSbHaBmCeZnmup5RujvxRAyhw1u9vpRRpzeuU2wiia"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0x5f4ebd8ae035c05b0a1f3f740dba21a1414306796082b814bcaa2e190ab845b7",
        "urls": [
          "bzz-raw://1353dab25f7e01c7169f602b7d013ff90c77fe36d62d382e179649a10ae41e78",
          "dweb:/ipfs/QmXQdQBcx6rKeVcoV5s7NG52DrqVvhBhgMNQwTxddAstE5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        "urls": [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveWrite.sol": {
        "keccak256": "0xd83e23e1894f3f4812d4812c5775c7a5267f3bfb80148b11f3ede3174ea936bc",
        "urls": [
          "bzz-raw://ae5e91bb578ae9271426728ba69689ad659c6450853aa5ef0c52dd6d7c433206",
          "dweb:/ipfs/QmR5VU1UmZ8BN3azCs3zmHkCqJHzDKTUnVecdPjNQr8vYt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a",
        "urls": [
          "bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0",
          "dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc",
        "urls": [
          "bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87",
          "dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05",
        "urls": [
          "bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939",
          "dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenWrite.sol": {
        "keccak256": "0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8",
        "urls": [
          "bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a",
          "dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/AssetId.sol": {
        "keccak256": "0xcf8493b00dd39c50754a63f66dc612f3cd466cbac8c7ea5ed0c5ea68aa99267a",
        "urls": [
          "bzz-raw://1a1986d6bc80e465dde116a70d3a30027b3e75969117a9b3517c6866c2e5e73a",
          "dweb:/ipfs/QmSASHifHWyKBycGAm1pUs9dw26Uf6A61V9nkEQnFj9mya"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/FixedPointMath.sol": {
        "keccak256": "0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd",
        "urls": [
          "bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b",
          "dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/HyperdriveMath.sol": {
        "keccak256": "0xa425f4064f7e95fc5da7763b26627ef0be68db76763bde67cd54cfda489a19ed",
        "urls": [
          "bzz-raw://abc4b8f6f8c66a0d966b1dc366d689fc2844a60d866ed3f19cdd3852a0c274f6",
          "dweb:/ipfs/QmUSo1URvRru11TYPMGSdQR6FDRZk7SPh8tcze3T6XL4gL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/SafeCast.sol": {
        "keccak256": "0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f",
        "urls": [
          "bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5",
          "dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/YieldSpaceMath.sol": {
        "keccak256": "0xbd61fe3be6d0c8742f09a8174a5a2757e9070805b49d3fc7217f120b83c0ce0f",
        "urls": [
          "bzz-raw://5b6524a56a3062a3d9b47c2ad2712f90643a84971cd155f8f00fd31ef7a432fe",
          "dweb:/ipfs/QmXYtLBzjaVkh4WhTxTE1GEoqjcyidw1peyAenfAd5vPPr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/MultiTokenDataProvider.sol": {
        "keccak256": "0xd1317d856f35950481598cedcb42722c7068e2483f6a220be615128baa607c57",
        "urls": [
          "bzz-raw://1c9641add84eb43fc5a4a68921ac492b416223523d269a41b50e1858a8dc86a0",
          "dweb:/ipfs/QmUdADg8AwChKPyGxm9TJuwb7gvgqewoXfNzT4qqdyHWcs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/MultiTokenStorage.sol": {
        "keccak256": "0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8",
        "urls": [
          "bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6",
          "dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        "urls": [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/instances/ERC4626DataProvider.sol",
    "id": 6292,
    "exportedSymbols": {
      "ERC4626DataProvider": [
        6291
      ],
      "FixedPointMath": [
        9066
      ],
      "HyperdriveDataProvider": [
        1927
      ],
      "IERC4626": [
        6956
      ],
      "IHyperdrive": [
        7431
      ],
      "MultiTokenDataProvider": [
        12483
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2459:12",
    "nodes": [
      {
        "id": 6189,
        "nodeType": "PragmaDirective",
        "src": "39:23:12",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 6191,
        "nodeType": "ImportDirective",
        "src": "64:71:12",
        "nodes": [],
        "absolutePath": "contracts/src/HyperdriveDataProvider.sol",
        "file": "../HyperdriveDataProvider.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6292,
        "sourceUnit": 1928,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6190,
              "name": "HyperdriveDataProvider",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1927,
              "src": "73:22:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6193,
        "nodeType": "ImportDirective",
        "src": "136:54:12",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IERC4626.sol",
        "file": "../interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6292,
        "sourceUnit": 6957,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6192,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6956,
              "src": "145:8:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6195,
        "nodeType": "ImportDirective",
        "src": "191:60:12",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IHyperdrive.sol",
        "file": "../interfaces/IHyperdrive.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6292,
        "sourceUnit": 7432,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6194,
              "name": "IHyperdrive",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7431,
              "src": "200:11:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6197,
        "nodeType": "ImportDirective",
        "src": "252:65:12",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/FixedPointMath.sol",
        "file": "../libraries/FixedPointMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6292,
        "sourceUnit": 9067,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6196,
              "name": "FixedPointMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9066,
              "src": "261:14:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6199,
        "nodeType": "ImportDirective",
        "src": "318:77:12",
        "nodes": [],
        "absolutePath": "contracts/src/token/MultiTokenDataProvider.sol",
        "file": "../token/MultiTokenDataProvider.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6292,
        "sourceUnit": 12484,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6198,
              "name": "MultiTokenDataProvider",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12483,
              "src": "327:22:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6291,
        "nodeType": "ContractDefinition",
        "src": "732:1765:12",
        "nodes": [
          {
            "id": 6207,
            "nodeType": "UsingForDirective",
            "src": "817:33:12",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 6205,
              "name": "FixedPointMath",
              "nameLocations": [
                "823:14:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9066,
              "src": "823:14:12"
            },
            "typeName": {
              "id": 6206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "842:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 6210,
            "nodeType": "VariableDeclaration",
            "src": "881:33:12",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_pool",
            "nameLocation": "909:5:12",
            "scope": 6291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC4626_$6956",
              "typeString": "contract IERC4626"
            },
            "typeName": {
              "id": 6209,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6208,
                "name": "IERC4626",
                "nameLocations": [
                  "881:8:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6956,
                "src": "881:8:12"
              },
              "referencedDeclaration": 6956,
              "src": "881:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC4626_$6956",
                "typeString": "contract IERC4626"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6215,
            "nodeType": "VariableDeclaration",
            "src": "1056:62:12",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6211,
              "nodeType": "StructuredDocumentation",
              "src": "921:130:12",
              "text": "@dev A mapping from addresses to their status as a sweep target. This\n      mapping does not change after construction."
            },
            "mutability": "mutable",
            "name": "_isSweepable",
            "nameLocation": "1106:12:12",
            "scope": 6291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6214,
              "keyName": "target",
              "keyNameLocation": "1072:6:12",
              "keyType": {
                "id": 6212,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1064:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1056:40:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "canSweep",
              "valueNameLocation": "1087:8:12",
              "valueType": {
                "id": 6213,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1082:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6241,
            "nodeType": "FunctionDefinition",
            "src": "1377:286:12",
            "nodes": [],
            "body": {
              "id": 6240,
              "nodeType": "Block",
              "src": "1632:31:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6236,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6210,
                      "src": "1642:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC4626_$6956",
                        "typeString": "contract IERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6237,
                      "name": "_pool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6226,
                      "src": "1650:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC4626_$6956",
                        "typeString": "contract IERC4626"
                      }
                    },
                    "src": "1642:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$6956",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "id": 6239,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:14:12"
                }
              ]
            },
            "documentation": {
              "id": 6216,
              "nodeType": "StructuredDocumentation",
              "src": "1125:247:12",
              "text": "@notice Initializes the data provider.\n @param _linkerCodeHash_ The hash of the erc20 linker contract deploy code\n @param _factory_ The factory which is used to deploy the linking contracts\n @param _pool_ The ERC4626 pool."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6229,
                    "name": "_config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6219,
                    "src": "1559:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolConfig_$7245_memory_ptr",
                      "typeString": "struct IHyperdrive.PoolConfig memory"
                    }
                  }
                ],
                "id": 6230,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6228,
                  "name": "HyperdriveDataProvider",
                  "nameLocations": [
                    "1536:22:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1927,
                  "src": "1536:22:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1536:31:12"
              },
              {
                "arguments": [
                  {
                    "id": 6232,
                    "name": "_linkerCodeHash_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6221,
                    "src": "1599:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 6233,
                    "name": "_factory_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6223,
                    "src": "1617:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6234,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6231,
                  "name": "MultiTokenDataProvider",
                  "nameLocations": [
                    "1576:22:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12483,
                  "src": "1576:22:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1576:51:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6219,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "1428:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 6241,
                  "src": "1398:37:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolConfig_$7245_memory_ptr",
                    "typeString": "struct IHyperdrive.PoolConfig"
                  },
                  "typeName": {
                    "id": 6218,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6217,
                      "name": "IHyperdrive.PoolConfig",
                      "nameLocations": [
                        "1398:11:12",
                        "1410:10:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7245,
                      "src": "1398:22:12"
                    },
                    "referencedDeclaration": 7245,
                    "src": "1398:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolConfig_$7245_storage_ptr",
                      "typeString": "struct IHyperdrive.PoolConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6221,
                  "mutability": "mutable",
                  "name": "_linkerCodeHash_",
                  "nameLocation": "1453:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 6241,
                  "src": "1445:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6223,
                  "mutability": "mutable",
                  "name": "_factory_",
                  "nameLocation": "1487:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 6241,
                  "src": "1479:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6226,
                  "mutability": "mutable",
                  "name": "_pool_",
                  "nameLocation": "1515:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 6241,
                  "src": "1506:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$6956",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 6225,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6224,
                      "name": "IERC4626",
                      "nameLocations": [
                        "1506:8:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6956,
                      "src": "1506:8:12"
                    },
                    "referencedDeclaration": 6956,
                    "src": "1506:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$6956",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:139:12"
            },
            "returnParameters": {
              "id": 6235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:0:12"
            },
            "scope": 6291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6257,
            "nodeType": "FunctionDefinition",
            "src": "1891:188:12",
            "nodes": [],
            "body": {
              "id": 6256,
              "nodeType": "Block",
              "src": "2005:74:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6248,
                      "name": "sharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6246,
                      "src": "2015:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6251,
                            "name": "FixedPointMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9066,
                            "src": "2050:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPointMath_$9066_$",
                              "typeString": "type(library FixedPointMath)"
                            }
                          },
                          "id": 6252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2065:6:12",
                          "memberName": "ONE_18",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8325,
                          "src": "2050:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6249,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6210,
                          "src": "2028:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$6956",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "id": 6250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2034:15:12",
                        "memberName": "convertToAssets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6891,
                        "src": "2028:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 6253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2028:44:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2015:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6255,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:57:12"
                }
              ]
            },
            "baseFunctions": [
              1508
            ],
            "documentation": {
              "id": 6242,
              "nodeType": "StructuredDocumentation",
              "src": "1695:191:12",
              "text": "@notice Loads the share price from the yield source.\n @return sharePrice The current share price.\n @dev must remain consistent with the impl inside of the HyperdriveInstance"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pricePerShare",
            "nameLocation": "1900:14:12",
            "overrides": {
              "id": 6244,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1955:8:12"
            },
            "parameters": {
              "id": 6243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1914:2:12"
            },
            "returnParameters": {
              "id": 6247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6246,
                  "mutability": "mutable",
                  "name": "sharePrice",
                  "nameLocation": "1989:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 6257,
                  "src": "1981:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:20:12"
            },
            "scope": 6291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6272,
            "nodeType": "FunctionDefinition",
            "src": "2173:92:12",
            "nodes": [],
            "body": {
              "id": 6271,
              "nodeType": "Block",
              "src": "2222:43:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6267,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6210,
                            "src": "2251:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$6956",
                              "typeString": "contract IERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC4626_$6956",
                              "typeString": "contract IERC4626"
                            }
                          ],
                          "expression": {
                            "id": 6265,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2240:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2244:6:12",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2240:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2240:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6264,
                      "name": "_revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12482,
                      "src": "2232:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) pure"
                      }
                    },
                    "id": 6269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6270,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:26:12"
                }
              ]
            },
            "documentation": {
              "id": 6258,
              "nodeType": "StructuredDocumentation",
              "src": "2106:62:12",
              "text": "@notice Gets the 4626 pool.\n @return The 4626 pool."
            },
            "functionSelector": "16f0115b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pool",
            "nameLocation": "2182:4:12",
            "parameters": {
              "id": 6259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2186:2:12"
            },
            "returnParameters": {
              "id": 6263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6272,
                  "src": "2212:8:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$6956",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 6261,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6260,
                      "name": "IERC4626",
                      "nameLocations": [
                        "2212:8:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6956,
                      "src": "2212:8:12"
                    },
                    "referencedDeclaration": 6956,
                    "src": "2212:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$6956",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2211:10:12"
            },
            "scope": 6291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6290,
            "nodeType": "FunctionDefinition",
            "src": "2369:126:12",
            "nodes": [],
            "body": {
              "id": 6289,
              "nodeType": "Block",
              "src": "2436:59:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 6283,
                              "name": "_isSweepable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6215,
                              "src": "2465:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 6285,
                            "indexExpression": {
                              "id": 6284,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6275,
                              "src": "2478:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2465:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 6281,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2454:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2458:6:12",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2454:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2454:33:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6280,
                      "name": "_revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12482,
                      "src": "2446:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) pure"
                      }
                    },
                    "id": 6287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6288,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:42:12"
                }
              ]
            },
            "documentation": {
              "id": 6273,
              "nodeType": "StructuredDocumentation",
              "src": "2271:93:12",
              "text": "@notice Gets the sweepable status of a target.\n @param _target The target address."
            },
            "functionSelector": "cc962f8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSweepable",
            "nameLocation": "2378:11:12",
            "parameters": {
              "id": 6276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6275,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2398:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 6290,
                  "src": "2390:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:17:12"
            },
            "returnParameters": {
              "id": 6279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6290,
                  "src": "2430:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:6:12"
            },
            "scope": 6291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6201,
              "name": "MultiTokenDataProvider",
              "nameLocations": [
                "764:22:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12483,
              "src": "764:22:12"
            },
            "id": 6202,
            "nodeType": "InheritanceSpecifier",
            "src": "764:22:12"
          },
          {
            "baseName": {
              "id": 6203,
              "name": "HyperdriveDataProvider",
              "nameLocations": [
                "788:22:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1927,
              "src": "788:22:12"
            },
            "id": 6204,
            "nodeType": "InheritanceSpecifier",
            "src": "788:22:12"
          }
        ],
        "canonicalName": "ERC4626DataProvider",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6200,
          "nodeType": "StructuredDocumentation",
          "src": "397:335:12",
          "text": "@author DELV\n @title ERC4626DataProvider\n @notice The data provider for ERC4626Hyperdrive instances.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6291,
          1927,
          12483,
          5167,
          7515,
          7868,
          12544,
          64180
        ],
        "name": "ERC4626DataProvider",
        "nameLocation": "741:19:12",
        "scope": 6292,
        "usedErrors": [
          7312,
          7318,
          7320,
          7324,
          7330,
          7359,
          7364,
          7416,
          7418,
          7425
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 12
}