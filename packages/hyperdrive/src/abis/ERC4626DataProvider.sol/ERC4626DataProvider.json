{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumTransactionAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "checkpointDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "curve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flat",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IHyperdrive.Fees",
              "name": "fees",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "oracleSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updateGap",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHyperdrive.PoolConfig",
          "name": "_config",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_linkerCodeHash_",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_factory_",
          "type": "address"
        },
        {
          "internalType": "contract IERC4626",
          "name": "_pool_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FixedPointMath_InvalidExponent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FixedPointMath_InvalidInput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCheckpointDuration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFeeAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMinimumShareReserves",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPositionDuration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTradeSize",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NegativePresentValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QueryOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ReturnData",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "getCheckpoint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "sharePrice",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "longExposure",
              "type": "int128"
            }
          ],
          "internalType": "struct IHyperdrive.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarketState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "shareReserves",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bondReserves",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "shareAdjustment",
              "type": "int128"
            },
            {
              "internalType": "uint128",
              "name": "longExposure",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "longsOutstanding",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shortsOutstanding",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "longAverageMaturityTime",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shortAverageMaturityTime",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isInitialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isPaused",
              "type": "bool"
            }
          ],
          "internalType": "struct IHyperdrive.MarketState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumTransactionAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "checkpointDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "curve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flat",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IHyperdrive.Fees",
              "name": "fees",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "oracleSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updateGap",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHyperdrive.PoolConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "shareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "shareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "bondReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longAverageMaturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortAverageMaturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalSharesReadyToWithdraw",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalSharesProceeds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longExposure",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHyperdrive.PoolInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUncollectedGovernanceFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawPool",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "readyToWithdraw",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "proceeds",
              "type": "uint128"
            }
          ],
          "internalType": "struct IHyperdrive.WithdrawPool",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "isSweepable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkerCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_slots",
          "type": "uint256[]"
        }
      ],
      "name": "load",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "perTokenApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IERC4626",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "query",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "732:1765:12:-:0;;;454:1:94;429:26;;1377:286:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1944:20:40;;;;;1974:34;;;;4466:17:7;;4453:30;;;5012:28;;;;1559:7:12;;1599:16;;1617:9;;1559:7;;5043:3:7;-1:-1:-1;5008:113:7;;;5069:41;;-1:-1:-1;;;5069:41:7;;;;;;;;;;;5008:113;5154:28;;;;5130:52;;5221:32;;;;5193:60;;5418:26;;;;5448:1;5418:31;5414:108;;5472:39;;-1:-1:-1;;;5472:39:7;;;;;;;;;;;5414:108;5553:26;;;;;5531:48;;5633:26;5606:24;;;;:53;;:127;;;5702:7;:26;;;5675:7;:24;;;:53;;;;:::i;:::-;:58;;5606:127;5589:224;;;5765:37;;-1:-1:-1;;;5765:37:7;;;;;;;;;;;5589:224;5842:24;;;;5822:44;;;;5891:19;;;;5876:34;;;;5941:25;;;;5920:46;;5990:18;;;;5976:11;:32;;-1:-1:-1;;;;;;5976:32:7;-1:-1:-1;;;;;5976:32:7;;;;;;6034:20;;;;6018:36;;;;;6082:12;;;:18;6103:4;-1:-1:-1;;6082:65:7;;;6143:4;6123:7;:12;;;:17;;;:24;6082:65;:111;;;;6189:4;6163:7;:12;;;:23;;;:30;6082:111;6065:202;;;6225:31;;-1:-1:-1;;;6225:31:7;;;;;;;;;;;6065:202;6288:12;;;;;:18;6276:30;;6327:12;;:17;;;6316:28;;6371:12;:23;;;6354:40;;6452:17;;;6439:30;;-1:-1:-1;;;;;;;;1642:14:12::2;;::::0;-1:-1:-1;732:1765:12;;-1:-1:-1;;732:1765:12;14:347:162;81:2;75:9;123:6;111:19;;-1:-1:-1;;;;;145:34:162;;181:22;;;142:62;139:185;;;246:10;241:3;237:20;234:1;227:31;281:4;278:1;271:15;309:4;306:1;299:15;139:185;340:2;333:22;14:347;:::o;366:185::-;453:13;;-1:-1:-1;;;;;495:31:162;;485:42;;475:70;;541:1;538;531:12;475:70;366:185;;;:::o;556:622::-;618:5;666:4;654:9;649:3;645:19;641:30;638:50;;;684:1;681;674:12;638:50;717:2;711:9;759:4;747:17;;-1:-1:-1;;;;;779:34:162;;815:22;;;776:62;773:185;;;880:10;875:3;871:20;868:1;861:31;915:4;912:1;905:15;943:4;940:1;933:15;773:185;978:10;974:2;967:22;;1007:6;998:15;;1043:9;1037:16;1029:6;1022:32;1108:2;1097:9;1093:18;1087:25;1082:2;1074:6;1070:15;1063:50;1167:2;1156:9;1152:18;1146:25;1141:2;1133:6;1129:15;1122:50;;556:622;;;;:::o;1183:1469::-;1325:6;1333;1341;1349;1393:9;1384:7;1380:23;1423:3;1419:2;1415:12;1412:32;;;1440:1;1437;1430:12;1412:32;1463:6;1489:2;1485;1481:11;1478:31;;;1505:1;1502;1495:12;1478:31;1531:17;;:::i;:::-;1518:30;;1571:48;1609:9;1571:48;:::i;:::-;1564:5;1557:63;1673:2;1662:9;1658:18;1652:25;1647:2;1640:5;1636:14;1629:49;1731:2;1720:9;1716:18;1710:25;1705:2;1698:5;1694:14;1687:49;1789:2;1778:9;1774:18;1768:25;1763:2;1756:5;1752:14;1745:49;1848:3;1837:9;1833:19;1827:26;1821:3;1814:5;1810:15;1803:51;1908:3;1897:9;1893:19;1887:26;1881:3;1874:5;1870:15;1863:51;1968:3;1957:9;1953:19;1947:26;1941:3;1934:5;1930:15;1923:51;2007:58;2060:3;2049:9;2045:19;2007:58;:::i;:::-;2001:3;1994:5;1990:15;1983:83;2085:3;2120:57;2173:2;2162:9;2158:18;2120:57;:::i;:::-;2104:14;;;2097:81;2197:3;2232:62;2286:7;2266:18;;;2232:62;:::i;:::-;2216:14;;;2209:86;2352:6;2337:22;;2331:29;2322:6;2311:18;;2304:57;2418:3;2403:19;;2397:26;2388:6;2377:18;;2370:54;2473:18;;2467:25;2220:5;;-1:-1:-1;2467:25:162;-1:-1:-1;2511:58:162;2564:3;2549:19;;2511:58;:::i;:::-;2501:68;;2588:58;2641:3;2630:9;2626:19;2588:58;:::i;:::-;2578:68;;1183:1469;;;;;;;:::o;2657:209::-;2689:1;2715;2705:132;;2759:10;2754:3;2750:20;2747:1;2740:31;2794:4;2791:1;2784:15;2822:4;2819:1;2812:15;2705:132;-1:-1:-1;2851:9:162;;2657:209::o;:::-;732:1765:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061012b5760003560e01c8063bd85b039116100ad578063c905a4b511610071578063c905a4b514610295578063cc962f8e1461029d578063d8165743146102c0578063e985e9c5146102d5578063fba56008146102e857600080fd5b8063bd85b0391461024a578063becee9c31461025d578063c45a01551461027d578063c55dae6314610285578063c69e16ad1461028d57600080fd5b80634e41a1fb116100f45780634e41a1fb146101e757806360246c88146101fa5780637ecebe001461020f578063afdac68d14610222578063b0d965801461023557600080fd5b8062ad800c1461013057806316f0115b1461015957806320fc48811461017957806321ff32a9146101b35780633656eec2146101d4575b600080fd5b61014361013e366004611ad5565b610317565b6040516101509190611b34565b60405180910390f35b610161610358565b6040516001600160a01b039091168152602001610150565b61018c610187366004611ad5565b61039b565b6040805182516001600160801b03168152602092830151600f0b9281019290925201610150565b6101c66101c1366004611b5e565b6103ed565b604051908152602001610150565b6101c66101e2366004611b9a565b610433565b6101436101f5366004611ad5565b61046c565b610202610494565b6040516101509190611bc6565b6101c661021d366004611c51565b61068e565b6101c6610230366004611ad5565b6106ba565b61023d6108a0565b6040516101509190611c6c565b6101c6610258366004611ad5565b610abd565b61027061026b366004611d2e565b610adf565b6040516101509190611da3565b610161610b9a565b610161610bda565b6101c6610c1a565b6101c6610c34565b6102b06102ab366004611c51565b610c6c565b6040519015158152602001610150565b6102c8610ca2565b6040516101509190611de7565b6102b06102e3366004611ed4565b610d08565b6102f0610d4c565b6040805182516001600160801b039081168252602093840151169281019290925201610150565b60606103536005600084815260200190815260200160002060405160200161033f9190611efe565b604051602081830303815290604052610dab565b919050565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152600091610398910161033f565b90565b6040805180820190915260008082526020820152610353600e600084815260200190815260200160002060405160200161033f91546001600160801b038116825260801d600f0b602082015260400190565b60008381526004602090815260408083206001600160a01b038681168552908352818420908516845282528083205481519283015261042c910161033f565b9392505050565b60008281526001602090815260408083206001600160a01b0385168452825280832054815192830152610466910161033f565b92915050565b60606103536006600084815260200190815260200160002060405160200161033f9190611efe565b6104ff604051806101a00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000610509610dcf565b600d5460026020527f3ccfbaf375b4885450e3887dab0704e32e03acfeaf0442976372f6750e322c1f5460008080527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b54939450926001600160801b03909216916105749190611fc0565b61057e9190611fd3565b905060008083116105905760006105ab565b6105ab836105a56105a086610e67565b610fcd565b9061123f565b604080516101a0810182526008546001600160801b038082168352600954600f0b6020840152600160801b918290048116938301939093526060820186905260808201879052600a5480841660a0840152600b5480851660c085015290829004841660e08401528190048316610100830152600d5480841661012084015204909116610140820152909150600090610160810184156106535761064e8486611254565b610656565b60005b8152600954600160801b90046001600160801b03166020918201526040519192506106879161033f91849101611bc6565b5050505090565b6001600160a01b038116600090815260076020908152604080832054815192830152610353910161033f565b601354601280546000926001600160801b03600160801b8204811693911691849190839081106106ec576106ec611fe6565b600091825260208083206040805180820190915292015463ffffffff8116835264010000000090046001600160e01b031690820152915061072d8685611fd3565b90506000831561074757610742600185611fd3565b610756565b60125461075690600190611fd3565b60408051808201909152600080825260208201529091505b8482146108055760006012838154811061078a5761078a611fe6565b6000918252602090912001805490915063ffffffff1684106107d85760408051808201909152905463ffffffff8116825264010000000090046001600160e01b031660208201529050610805565b82156107ee576107e9600184611fd3565b6107fd565b6012546107fd90600190611fd3565b92505061076e565b805163ffffffff1660000361082d57604051630a89817b60e41b815260040160405180910390fd5b600081602001516001600160e01b031685602001516001600160e01b03166108559190611fd3565b825186519192506000916108729163ffffffff9081169116611fd3565b90506108936108818284612012565b60405160200161033f91815260200190565b5050505050505050919050565b6108a8611a37565b60408051610180810182526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f00000000000000000000000000000000000000000000000000000000000000006020808401919091527f0000000000000000000000000000000000000000000000000000000000000000838501527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f000000000000000000000000000000000000000000000000000000000000000060808501527f000000000000000000000000000000000000000000000000000000000000000060a08501527f000000000000000000000000000000000000000000000000000000000000000060c0850152601154831660e08501527f0000000000000000000000000000000000000000000000000000000000000000909216610100840152835191820184527f000000000000000000000000000000000000000000000000000000000000000082527f0000000000000000000000000000000000000000000000000000000000000000828201527f0000000000000000000000000000000000000000000000000000000000000000828501526101208301919091526012546101408301527f000000000000000000000000000000000000000000000000000000000000000061016083015291516103989261033f929101611c6c565b600081815260026020908152604080832054815192830152610353910161033f565b606060008267ffffffffffffffff811115610afc57610afc612026565b604051908082528060200260200182016040528015610b25578160200160208202803683370190505b50905060005b83811015610b7e576000858583818110610b4757610b47611fe6565b90506020020135905060008154905080848481518110610b6957610b69611fe6565b60209081029190910101525050600101610b2b565b50610b938160405160200161033f9190611da3565b5092915050565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152600091610398910161033f565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152600091610398910161033f565b600061039860105460405160200161033f91815260200190565b60006103987f000000000000000000000000000000000000000000000000000000000000000060405160200161033f91815260200190565b6001600160a01b03811660009081526014602090815260408083205490516103539261033f9260ff169101901515815260200190565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152610398600860405160200161033f919061203c565b6001600160a01b038281166000908152600360209081526040808320938516835292815282822054835160ff9091161515918101919091529091610466910161033f565b6040805180820190915260008082526020820152604080518082018252600d546001600160801b03808216808452600160801b90920481166020938401908152845193840192909252905116918101919091526103989060600161033f565b80604051636e64089360e11b8152600401610dc69190611b34565b60405180910390fd5b6040516303d1689d60e11b8152670de0b6b3a764000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307a2d13a90602401602060405180830381865afa158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6291906120bd565b905090565b610ec460405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610160810182526008546001600160801b038082168352600954600f0b6020840152600160801b909104811692820192909252606081018490527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201527f000000000000000000000000000000000000000000000000000000000000000060c0820152600a54821660e0820152600b549091610100830191610f939116611269565b8152600a546001600160801b03600160801b9182900481166020840152600b54604090930192610fc592900416611269565b905292915050565b600080610fed83610140015184610120015161123f90919063ffffffff16565b61010084015160e08501516110019161123f565b61100b91906120d6565b90506000611021846000015185602001516112df565b905060008213156110c35760006110638286604001518760a001518860c00151670de0b6b3a76400006110549190611fd3565b89606001518a608001516112fc565b915061107190508184611385565b905080156110bd576110aa828660400151838860c00151670de0b6b3a764000061109b9190611fd3565b89606001518a6080015161139a565b855186906110b9908390611fd3565b9052505b50611181565b6000821215611181576110d5826120f6565b915060006111098286604001518760c00151670de0b6b3a76400006110fa9190611fd3565b886060015189608001516113d9565b915061111790508184611385565b9050801561116357611150828660400151838860c00151670de0b6b3a76400006111419190611fd3565b89606001518a60800151611463565b8551869061115f908390611fc0565b9052505b61116d8184611fd3565b8551869061117c908390611fc0565b905250505b60006111b0856101000151670de0b6b3a764000061119f9190611fd3565b606087015160e088015191906114e4565b6111de866101400151670de0b6b3a76400006111cc9190611fd3565b606088015161012089015191906114e4565b6111e891906120d6565b905060008186600001516111fc9190612112565b90508560a001518112156112235760405163aeeb825d60e01b815260040160405180910390fd5b80865260a08601516112359082611fd3565b9695505050505050565b600061042c8383670de0b6b3a76400006114e4565b600061042c83670de0b6b3a7640000846114e4565b600080670de0b6b3a764000061127d611502565b6112879190612132565b90508083116112975760006112a1565b6112a18184611fd3565b915061042c6112d8670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000612132565b8390611254565b6000806112ec83856120d6565b9050600081121561042c57600080fd5b6000808061130a8585611254565b9050600061131b82868c8a8d611538565b9050600061135c611334670de0b6b3a76400008a611254565b61135261134b8b6113458b8f61123f565b90611566565b869061123f565b6113459085611fd3565b9050611368898c611fd3565b6113728b83611fd3565b945094505050505b965096945050505050565b6000818311611394578261042c565b50919050565b6000806113ab8888888888886115bd565b9092509050806113ce57604051637ac17d2560e01b815260040160405180910390fd5b509695505050505050565b600080806113e78585611254565b905060006113f882868b8a8c611538565b9050600061142d611411670de0b6b3a76400008a611254565b611345611426670de0b6b3a764000087611fc0565b8590611254565b9050600061143b8288611254565b90506114478b82611fd3565b611451838c611fd3565b95509550505050509550959350505050565b6000806114708484611254565b9050600061148182858b898c611538565b905061149186611345898b611fd3565b975060006114be6114aa670de0b6b3a76400008961165e565b611345856114b88d87611fd3565b90611254565b90506114ca8186611254565b90506114d68a82611fd3565b9a9950505050505050505050565b60008260001904841183021582026114fb57600080fd5b5091020490565b600061152e7f000000000000000000000000000000000000000000000000000000000000000042612149565b610e629042611fd3565b60006115448284611566565b61155c61155585611345898961123f565b889061123f565b6112359190611fc0565b60008160000361157f5750670de0b6b3a7640000610466565b8260000361158f57506000610466565b81600061159b85611673565b90508181026115b2670de0b6b3a76400008261215d565b905061123581611886565b600080806115cb8585611254565b905060006115dc82868c8a8d611538565b90506115ec876113458a8c611fc0565b9850888110156116045760008093509350505061137a565b600061162961161b670de0b6b3a76400008a61165e565b611345856114b88e87611fd3565b90506116358187611254565b9050808b111561164c57611649818c611fd3565b94505b60019350505050965096945050505050565b600061042c83670de0b6b3a764000084611a11565b600080821361169557604051636838feed60e11b815260040160405180910390fd5b5060606001600160801b03821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110600190811b90911783811c90911017609f81810383019390931b90921c6c465772b2bbbb5f824b15207a3081018102821d6d0388eaa27412d5aca026815d636e018102821d6d0df99ac502031bf953eff472fdcc018102821d6d13cdffb29d51d99322bdff5f2211018102821d6d0a0f742023def783a307a986912e018102821d6d01920d8043ca89b5239253284e42018102821d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7882018202831d6d0139601a2efabe717e604cbb4894018202831d6d02247f7a7b6594320649aa03aba1018202831d6c8c3f38e95a6b1ff2ab1c3b343619018202831d6d02384773bdf1ac5676facced60901901820290921d6cb9a025d814b29c212b8b1a07cd190102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a550602605f19919091017d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b6000680248ce36a70cb26b3e1982136118a157506000919050565b680755bf798b4a1bf1e582126118ca5760405163df92cc9d60e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b6000826000190484118302158202611a2857600080fd5b50910281810615159190040190565b60405180610180016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001611ac160405180606001604052806000815260200160008152602001600081525090565b815260200160008152602001600081525090565b600060208284031215611ae757600080fd5b5035919050565b6000815180845260005b81811015611b1457602081850181015186830182015201611af8565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061042c6020830184611aee565b80356001600160a01b038116811461035357600080fd5b600080600060608486031215611b7357600080fd5b83359250611b8360208501611b47565b9150611b9160408501611b47565b90509250925092565b60008060408385031215611bad57600080fd5b82359150611bbd60208401611b47565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018091820151918101919091526101a00190565b600060208284031215611c6357600080fd5b61042c82611b47565b81516001600160a01b031681526101c081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e0830151611cd460e08401826001600160a01b03169052565b50610100838101516001600160a01b03811684830152505061012083810151805184830152602081015161014085015260408101516101608501525050610140830151610180830152610160909201516101a09091015290565b60008060208385031215611d4157600080fd5b823567ffffffffffffffff80821115611d5957600080fd5b818501915085601f830112611d6d57600080fd5b813581811115611d7c57600080fd5b8660208260051b8501011115611d9157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015611ddb57835183529284019291840191600101611dbf565b50909695505050505050565b81516001600160801b0316815261014081016020830151611e1360208401826001600160801b03169052565b506040830151611e286040840182600f0b9052565b506060830151611e4360608401826001600160801b03169052565b506080830151611e5e60808401826001600160801b03169052565b5060a0830151611e7960a08401826001600160801b03169052565b5060c0830151611e9460c08401826001600160801b03169052565b5060e0830151611eaf60e08401826001600160801b03169052565b506101008381015115159083015261012080840151801515828501525b505092915050565b60008060408385031215611ee757600080fd5b611ef083611b47565b9150611bbd60208401611b47565b600060208083526000845481600182811c915080831680611f2057607f831692505b8583108103611f3d57634e487b7160e01b85526022600452602485fd5b878601838152602001818015611f5a5760018114611f7057611f9b565b60ff198616825284151560051b82019650611f9b565b60008b81526020902060005b86811015611f9557815484820152908501908901611f7c565b83019750505b50949998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561046657610466611faa565b8181038181111561046657610466611faa565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261202157612021611ffc565b500490565b634e487b7160e01b600052604160045260246000fd5b81546001600160801b038082168352608091821c60208401526001840154600f81900b6040850152821c6060840152600284015480821683850152821c60a0840152600384015490811660c0840152901c60e0820152600482015460ff8082161515610100840152600882901c161515610120830152610140820190610b93565b6000602082840312156120cf57600080fd5b5051919050565b8181036000831280158383131683831282161715610b9357610b93611faa565b6000600160ff1b820161210b5761210b611faa565b5060000390565b8082018281126000831280158216821582161715611ecc57611ecc611faa565b808202811582820484141761046657610466611faa565b60008261215857612158611ffc565b500690565b60008261216c5761216c611ffc565b600160ff1b82146000198414161561218657612186611faa565b50059056fea26469706673582212203dd3a41b6e8e98243ae13770c29f488bc3b96cd1e3d87bf93f08b21cf697e3ce64736f6c63430008130033",
    "sourceMap": "732:1765:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3076:144:39;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2173:92:12;;;:::i;:::-;;;-1:-1:-1;;;;;1307:32:162;;;1289:51;;1277:2;1262:18;2173:92:12;1126:220:162;1733:179:3;;;;;;:::i;:::-;;:::i;:::-;;;;1797:13:162;;-1:-1:-1;;;;;1793:54:162;1775:73;;1919:4;1907:17;;;1901:24;1897:2;1886:40;1864:20;;;1857:70;;;;1748:18;1733:179:3;1573:360:162;2725:232:39;;;;;;:::i;:::-;;:::i;:::-;;;2595:25:162;;;2583:2;2568:18;2725:232:39;2449:177:162;1644:182:39;;;;;;:::i;:::-;;:::i;3343:148::-;;;;;;:::i;:::-;;:::i;3202:1460:3:-;;;:::i;:::-;;;;;;;:::i;3640:128:39:-;;;;;;:::i;:::-;;:::i;6638:1589:3:-;;;;;;:::i;:::-;;:::i;2117:910::-;;;:::i;:::-;;;;;;;:::i;1961:152:39:-;;;;;;:::i;:::-;;:::i;5722:564:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1377:97:39:-;;;:::i;1501:101:3:-;;;:::i;5186:132::-;;;:::i;1143:111:39:-;;;:::i;2369:126:12:-;;;;;;:::i;:::-;;:::i;:::-;;;7500:14:162;;7493:22;7475:41;;7463:2;7448:18;2369:126:12;7335:187:162;5324:159:3;;;:::i;:::-;;;;;;;:::i;2302:195:39:-;;;;;;:::i;:::-;;:::i;4668:367:3:-;;;:::i;:::-;;;;9444:13:162;;-1:-1:-1;;;;;9440:22:162;;;9422:41;;9523:4;9511:17;;;9505:24;9501:33;9479:20;;;9472:63;;;;9342:18;4668:367:3;9163:378:162;3076:144:39;3153:13;3178:35;3197:5;:14;3203:7;3197:14;;;;;;;;;;;3186:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;3178:7;:35::i;:::-;3076:144;;;:::o;2173:92:12:-;2240:17;;;-1:-1:-1;;;;;2251:5:12;1307:32:162;2240:17:12;;;1289:51:162;2212:8:12;;2232:26;;1262:18:162;2240:17:12;1126:220:162;2232:26:12;2173:92;:::o;1733:179:3:-;-1:-1:-1;;;;;;;;;;;;;;;;;1857:48:3;1876:12;:27;1889:13;1876:27;;;;;;;;;;;1865:39;;;;;;11107:13:162;-1:-1:-1;;;;;11147:50:162;;11129:69;;11255:3;11251:19;11247:2;11236:35;11229:4;11214:20;;11207:65;11078:2;11063:18;;10891:387;2725:232:39;2865:7;2903:27;;;:18;:27;;;;;;;;-1:-1:-1;;;;;2903:36:39;;;;;;;;;;;:45;;;;;;;;;;;2892:57;;;;;2595:25:162;2884:66:39;;2568:18:162;2892:57:39;2449:177:162;2884:66:39;2725:232;;;;;:::o;1644:182::-;1751:7;1789:19;;;:10;:19;;;;;;;;-1:-1:-1;;;;;1789:28:39;;;;;;;;;;1778:40;;;;;2595:25:162;1770:49:39;;2568:18:162;1778:40:39;2449:177:162;1770:49:39;1644:182;;;;:::o;3343:148::-;3422:13;3447:37;3466:7;:16;3474:7;3466:16;;;;;;;;;;;3455:28;;;;;;;;:::i;3202:1460:3:-;3248:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3248:27:3;3287:18;3308:16;:14;:16::i;:::-;3470:13;:29;3407:12;:48;;;;3334:21;3358:34;;;;;3287:37;;-1:-1:-1;3334:21:3;-1:-1:-1;;;;;3470:29:3;;;;3358:97;;3407:48;3358:97;:::i;:::-;:141;;;;:::i;:::-;3334:165;;3509:20;3545:1;3532:10;:14;:171;;3702:1;3532:171;;;3561:126;3676:10;3561:89;3615:34;3638:10;3615:22;:34::i;:::-;3561:53;:89::i;:::-;:114;;:126::i;:::-;3752:864;;;;;;;;3802:12;:26;-1:-1:-1;;;;;3802:26:3;;;3752:864;;3859:28;;;;3752:864;;;;-1:-1:-1;;;3915:25:3;;;;;;3752:864;;;;;;;;;;;;;;;;;;;4008:29;;;;;3752:864;;;;4076:36;;;;;3752:864;;;;4145:30;;;;;;3752:864;;;;4215:37;;;;;3802:26;3752:864;;;4461:13;:29;;;;3752:864;;;;4530:22;;;;3752:864;;;;3509:194;;-1:-1:-1;3713:36:3;;3752:864;;;4322:18;;:92;;4379:35;:12;4400:13;4379:20;:35::i;:::-;4322:92;;;4359:1;4322:92;3752:864;;4580:25;;-1:-1:-1;;;4580:25:3;;-1:-1:-1;;;;;4580:25:3;3752:864;;;;;4634:20;;3713:903;;-1:-1:-1;4626:29:3;;4634:20;;3713:903;;4634:20;;:::i;4626:29::-;3277:1385;;;;3202:1460;:::o;3640:128:39:-;-1:-1:-1;;;;;3743:16:39;;3705:7;3743:16;;;:7;:16;;;;;;;;;3732:28;;;;;2595:25:162;3724:37:39;;2568:18:162;3732:28:39;2449:177:162;6638:1589:3;6776:7;:21;6887:7;:13;;6692:7;;-1:-1:-1;;;;;;;;6776:21:3;;;;;6831:12;;;6692:7;;6887;6831:12;;6887:13;;;;;;:::i;:::-;;;;;;;;;6855:45;;;;;;;;;6887:13;;6855:45;;;;;;;;;-1:-1:-1;;;;;6855:45:3;;;;;;-1:-1:-1;6931:31:3;6956:6;6939:13;6931:31;:::i;:::-;6910:52;-1:-1:-1;7123:20:3;7146:9;;:41;;7179:8;7186:1;7179:4;:8;:::i;:::-;7146:41;;;7158:7;:14;:18;;7175:1;;7158:18;:::i;:::-;7225:16;;;;;;;;;7197:25;7225:16;;;;;;;7123:64;;-1:-1:-1;7251:547:3;7274:4;7258:12;:20;7251:547;;7460:35;7498:7;7506:12;7498:21;;;;;;;;:::i;:::-;;;;;;;;;;7545:26;;7498:21;;-1:-1:-1;7545:26:3;;7537:49;-1:-1:-1;7533:137:3;;7606:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7606:26:3;;;;;;-1:-1:-1;7650:5:3;;7533:137;7698:17;;:89;;7771:16;7786:1;7771:12;:16;:::i;:::-;7698:89;;;7734:7;:14;:18;;7751:1;;7734:18;:::i;:::-;7683:104;;7280:518;7251:547;;;7812:17;;:22;;:17;:22;7808:64;;7843:29;;-1:-1:-1;;;7843:29:3;;;;;;;;;;;7808:64;8000:16;8055:7;:12;;;-1:-1:-1;;;;;8047:21:3;8027:11;:16;;;-1:-1:-1;;;;;8019:25:3;:49;;;;:::i;:::-;8151:17;;8106:21;;8000:68;;-1:-1:-1;8078:17:3;;8098:71;;8143:26;;;;;8098:30;:71;:::i;:::-;8078:91;-1:-1:-1;8179:41:3;8198:20;8078:91;8198:8;:20;:::i;:::-;8187:32;;;;;;2595:25:162;;2583:2;2568:18;;2449:177;8179:41:3;6701:1526;;;;;;;;6638:1589;;;:::o;2117:910::-;2189:29;;:::i;:::-;2283:713;;;;;;;;-1:-1:-1;;;;;2339:10:3;2283:713;;;;2390:18;2283:713;;;;;;;;2452:21;2283:713;;;;2521:25;2283:713;;;;;;;;2586:17;2283:713;;;;2645:19;2283:713;;;;2699:12;2283:713;;;;2745:11;;;;2283:713;;;;2792:13;2283:713;;;2745:11;2283:713;;;2833:53;;;;;;;2850:9;2833:53;;2861:8;2833:53;;;;2871:14;2833:53;;;;2283:713;;;;;;;2963:7;:14;2283:713;;;;2919:10;2283:713;;;;2255:755;;2234:786;;2255:755;;2283:713;2255:755;;:::i;1961:152:39:-;2045:7;2083:21;;;:12;:21;;;;;;;;;2072:33;;;;;2595:25:162;2064:42:39;;2568:18:162;2072:33:39;2449:177:162;5722:564:3;5800:16;5828:23;5868:6;5854:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5854:28:3;;5828:54;;5953:9;5948:294;5968:17;;;5948:294;;;6003:12;6018:6;;6025:1;6018:9;;;;;;;:::i;:::-;;;;;;;6003:24;;6041:12;6124:4;6118:11;6110:19;;6168:4;6156:6;6163:1;6156:9;;;;;;;;:::i;:::-;;;;;;;;;;:16;-1:-1:-1;;6214:3:3;;5948:294;;;;6252:27;6271:6;6260:18;;;;;;;;:::i;6252:27::-;5818:468;5722:564;;;;:::o;1377:97:39:-;1446:20;;;-1:-1:-1;;;;;1457:8:39;1307:32:162;1446:20:39;;;1289:51:162;1419:7:39;;1438:29;;1262:18:162;1446:20:39;1126:220:162;1501:101:3;1572:22;;;-1:-1:-1;;;;;1583:10:3;1307:32:162;1572:22:3;;;1289:51:162;1545:7:3;;1564:31;;1262:18:162;1572:22:3;1126:220:162;5186:132:3;5249:7;5268:43;5287:22;;5276:34;;;;;;2595:25:162;;2583:2;2568:18;;2449:177;1143:111:39;1192:7;1211:36;1230:15;1219:27;;;;;;2595:25:162;;2583:2;2568:18;;2449:177;2369:126:12;-1:-1:-1;;;;;2465:21:12;;2430:4;2465:21;;;:12;:21;;;;;;;;;2454:33;;2446:42;;2454:33;;2465:21;;;2454:33;7500:14:162;;7493:22;7475:41;;7463:2;7448:18;;7335:187;5324:159:3;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5443:33:3;5462:12;5451:24;;;;;;;;:::i;2302:195:39:-;-1:-1:-1;;;;;2452:26:39;;;2417:4;2452:26;;;:17;:26;;;;;;;;:36;;;;;;;;;;;;2441:48;;2452:36;;;;7500:14:162;7493:22;2441:48:39;;;7475:41:162;;;;2417:4:39;;2433:57;;7448:18:162;2441:48:39;7335:187:162;4668:367:3;-1:-1:-1;;;;;;;;;;;;;;;;;4838:166:3;;;;;;;;4902:13;:29;-1:-1:-1;;;;;4902:29:3;;;4838:166;;;-1:-1:-1;;;4963:22:3;;;;;4838:166;;;;;;;4810:208;;;;;9422:41:162;;;;9505:24;;9501:33;9479:20;;;9472:63;;;;4789:239:3;;9342:18:162;;4810:208:3;9163:378:162;3956:106:39;4048:6;4025:30;;-1:-1:-1;;;4025:30:39;;;;;;;;:::i;:::-;;;;;;;;1891:188:12;2028:44;;-1:-1:-1;;;2028:44:12;;565:4:31;2028:44:12;;;2595:25:162;1981:18:12;;2028:5;-1:-1:-1;;;;;2028:21:12;;;;2568:18:162;;2028:44:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2015:57;;1891:188;:::o;8679:1001:7:-;8793:53;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8793:53:7;8877:796;;;;;;;;8940:12;:26;-1:-1:-1;;;;;8940:26:7;;;8877:796;;8997:28;;;;8877:796;;;;-1:-1:-1;;;9053:25:7;;;;;8877:796;;;;;;;;;;;;;9148:18;8877:796;;;;9202:21;8877:796;;;;9250:12;8877:796;;;;9294:29;;;;8877:796;;;;9410:36;;8877:796;;8940:26;8877:796;;;9363:97;;9410:36;9363:29;:97::i;:::-;8877:796;;9493:30;;-1:-1:-1;;;;;;;;9493:30:7;;;;;;8877:796;;;;9611:37;;8877:796;;;;;9564:98;;9611:37;;;9564:29;:98::i;:::-;8877:796;;8862:811;8679:1001;-1:-1:-1;;8679:1001:7:o;59184:5242:32:-;59287:7;59437:20;59595:106;59650:7;:33;;;59595:7;:25;;;:33;;:106;;;;:::i;:::-;59513:32;;;;59480:24;;;;:66;;:32;:66::i;:::-;59460:255;;;;:::i;:::-;59437:278;;59725:30;59758:113;59803:7;:21;;;59838:7;:23;;;59758:31;:113::i;:::-;59725:146;;59901:1;59885:13;:17;59881:3447;;;60573:21;60598:291;60647:22;60687:7;:20;;;60725:7;:28;;;60777:7;:19;;;150:4:31;60771:25:32;;;;:::i;:::-;60814:7;:18;;;60850:7;:25;;;60598:31;:291::i;:::-;60570:319;-1:-1:-1;60919:41:32;;-1:-1:-1;60570:319:32;60945:13;60919:17;:41::i;:::-;60903:57;-1:-1:-1;61029:17:32;;61025:448;;61091:367;61183:22;61231:7;:20;;;61277:13;61322:7;:19;;;150:4:31;61316:25:32;;;;:::i;:::-;61367:7;:18;;;61411:7;:25;;;61091:66;:367::i;:::-;61066:392;;:7;;:392;;;;;:::i;:::-;;;-1:-1:-1;61025:448:32;59904:1579;59881:3447;;;61509:1;61493:13;:17;61489:1839;;;62314:14;62315:13;62314:14;:::i;:::-;62298:30;;62392:21;62417:244;62465:22;62505:7;:20;;;62549:7;:19;;;150:4:31;62543:25:32;;;;:::i;:::-;62586:7;:18;;;62622:7;:25;;;62417:30;:244::i;:::-;62389:272;-1:-1:-1;62691:41:32;;-1:-1:-1;62389:272:32;62717:13;62691:17;:41::i;:::-;62675:57;-1:-1:-1;62797:17:32;;62793:448;;62859:367;62951:22;62999:7;:20;;;63045:13;63090:7;:19;;;150:4:31;63084:25:32;;;;:::i;:::-;63135:7;:18;;;63179:7;:25;;;62859:66;:367::i;:::-;62834:392;;:7;;:392;;;;;:::i;:::-;;;-1:-1:-1;62793:448:32;63279:38;63304:13;63287;63279:38;:::i;:::-;63254:63;;:7;;:63;;;;;:::i;:::-;;;-1:-1:-1;;61489:1839:32;63461:19;63695:153;63758:7;:32;;;150:4:31;63752:38:32;;;;:::i;:::-;63812:18;;;;63695:24;;;;;:153;:35;:153::i;:::-;63503:143;63563:7;:33;;;150:4:31;63557:39:32;;;;:::i;:::-;63614:18;;;;63503:25;;;;;:143;:36;:143::i;:::-;63483:379;;;;:::i;:::-;63461:401;;63872:27;63946:12;63909:7;:21;;;63902:56;;;;:::i;:::-;63872:86;;64002:7;:28;;;63972:20;:59;63968:131;;;64054:34;;-1:-1:-1;;;64054:34:32;;;;;;;;;;;63968:131;64108:53;;;64391:28;;;;64367:52;;64140:20;64367:52;:::i;:::-;64360:59;59184:5242;-1:-1:-1;;;;;;59184:5242:32:o;1814:119:31:-;1876:7;1903:22;1914:1;1917;1920:4;1903:10;:22::i;2207:165::-;2269:7;2296:22;2307:1;2310:4;2316:1;2296:10;:22::i;7277:444:7:-;7376:21;7409:24;565:4:31;7436:19:7;:17;:19::i;:::-;:43;;;;:::i;:::-;7409:70;;7521:16;7505:13;:32;:95;;7599:1;7505:95;;;7552:32;7568:16;7552:13;:32;:::i;:::-;7489:111;-1:-1:-1;7626:88:7;7663:41;565:4:31;7663:17:7;:41;:::i;:::-;7627:13;;7626:23;:88::i;68916:340:32:-;69051:7;;69102:53;69139:16;69109:14;69102:53;:::i;:::-;69070:85;;69199:1;69173:22;:27;;69165:36;;;;;9241:983:34;9414:7;;;9880:13;:1;9890:2;9880:9;:13::i;:::-;9863:30;;9903:9;9915:47;9942:6;9950:2;9954:1;9957;9960;9915:26;:47::i;:::-;9903:59;-1:-1:-1;9972:16:34;9991:105;10054:32;565:4:31;10084:1:34;10054:29;:32::i;:::-;9996:39;10011:23;10032:1;10011:16;:2;10022:4;10011:10;:16::i;:::-;:20;;:23::i;:::-;9996:6;;:14;:39::i;:::-;9992:43;;:1;:43;:::i;9991:105::-;9972:124;-1:-1:-1;10194:8:34;10198:4;10194:1;:8;:::i;:::-;10204:12;10215:1;10204:8;:12;:::i;:::-;10186:31;;;;;;;9241:983;;;;;;;;;;:::o;14433:104:31:-;14491:7;14521:1;14517;:5;:13;;14529:1;14517:13;;;-1:-1:-1;14525:1:31;14433:104;-1:-1:-1;14433:104:31:o;4871:481:34:-;5056:14;5082:12;5124:136;5172:1;5187;5202:2;5218:1;5233;5248:2;5124:34;:136::i;:::-;5104:156;;-1:-1:-1;5104:156:34;-1:-1:-1;5104:156:34;5270:76;;5305:30;;-1:-1:-1;;;5305:30:34;;;;;;;;;;;5270:76;5072:280;4871:481;;;;;;;;:::o;7623:1046::-;7773:7;;;8276:13;:1;8286:2;8276:9;:13::i;:::-;8259:30;;8299:9;8311:47;8338:6;8346:2;8350:1;8353;8356;8311:26;:47::i;:::-;8299:59;-1:-1:-1;8368:16:34;8387:103;8448:32;565:4:31;8478:1:34;8448:29;:32::i;:::-;8388:41;8398:30;565:4:31;8398:6:34;:30;:::i;:::-;8388:1;;:9;:41::i;8387:103::-;8368:122;-1:-1:-1;8500:16:34;8519:20;8368:122;8536:2;8519:16;:20::i;:::-;8500:39;-1:-1:-1;8635:12:34;8646:1;8500:39;8635:12;:::i;:::-;8649;8653:8;8649:1;:12;:::i;:::-;8627:35;;;;;;;;7623:1046;;;;;;;;:::o;3358:892::-;3543:7;;3595:13;:1;3605:2;3595:9;:13::i;:::-;3578:30;;3669:9;3681:47;3708:6;3716:2;3720:1;3723;3726;3681:26;:47::i;:::-;3669:59;-1:-1:-1;3770:15:34;3783:1;3771:6;3775:2;3771:1;:6;:::i;3770:15::-;3766:19;-1:-1:-1;3884:10:34;3897:81;3938:30;565:4:31;3966:1:34;3938:27;:30::i;:::-;3897:23;3913:6;3898:5;3902:1;3898;:5;:::i;:::-;3897:15;;:23::i;:81::-;3884:94;-1:-1:-1;4088:14:34;3884:94;4099:2;4088:10;:14::i;:::-;4083:19;-1:-1:-1;4237:6:34;4242:1;4083:19;4237:6;:::i;:::-;4230:13;3358:892;-1:-1:-1;;;;;;;;;;3358:892:34:o;984:556:31:-;1100:9;1365:1;-1:-1:-1;;1348:19:31;1345:1;1342:26;1339:1;1335:34;1328:42;1315:11;1311:60;1284:146;;1414:1;1411;1404:12;1284:146;-1:-1:-1;1501:9:31;;1497:27;;984:556::o;7834:223:7:-;7910:24;8012:37;8030:19;8012:15;:37;:::i;:::-;7981:69;;:15;:69;:::i;10669:302:34:-;10835:7;10956:8;:1;10962;10956:5;:8::i;:::-;10917:36;10932:20;10950:1;10932:13;:2;10943:1;10932:10;:13::i;:20::-;10917:6;;:14;:36::i;:::-;:47;;;;:::i;4671:846:31:-;4729:7;4795:1;4800;4795:6;4791:50;;-1:-1:-1;565:4:31;4817:13;;4791:50;4894:1;4899;4894:6;4890:45;;-1:-1:-1;4923:1:31;4916:8;;4890:45;5098:1;5073:15;5276:14;5287:1;5276:3;:14::i;:::-;5263:27;-1:-1:-1;5368:18:31;;;5405:22;565:4;5368:18;5405:22;:::i;:::-;;;5500:9;5504:4;5500:3;:9::i;6050:1039:34:-;6239:14;;;6312:13;:1;6322:2;6312:9;:13::i;:::-;6295:30;;6386:9;6398:47;6425:6;6433:2;6437:1;6440;6443;6398:26;:47::i;:::-;6386:59;-1:-1:-1;6487:15:34;6500:1;6488:6;6492:2;6488:1;:6;:::i;6487:15::-;6483:19;;6520:1;6516;:5;6512:53;;;6545:1;6548:5;6537:17;;;;;;;;6512:53;6663:10;6676:81;6717:30;565:4:31;6745:1:34;6717:27;:30::i;:::-;6676:23;6692:6;6677:5;6681:1;6677;:5;:::i;6676:81::-;6663:94;-1:-1:-1;6867:14:34;6663:94;6878:2;6867:10;:14::i;:::-;6862:19;;7015:2;7011:1;:6;7007:52;;;7042:6;7046:2;7042:1;:6;:::i;:::-;7033:15;;7007:52;7078:4;7068:14;;6269:820;;;6050:1039;;;;;;;;;:::o;4141:115:31:-;4201:7;4228:20;4237:1;4240:4;4246:1;4228:8;:20::i;9632:3592::-;9677:8;9730:1;9725;:6;9721:60;;9740:41;;-1:-1:-1;;;9740:41:31;;;;;;;;;;;9721:60;-1:-1:-1;10747:2:31;-1:-1:-1;;;;;;;10158:1:31;10154:49;10261:9;;;10241:18;10238:33;10235:1;10231:41;10225:48;10323:9;;;10311:10;10308:25;10305:1;10301:33;10295:40;10381:9;;;10373:6;10370:21;10367:1;10363:29;10357:36;10437:9;;;10431:4;10428:19;10425:1;10421:27;;;10415:34;;;10492:9;;;10487:3;10484:18;10481:1;10477:26;10471:33;10547:9;;;10539:18;;;10536:1;10532:26;;;10526:33;;;10595:9;;;10587:18;;;10581:25;10777:3;:7;;;;;10763:22;;;;10810:17;;;11603:31;11599:35;;11654:5;;11653:13;;11670:32;11652:50;11722:5;;11721:13;;11738:33;11720:51;11791:5;;11790:13;;11807:33;11789:51;11860:5;;11859:13;;11876:33;11858:51;11929:5;;11928:13;;11945:32;11927:50;11997:5;;11996:13;;12013:30;11995:48;11000:31;10996:35;;11051:5;;11050:13;;11067:32;11049:50;11119:5;;11118:13;;11135:32;11117:50;11187:5;;11186:13;;-1:-1:-1;;11185:50:31;11255:5;;11254:13;;-1:-1:-1;;11253:50:31;11323:5;;11322:13;;;-1:-1:-1;;11321:50:31;11389:5;-1:-1:-1;;11389:46:31;12384:10;12774:43;12769:48;-1:-1:-1;;10743:6:31;;;;12897:71;:91;12876:112;13061:72;13056:77;13204:3;13198:9;;9632:3592::o;5773:3347::-;5819:8;-1:-1:-1;;5996:1:31;:26;5992:40;;-1:-1:-1;6031:1:31;;5773:3347;-1:-1:-1;5773:3347:31:o;5992:40::-;6231:21;6226:1;:26;6222:99;;6277:44;;-1:-1:-1;;;6277:44:31;;;;;;;;;;;6222:99;6594:7;6588:2;6583:7;;;6582:19;;-1:-1:-1;6930:8:31;7014:2;6954:29;6943:7;;;6942:41;-1:-1:-1;;;6942:51:31;6941:75;;7042:29;7038:33;;7034:37;;;-1:-1:-1;;7713:35:31;;7768:5;;7348:2;7767:13;;;7784:32;7766:50;7836:5;;7835:13;;-1:-1:-1;;7834:51:31;7905:5;;7904:13;;7921:34;7903:52;7975:5;;7974:13;;-1:-1:-1;;7973:53:31;8046:5;;8045:13;;8062:35;8044:53;7354:32;7287:31;7283:35;;7338:5;;7337:13;;7336:50;;;7411:5;;;-1:-1:-1;;7411:40:31;7471:5;7470:13;;;7487:35;7469:53;7540:5;;;-1:-1:-1;;;7540:50:31;8462:10;8999:49;8966:82;9081:3;:7;;;;8965:124;;;;;;-1:-1:-1;;5773:3347:31:o;2726:748::-;2840:9;3105:1;-1:-1:-1;;3088:19:31;3085:1;3082:26;3079:1;3075:34;3068:42;3055:11;3051:60;3024:146;;3154:1;3151;3144:12;3024:146;-1:-1:-1;3421:9:31;;3368:27;;;3365:34;;3417:27;;;3344:114;;2726:748::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:162:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:162;;14:180;-1:-1:-1;14:180:162:o;354:423::-;396:3;434:5;428:12;461:6;456:3;449:19;486:1;496:162;510:6;507:1;504:13;496:162;;;572:4;628:13;;;624:22;;618:29;600:11;;;596:20;;589:59;525:12;496:162;;;500:3;703:1;696:4;687:6;682:3;678:16;674:27;667:38;766:4;759:2;755:7;750:2;742:6;738:15;734:29;729:3;725:39;721:50;714:57;;;354:423;;;;:::o;782:220::-;931:2;920:9;913:21;894:4;951:45;992:2;981:9;977:18;969:6;951:45;:::i;1938:173::-;2006:20;;-1:-1:-1;;;;;2055:31:162;;2045:42;;2035:70;;2101:1;2098;2091:12;2116:328;2193:6;2201;2209;2262:2;2250:9;2241:7;2237:23;2233:32;2230:52;;;2278:1;2275;2268:12;2230:52;2314:9;2301:23;2291:33;;2343:38;2377:2;2366:9;2362:18;2343:38;:::i;:::-;2333:48;;2400:38;2434:2;2423:9;2419:18;2400:38;:::i;:::-;2390:48;;2116:328;;;;;:::o;2631:254::-;2699:6;2707;2760:2;2748:9;2739:7;2735:23;2731:32;2728:52;;;2776:1;2773;2766:12;2728:52;2812:9;2799:23;2789:33;;2841:38;2875:2;2864:9;2860:18;2841:38;:::i;:::-;2831:48;;2631:254;;;;;:::o;2890:1098::-;3107:13;;3089:32;;3177:4;3165:17;;;3159:24;3137:20;;;3130:54;3240:4;3228:17;;;3222:24;3200:20;;;3193:54;3303:4;3291:17;;;3285:24;3263:20;;;3256:54;3366:4;3354:17;;;3348:24;3326:20;;;3319:54;3429:4;3417:17;;;3411:24;3389:20;;;3382:54;3492:4;3480:17;;;3474:24;3452:20;;;3445:54;3555:4;3543:17;;;3537:24;3515:20;;;3508:54;3581:6;3629:15;;;3623:22;3603:18;;;3596:50;3665:6;3713:15;;;3707:22;3687:18;;;3680:50;3749:6;3797:15;;;3791:22;3771:18;;;3764:50;3833:6;3881:15;;;3875:22;3855:18;;;3848:50;3917:6;3965:15;;;3959:22;3939:18;;;3932:50;;;;3076:3;3061:19;;2890:1098::o;3993:186::-;4052:6;4105:2;4093:9;4084:7;4080:23;4076:32;4073:52;;;4121:1;4118;4111:12;4073:52;4144:29;4163:9;4144:29;:::i;4390:1197::-;4622:13;;-1:-1:-1;;;;;1083:31:162;1071:44;;4580:3;4565:19;;4703:4;4695:6;4691:17;4685:24;4678:4;4667:9;4663:20;4656:54;4766:4;4758:6;4754:17;4748:24;4741:4;4730:9;4726:20;4719:54;4829:4;4821:6;4817:17;4811:24;4804:4;4793:9;4789:20;4782:54;4892:4;4884:6;4880:17;4874:24;4867:4;4856:9;4852:20;4845:54;4955:4;4947:6;4943:17;4937:24;4930:4;4919:9;4915:20;4908:54;5018:4;5010:6;5006:17;5000:24;4993:4;4982:9;4978:20;4971:54;5072:4;5064:6;5060:17;5054:24;5087:64;5145:4;5134:9;5130:20;5116:12;-1:-1:-1;;;;;1083:31:162;1071:44;;1007:114;5087:64;-1:-1:-1;5170:6:162;5213:15;;;5207:22;-1:-1:-1;;;;;1083:31:162;;5283:18;;;1071:44;-1:-1:-1;;5321:6:162;5364:15;;;5358:22;4254:12;;5428:18;;;4242:25;4316:4;4305:16;;4299:23;4283:14;;;4276:47;4372:4;4361:16;;4355:23;4339:14;;;4332:47;-1:-1:-1;;5505:6:162;5493:19;;5487:26;5478:6;5463:22;;5456:58;5572:6;5560:19;;;5554:26;5545:6;5530:22;;;5523:58;4390:1197;:::o;5592:615::-;5678:6;5686;5739:2;5727:9;5718:7;5714:23;5710:32;5707:52;;;5755:1;5752;5745:12;5707:52;5795:9;5782:23;5824:18;5865:2;5857:6;5854:14;5851:34;;;5881:1;5878;5871:12;5851:34;5919:6;5908:9;5904:22;5894:32;;5964:7;5957:4;5953:2;5949:13;5945:27;5935:55;;5986:1;5983;5976:12;5935:55;6026:2;6013:16;6052:2;6044:6;6041:14;6038:34;;;6068:1;6065;6058:12;6038:34;6121:7;6116:2;6106:6;6103:1;6099:14;6095:2;6091:23;6087:32;6084:45;6081:65;;;6142:1;6139;6132:12;6081:65;6173:2;6165:11;;;;;6195:6;;-1:-1:-1;5592:615:162;;-1:-1:-1;;;;5592:615:162:o;6212:632::-;6383:2;6435:21;;;6505:13;;6408:18;;;6527:22;;;6354:4;;6383:2;6606:15;;;;6580:2;6565:18;;;6354:4;6649:169;6663:6;6660:1;6657:13;6649:169;;;6724:13;;6712:26;;6793:15;;;;6758:12;;;;6685:1;6678:9;6649:169;;;-1:-1:-1;6835:3:162;;6212:632;-1:-1:-1;;;;;;6212:632:162:o;7527:1366::-;7751:13;;-1:-1:-1;;;;;1417:46:162;1405:59;;7719:3;7704:19;;7823:4;7815:6;7811:17;7805:24;7838:54;7886:4;7875:9;7871:20;7857:12;-1:-1:-1;;;;;1417:46:162;1405:59;;1351:119;7838:54;;7941:4;7933:6;7929:17;7923:24;7956:55;8005:4;7994:9;7990:20;7974:14;1551:2;1540:21;1528:34;;1475:93;7956:55;;8060:4;8052:6;8048:17;8042:24;8075:56;8125:4;8114:9;8110:20;8094:14;-1:-1:-1;;;;;1417:46:162;1405:59;;1351:119;8075:56;;8180:4;8172:6;8168:17;8162:24;8195:56;8245:4;8234:9;8230:20;8214:14;-1:-1:-1;;;;;1417:46:162;1405:59;;1351:119;8195:56;;8300:4;8292:6;8288:17;8282:24;8315:56;8365:4;8354:9;8350:20;8334:14;-1:-1:-1;;;;;1417:46:162;1405:59;;1351:119;8315:56;;8420:4;8412:6;8408:17;8402:24;8435:56;8485:4;8474:9;8470:20;8454:14;-1:-1:-1;;;;;1417:46:162;1405:59;;1351:119;8435:56;;8540:4;8532:6;8528:17;8522:24;8555:56;8605:4;8594:9;8590:20;8574:14;-1:-1:-1;;;;;1417:46:162;1405:59;;1351:119;8555:56;-1:-1:-1;8630:6:162;8673:15;;;8667:22;7309:13;7302:21;8730:18;;;7290:34;8768:6;8811:15;;;8805:22;7309:13;;7302:21;8868:18;;;7290:34;8836:51;;;7527:1366;;;;:::o;8898:260::-;8966:6;8974;9027:2;9015:9;9006:7;9002:23;8998:32;8995:52;;;9043:1;9040;9033:12;8995:52;9066:29;9085:9;9066:29;:::i;:::-;9056:39;;9114:38;9148:2;9137:9;9133:18;9114:38;:::i;9672:1214::-;9781:4;9810:2;9839;9828:9;9821:21;9862:1;9895:6;9889:13;9925:3;9947:1;9975:9;9971:2;9967:18;9957:28;;10035:2;10024:9;10020:18;10057;10047:61;;10101:4;10093:6;10089:17;10079:27;;10047:61;10154:2;10146:6;10143:14;10123:18;10120:38;10117:165;;-1:-1:-1;;;10181:33:162;;10237:4;10234:1;10227:15;10267:4;10188:3;10255:17;10117:165;10338:18;;;286:19;;;338:4;329:14;10381:18;10408:128;;;;10550:1;10545:315;;;;10374:486;;10408:128;-1:-1:-1;;10441:24:162;;10429:37;;10509:14;;10502:22;10499:1;10495:30;10486:40;;;-1:-1:-1;10408:128:162;;10545:315;9619:1;9612:14;;;9656:4;9643:18;;10640:1;10654:165;10668:6;10665:1;10662:13;10654:165;;;10746:14;;10733:11;;;10726:35;10789:16;;;;10683:10;;10654:165;;;10839:11;;;-1:-1:-1;;10374:486:162;-1:-1:-1;10877:3:162;;9672:1214;-1:-1:-1;;;;;;;;;9672:1214:162:o;11415:127::-;11476:10;11471:3;11467:20;11464:1;11457:31;11507:4;11504:1;11497:15;11531:4;11528:1;11521:15;11547:125;11612:9;;;11633:10;;;11630:36;;;11646:18;;:::i;11677:128::-;11744:9;;;11765:11;;;11762:37;;;11779:18;;:::i;11810:127::-;11871:10;11866:3;11862:20;11859:1;11852:31;11902:4;11899:1;11892:15;11926:4;11923:1;11916:15;11942:127;12003:10;11998:3;11994:20;11991:1;11984:31;12034:4;12031:1;12024:15;12058:4;12055:1;12048:15;12074:120;12114:1;12140;12130:35;;12145:18;;:::i;:::-;-1:-1:-1;12179:9:162;;12074:120::o;12199:127::-;12260:10;12255:3;12251:20;12248:1;12241:31;12291:4;12288:1;12281:15;12315:4;12312:1;12305:15;12554:1213;12773:13;;-1:-1:-1;;;;;12867:18:162;;;1405:59;;12929:3;12925:19;;;12961:4;12946:20;;1405:59;13013:4;13001:17;;12995:24;13057:2;13046:27;;;13090:4;13075:20;;1528:34;13124:21;;13162:4;13147:20;;1405:59;13214:4;13202:17;;13196:24;13248:20;;;13270:19;;;1405:59;13318:21;;13356:4;13341:20;;1405:59;13408:4;13396:17;;13390:24;13442:20;;;13479:4;13464:20;;1405:59;13513:21;;13551:4;13536:20;;1405:59;13603:4;13591:17;;13585:24;13651:4;13634:22;;;7309:13;7302:21;13673:6;13658:22;;7290:34;13714:1;13710:19;;;13706:30;7309:13;7302:21;13753:6;13738:22;;7290:34;12743:3;12728:19;;;13690:71;7239:91;13995:184;14065:6;14118:2;14106:9;14097:7;14093:23;14089:32;14086:52;;;14134:1;14131;14124:12;14086:52;-1:-1:-1;14157:16:162;;13995:184;-1:-1:-1;13995:184:162:o;14184:200::-;14250:9;;;14223:4;14278:9;;14306:10;;14318:12;;;14302:29;14341:12;;;14333:21;;14299:56;14296:82;;;14358:18;;:::i;14389:136::-;14424:3;-1:-1:-1;;;14445:22:162;;14442:48;;14470:18;;:::i;:::-;-1:-1:-1;14510:1:162;14506:13;;14389:136::o;14530:216::-;14594:9;;;14622:11;;;14569:3;14652:9;;14680:10;;14676:19;;14705:10;;14697:19;;14673:44;14670:70;;;14720:18;;:::i;14751:168::-;14824:9;;;14855;;14872:15;;;14866:22;;14852:37;14842:71;;14893:18;;:::i;14924:112::-;14956:1;14982;14972:35;;14987:18;;:::i;:::-;-1:-1:-1;15021:9:162;;14924:112::o;15041:193::-;15080:1;15106;15096:35;;15111:18;;:::i;:::-;-1:-1:-1;;;15147:18:162;;-1:-1:-1;;15167:13:162;;15143:38;15140:64;;;15184:18;;:::i;:::-;-1:-1:-1;15218:10:162;;15041:193::o",
    "linkReferences": {},
    "immutableReferences": {
      "13107": [
        {
          "start": 2984,
          "length": 32
        }
      ],
      "13109": [
        {
          "start": 3131,
          "length": 32
        }
      ],
      "4545": [
        {
          "start": 2237,
          "length": 32
        },
        {
          "start": 3048,
          "length": 32
        }
      ],
      "4548": [
        {
          "start": 2433,
          "length": 32
        },
        {
          "start": 5385,
          "length": 32
        }
      ],
      "4551": [
        {
          "start": 2395,
          "length": 32
        },
        {
          "start": 4788,
          "length": 32
        }
      ],
      "4554": [
        {
          "start": 2471,
          "length": 32
        },
        {
          "start": 3920,
          "length": 32
        }
      ],
      "4557": [
        {
          "start": 2274,
          "length": 32
        },
        {
          "start": 3844,
          "length": 32
        }
      ],
      "4560": [
        {
          "start": 2316,
          "length": 32
        },
        {
          "start": 3882,
          "length": 32
        }
      ],
      "4563": [
        {
          "start": 2353,
          "length": 32
        }
      ],
      "4574": [
        {
          "start": 2568,
          "length": 32
        }
      ],
      "4577": [
        {
          "start": 2603,
          "length": 32
        }
      ],
      "4580": [
        {
          "start": 2640,
          "length": 32
        }
      ],
      "4598": [
        {
          "start": 2519,
          "length": 32
        }
      ],
      "4601": [
        {
          "start": 2695,
          "length": 32
        }
      ],
      "5935": [
        {
          "start": 870,
          "length": 32
        },
        {
          "start": 3567,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "balanceOf(uint256,address)": "3656eec2",
    "baseToken()": "c55dae63",
    "factory()": "c45a0155",
    "getCheckpoint(uint256)": "20fc4881",
    "getMarketState()": "d8165743",
    "getPoolConfig()": "b0d96580",
    "getPoolInfo()": "60246c88",
    "getUncollectedGovernanceFees()": "c69e16ad",
    "getWithdrawPool()": "fba56008",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isSweepable(address)": "cc962f8e",
    "linkerCodeHash()": "c905a4b5",
    "load(uint256[])": "becee9c3",
    "name(uint256)": "00ad800c",
    "nonces(address)": "7ecebe00",
    "perTokenApprovals(uint256,address,address)": "21ff32a9",
    "pool()": "16f0115b",
    "query(uint256)": "afdac68d",
    "symbol(uint256)": "4e41a1fb",
    "totalSupply(uint256)": "bd85b039"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governance\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"oracleSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateGap\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_linkerCodeHash_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory_\",\"type\":\"address\"},{\"internalType\":\"contract IERC4626\",\"name\":\"_pool_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FixedPointMath_InvalidExponent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FixedPointMath_InvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTradeSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NegativePresentValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueryOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ReturnData\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"getCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"sharePrice\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"longExposure\",\"type\":\"int128\"}],\"internalType\":\"struct IHyperdrive.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"shareReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bondReserves\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"shareAdjustment\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"longExposure\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"internalType\":\"struct IHyperdrive.MarketState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governance\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"oracleSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateGap\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesReadyToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longExposure\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncollectedGovernanceFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"readyToWithdraw\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"proceeds\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.WithdrawPool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"isSweepable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkerCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_slots\",\"type\":\"uint256[]\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"query\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(uint256,address)\":{\"params\":{\"account\":\"The account.\",\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The balance.\"}},\"baseToken()\":{\"returns\":{\"_0\":\"The base token.\"}},\"constructor\":{\"params\":{\"_factory_\":\"The factory which is used to deploy the linking contracts\",\"_linkerCodeHash_\":\"The hash of the erc20 linker contract deploy code\",\"_pool_\":\"The ERC4626 pool.\"}},\"factory()\":{\"returns\":{\"_0\":\"The linking factory.\"}},\"getCheckpoint(uint256)\":{\"params\":{\"_checkpointId\":\"The checkpoint ID.\"},\"returns\":{\"_0\":\"The checkpoint.\"}},\"getPoolConfig()\":{\"details\":\"These parameters are immutable, so this should only need to be      called once.\",\"returns\":{\"_0\":\"The PoolConfig struct.\"}},\"getPoolInfo()\":{\"returns\":{\"_0\":\"The PoolInfo struct.\"}},\"getUncollectedGovernanceFees()\":{\"returns\":{\"_0\":\"Governance fees denominated in shares yet to be collected\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account.\",\"operator\":\"The operator.\"},\"returns\":{\"_0\":\"The approval status.\"}},\"isSweepable(address)\":{\"params\":{\"_target\":\"The target address.\"}},\"linkerCodeHash()\":{\"returns\":{\"_0\":\"The code hash.\"}},\"load(uint256[])\":{\"params\":{\"_slots\":\"The storage slots the caller wants the data from\"},\"returns\":{\"_0\":\"A raw array of loaded data\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The name.\"}},\"nonces(address)\":{\"params\":{\"account\":\"The account.\"},\"returns\":{\"_0\":\"The signature nonce.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"account\":\"The account.\",\"spender\":\"The spender.\",\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The approval status.\"}},\"pool()\":{\"returns\":{\"_0\":\"The 4626 pool.\"}},\"query(uint256)\":{\"details\":\"Any integrations should assert the returned value is not equal to the QueryOutOfRange() selector\",\"params\":{\"period\":\"The gap in our time sample.\"},\"returns\":{\"_0\":\"The average price in that time\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The symbol.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The total supply.\"}}},\"stateVariables\":{\"_isSweepable\":{\"details\":\"A mapping from addresses to their status as a sweep target. This      mapping does not change after construction.\"}},\"title\":\"ERC4626DataProvider\",\"version\":1},\"userdoc\":{\"errors\":{\"FixedPointMath_InvalidExponent()\":[{\"notice\":\"###################### ### FixedPointMath ### ######################\"}],\"InvalidTradeSize()\":[{\"notice\":\"###################### ### YieldSpaceMath ### ######################\"}],\"QueryOutOfRange()\":[{\"notice\":\"############ ### TWAP ### ############\"}],\"ReturnData(bytes)\":[{\"notice\":\"#################### ### DataProvider ### ####################\"}]},\"kind\":\"user\",\"methods\":{\"balanceOf(uint256,address)\":{\"notice\":\"Gets an account's balance of a sub-token.\"},\"baseToken()\":{\"notice\":\"Gets the base token.\"},\"constructor\":{\"notice\":\"Initializes the data provider.\"},\"factory()\":{\"notice\":\"Gets the factory which is used to deploy the linking contracts.\"},\"getCheckpoint(uint256)\":{\"notice\":\"Gets a specified checkpoint.\"},\"getPoolConfig()\":{\"notice\":\"Gets the pool's configuration parameters.\"},\"getPoolInfo()\":{\"notice\":\"Gets info about the pool's reserves and other state that is         important to evaluate potential trades.\"},\"getUncollectedGovernanceFees()\":{\"notice\":\"Gets info about the fees presently accrued by the pool\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval status of an operator for an account.\"},\"isSweepable(address)\":{\"notice\":\"Gets the sweepable status of a target.\"},\"linkerCodeHash()\":{\"notice\":\"Gets the code hash of the erc20 linker contract.\"},\"load(uint256[])\":{\"notice\":\"Allows plugin data libs to provide getters or other complex         logic instead of the main.\"},\"name(uint256)\":{\"notice\":\"Gets the name of a sub-token.\"},\"nonces(address)\":{\"notice\":\"Gets the permitForAll signature nonce for an account.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the approval status of an operator for an account.\"},\"pool()\":{\"notice\":\"Gets the 4626 pool.\"},\"query(uint256)\":{\"notice\":\"Returns the average price between the last recorded timestamp looking a user determined         time into the past\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of a sub-token.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of a sub-token.\"}},\"notice\":\"The data provider for ERC4626Hyperdrive instances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/instances/ERC4626DataProvider.sol\":\"ERC4626DataProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"contracts/src/HyperdriveDataProvider.sol\":{\"keccak256\":\"0x548a0d3b7b46f4e7f99745aa1b83ac1d264e6e82af61e6580a05335bd94bc39d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6505d7514910ff3a44932a42376f323f739204d6154bc4b997c60e5cbee050e5\",\"dweb:/ipfs/QmdKke5nXGZDxAcGDXFenJ6emxSUhE2QT8rdBZ8JhNpFaA\"]},\"contracts/src/HyperdriveStorage.sol\":{\"keccak256\":\"0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a\",\"dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY\"]},\"contracts/src/instances/ERC4626DataProvider.sol\":{\"keccak256\":\"0xff9052b6730f9f730426a45026a2bd0f0201b457c899f8faed0b4c69c6ee1985\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88f763a766bf86163d7bf417737a3980a1ee4dbd7959bbbf4c7d60e7b59c6c37\",\"dweb:/ipfs/QmdqVv7iUpopKYcXLo97JBC5fjXnYUGSb1wcBdYYQCYmW9\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672\",\"dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w\"]},\"contracts/src/interfaces/IERC4626.sol\":{\"keccak256\":\"0xaf48462596aa9c7544086c0a5e53adc7bf8f713662a5fb270ffb4e4db16e23cf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b2e5e6d94edba7e97dce8b5e061d40955d39fa586579d170f66cbecdbd2348dc\",\"dweb:/ipfs/QmeUkSbHaBmCeZnmup5RujvxRAyhw1u9vpRRpzeuU2wiia\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e\",\"dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993\",\"dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt\"]},\"contracts/src/interfaces/IHyperdriveWrite.sol\":{\"keccak256\":\"0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467\",\"dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0\",\"dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87\",\"dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939\",\"dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x\"]},\"contracts/src/interfaces/IMultiTokenWrite.sol\":{\"keccak256\":\"0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a\",\"dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806\",\"dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b\",\"dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0x9acd606f849bec2b31ee37bbee4c3f3df02aef24491f01c4a965bca21dde3c4e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7000734fef6247718a99ca8bc902e4452fbc8445f09969521ac7330256e64518\",\"dweb:/ipfs/QmSFp3AMhxcKexKPzLn6rJu9iG8qUCA41pNBAW7C4dhNaa\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5\",\"dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0xb8682a4823e01535b6bc73755f6304d0846c44526d882cefc0c3b04b807e2a04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://836744182376d0cd9721e15334c3f972d77564586220b8db7b63737342b410ef\",\"dweb:/ipfs/QmVxEHgnVkDTNggxbC83wMzvDmsQaUq1vTbFosShjzgAmr\"]},\"contracts/src/token/MultiTokenDataProvider.sol\":{\"keccak256\":\"0x1b2f98b9d6feaf0fc13ac4010dee2d2f49ecd33bf75d0c5be7e3318a6df2620f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4230f69efbb31e8194a78fb3ef5e2a69d349fe6f8b8aa4cf6b280484f3653cef\",\"dweb:/ipfs/QmScBP66WMXxXh28ScmU6SgSCWYhsRQHpZ755NyxTfCJoV\"]},\"contracts/src/token/MultiTokenStorage.sol\":{\"keccak256\":\"0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6\",\"dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IHyperdrive.PoolConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumTransactionAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "checkpointDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "governance",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                },
                {
                  "internalType": "struct IHyperdrive.Fees",
                  "name": "fees",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "curve",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flat",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "governance",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "oracleSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updateGap",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "_linkerCodeHash_",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "_factory_",
              "type": "address"
            },
            {
              "internalType": "contract IERC4626",
              "name": "_pool_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FixedPointMath_InvalidExponent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FixedPointMath_InvalidInput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCheckpointDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidFeeAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMinimumShareReserves"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPositionDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTradeSize"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NegativePresentValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "QueryOutOfRange"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ReturnData"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_checkpointId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCheckpoint",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "sharePrice",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "longExposure",
                  "type": "int128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketState",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.MarketState",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "shareReserves",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "bondReserves",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "shareAdjustment",
                  "type": "int128"
                },
                {
                  "internalType": "uint128",
                  "name": "longExposure",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "longsOutstanding",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "shortsOutstanding",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "longAverageMaturityTime",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "shortAverageMaturityTime",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "isInitialized",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isPaused",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolConfig",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.PoolConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumTransactionAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "checkpointDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "governance",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feeCollector",
                  "type": "address"
                },
                {
                  "internalType": "struct IHyperdrive.Fees",
                  "name": "fees",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "curve",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flat",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "governance",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "oracleSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updateGap",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolInfo",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.PoolInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lpTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageMaturityTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageMaturityTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalSharesReadyToWithdraw",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalSharesProceeds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lpSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longExposure",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUncollectedGovernanceFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawPool",
          "outputs": [
            {
              "internalType": "struct IHyperdrive.WithdrawPool",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "readyToWithdraw",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "proceeds",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSweepable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "linkerCodeHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_slots",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "load",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "perTokenApprovals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool",
          "outputs": [
            {
              "internalType": "contract IERC4626",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "period",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "query",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(uint256,address)": {
            "params": {
              "account": "The account.",
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The balance."
            }
          },
          "baseToken()": {
            "returns": {
              "_0": "The base token."
            }
          },
          "constructor": {
            "params": {
              "_factory_": "The factory which is used to deploy the linking contracts",
              "_linkerCodeHash_": "The hash of the erc20 linker contract deploy code",
              "_pool_": "The ERC4626 pool."
            }
          },
          "factory()": {
            "returns": {
              "_0": "The linking factory."
            }
          },
          "getCheckpoint(uint256)": {
            "params": {
              "_checkpointId": "The checkpoint ID."
            },
            "returns": {
              "_0": "The checkpoint."
            }
          },
          "getPoolConfig()": {
            "details": "These parameters are immutable, so this should only need to be      called once.",
            "returns": {
              "_0": "The PoolConfig struct."
            }
          },
          "getPoolInfo()": {
            "returns": {
              "_0": "The PoolInfo struct."
            }
          },
          "getUncollectedGovernanceFees()": {
            "returns": {
              "_0": "Governance fees denominated in shares yet to be collected"
            }
          },
          "isApprovedForAll(address,address)": {
            "params": {
              "account": "The account.",
              "operator": "The operator."
            },
            "returns": {
              "_0": "The approval status."
            }
          },
          "isSweepable(address)": {
            "params": {
              "_target": "The target address."
            }
          },
          "linkerCodeHash()": {
            "returns": {
              "_0": "The code hash."
            }
          },
          "load(uint256[])": {
            "params": {
              "_slots": "The storage slots the caller wants the data from"
            },
            "returns": {
              "_0": "A raw array of loaded data"
            }
          },
          "name(uint256)": {
            "params": {
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The name."
            }
          },
          "nonces(address)": {
            "params": {
              "account": "The account."
            },
            "returns": {
              "_0": "The signature nonce."
            }
          },
          "perTokenApprovals(uint256,address,address)": {
            "params": {
              "account": "The account.",
              "spender": "The spender.",
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The approval status."
            }
          },
          "pool()": {
            "returns": {
              "_0": "The 4626 pool."
            }
          },
          "query(uint256)": {
            "details": "Any integrations should assert the returned value is not equal to the QueryOutOfRange() selector",
            "params": {
              "period": "The gap in our time sample."
            },
            "returns": {
              "_0": "The average price in that time"
            }
          },
          "symbol(uint256)": {
            "params": {
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The symbol."
            }
          },
          "totalSupply(uint256)": {
            "params": {
              "tokenId": "The sub-token id."
            },
            "returns": {
              "_0": "The total supply."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(uint256,address)": {
            "notice": "Gets an account's balance of a sub-token."
          },
          "baseToken()": {
            "notice": "Gets the base token."
          },
          "constructor": {
            "notice": "Initializes the data provider."
          },
          "factory()": {
            "notice": "Gets the factory which is used to deploy the linking contracts."
          },
          "getCheckpoint(uint256)": {
            "notice": "Gets a specified checkpoint."
          },
          "getPoolConfig()": {
            "notice": "Gets the pool's configuration parameters."
          },
          "getPoolInfo()": {
            "notice": "Gets info about the pool's reserves and other state that is         important to evaluate potential trades."
          },
          "getUncollectedGovernanceFees()": {
            "notice": "Gets info about the fees presently accrued by the pool"
          },
          "isApprovedForAll(address,address)": {
            "notice": "Gets the approval status of an operator for an account."
          },
          "isSweepable(address)": {
            "notice": "Gets the sweepable status of a target."
          },
          "linkerCodeHash()": {
            "notice": "Gets the code hash of the erc20 linker contract."
          },
          "load(uint256[])": {
            "notice": "Allows plugin data libs to provide getters or other complex         logic instead of the main."
          },
          "name(uint256)": {
            "notice": "Gets the name of a sub-token."
          },
          "nonces(address)": {
            "notice": "Gets the permitForAll signature nonce for an account."
          },
          "perTokenApprovals(uint256,address,address)": {
            "notice": "Gets the approval status of an operator for an account."
          },
          "pool()": {
            "notice": "Gets the 4626 pool."
          },
          "query(uint256)": {
            "notice": "Returns the average price between the last recorded timestamp looking a user determined         time into the past"
          },
          "symbol(uint256)": {
            "notice": "Gets the symbol of a sub-token."
          },
          "totalSupply(uint256)": {
            "notice": "Gets the total supply of a sub-token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/solmate/src/",
        "yield-daddy/=lib/yield-daddy/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/instances/ERC4626DataProvider.sol": "ERC4626DataProvider"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/HyperdriveDataProvider.sol": {
        "keccak256": "0x548a0d3b7b46f4e7f99745aa1b83ac1d264e6e82af61e6580a05335bd94bc39d",
        "urls": [
          "bzz-raw://6505d7514910ff3a44932a42376f323f739204d6154bc4b997c60e5cbee050e5",
          "dweb:/ipfs/QmdKke5nXGZDxAcGDXFenJ6emxSUhE2QT8rdBZ8JhNpFaA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/HyperdriveStorage.sol": {
        "keccak256": "0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc",
        "urls": [
          "bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a",
          "dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/instances/ERC4626DataProvider.sol": {
        "keccak256": "0xff9052b6730f9f730426a45026a2bd0f0201b457c899f8faed0b4c69c6ee1985",
        "urls": [
          "bzz-raw://88f763a766bf86163d7bf417737a3980a1ee4dbd7959bbbf4c7d60e7b59c6c37",
          "dweb:/ipfs/QmdqVv7iUpopKYcXLo97JBC5fjXnYUGSb1wcBdYYQCYmW9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c",
        "urls": [
          "bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672",
          "dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w"
        ],
        "license": "MIT"
      },
      "contracts/src/interfaces/IERC4626.sol": {
        "keccak256": "0xaf48462596aa9c7544086c0a5e53adc7bf8f713662a5fb270ffb4e4db16e23cf",
        "urls": [
          "bzz-raw://b2e5e6d94edba7e97dce8b5e061d40955d39fa586579d170f66cbecdbd2348dc",
          "dweb:/ipfs/QmeUkSbHaBmCeZnmup5RujvxRAyhw1u9vpRRpzeuU2wiia"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5",
        "urls": [
          "bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e",
          "dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        "urls": [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveWrite.sol": {
        "keccak256": "0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8",
        "urls": [
          "bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467",
          "dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a",
        "urls": [
          "bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0",
          "dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc",
        "urls": [
          "bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87",
          "dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05",
        "urls": [
          "bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939",
          "dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenWrite.sol": {
        "keccak256": "0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8",
        "urls": [
          "bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a",
          "dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/AssetId.sol": {
        "keccak256": "0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384",
        "urls": [
          "bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806",
          "dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/FixedPointMath.sol": {
        "keccak256": "0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd",
        "urls": [
          "bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b",
          "dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/HyperdriveMath.sol": {
        "keccak256": "0x9acd606f849bec2b31ee37bbee4c3f3df02aef24491f01c4a965bca21dde3c4e",
        "urls": [
          "bzz-raw://7000734fef6247718a99ca8bc902e4452fbc8445f09969521ac7330256e64518",
          "dweb:/ipfs/QmSFp3AMhxcKexKPzLn6rJu9iG8qUCA41pNBAW7C4dhNaa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/SafeCast.sol": {
        "keccak256": "0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f",
        "urls": [
          "bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5",
          "dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/YieldSpaceMath.sol": {
        "keccak256": "0xb8682a4823e01535b6bc73755f6304d0846c44526d882cefc0c3b04b807e2a04",
        "urls": [
          "bzz-raw://836744182376d0cd9721e15334c3f972d77564586220b8db7b63737342b410ef",
          "dweb:/ipfs/QmVxEHgnVkDTNggxbC83wMzvDmsQaUq1vTbFosShjzgAmr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/MultiTokenDataProvider.sol": {
        "keccak256": "0x1b2f98b9d6feaf0fc13ac4010dee2d2f49ecd33bf75d0c5be7e3318a6df2620f",
        "urls": [
          "bzz-raw://4230f69efbb31e8194a78fb3ef5e2a69d349fe6f8b8aa4cf6b280484f3653cef",
          "dweb:/ipfs/QmScBP66WMXxXh28ScmU6SgSCWYhsRQHpZ755NyxTfCJoV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/MultiTokenStorage.sol": {
        "keccak256": "0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8",
        "urls": [
          "bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6",
          "dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        "urls": [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/instances/ERC4626DataProvider.sol",
    "id": 6017,
    "exportedSymbols": {
      "ERC4626DataProvider": [
        6016
      ],
      "FixedPointMath": [
        8453
      ],
      "HyperdriveDataProvider": [
        1778
      ],
      "IERC4626": [
        6683
      ],
      "IHyperdrive": [
        7070
      ],
      "MultiTokenDataProvider": [
        13102
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2459:12",
    "nodes": [
      {
        "id": 5914,
        "nodeType": "PragmaDirective",
        "src": "39:23:12",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 5916,
        "nodeType": "ImportDirective",
        "src": "64:71:12",
        "nodes": [],
        "absolutePath": "contracts/src/HyperdriveDataProvider.sol",
        "file": "../HyperdriveDataProvider.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6017,
        "sourceUnit": 1779,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5915,
              "name": "HyperdriveDataProvider",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1778,
              "src": "73:22:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5918,
        "nodeType": "ImportDirective",
        "src": "136:54:12",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IERC4626.sol",
        "file": "../interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6017,
        "sourceUnit": 6684,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5917,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6683,
              "src": "145:8:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5920,
        "nodeType": "ImportDirective",
        "src": "191:60:12",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IHyperdrive.sol",
        "file": "../interfaces/IHyperdrive.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6017,
        "sourceUnit": 7071,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5919,
              "name": "IHyperdrive",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7070,
              "src": "200:11:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5922,
        "nodeType": "ImportDirective",
        "src": "252:65:12",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/FixedPointMath.sol",
        "file": "../libraries/FixedPointMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6017,
        "sourceUnit": 8454,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5921,
              "name": "FixedPointMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8453,
              "src": "261:14:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5924,
        "nodeType": "ImportDirective",
        "src": "318:77:12",
        "nodes": [],
        "absolutePath": "contracts/src/token/MultiTokenDataProvider.sol",
        "file": "../token/MultiTokenDataProvider.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6017,
        "sourceUnit": 13103,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5923,
              "name": "MultiTokenDataProvider",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13102,
              "src": "327:22:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6016,
        "nodeType": "ContractDefinition",
        "src": "732:1765:12",
        "nodes": [
          {
            "id": 5932,
            "nodeType": "UsingForDirective",
            "src": "817:33:12",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5930,
              "name": "FixedPointMath",
              "nameLocations": [
                "823:14:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8453,
              "src": "823:14:12"
            },
            "typeName": {
              "id": 5931,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "842:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5935,
            "nodeType": "VariableDeclaration",
            "src": "881:33:12",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_pool",
            "nameLocation": "909:5:12",
            "scope": 6016,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC4626_$6683",
              "typeString": "contract IERC4626"
            },
            "typeName": {
              "id": 5934,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5933,
                "name": "IERC4626",
                "nameLocations": [
                  "881:8:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6683,
                "src": "881:8:12"
              },
              "referencedDeclaration": 6683,
              "src": "881:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC4626_$6683",
                "typeString": "contract IERC4626"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 5940,
            "nodeType": "VariableDeclaration",
            "src": "1056:62:12",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5936,
              "nodeType": "StructuredDocumentation",
              "src": "921:130:12",
              "text": "@dev A mapping from addresses to their status as a sweep target. This\n      mapping does not change after construction."
            },
            "mutability": "mutable",
            "name": "_isSweepable",
            "nameLocation": "1106:12:12",
            "scope": 6016,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5939,
              "keyName": "target",
              "keyNameLocation": "1072:6:12",
              "keyType": {
                "id": 5937,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1064:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1056:40:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "canSweep",
              "valueNameLocation": "1087:8:12",
              "valueType": {
                "id": 5938,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1082:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 5966,
            "nodeType": "FunctionDefinition",
            "src": "1377:286:12",
            "nodes": [],
            "body": {
              "id": 5965,
              "nodeType": "Block",
              "src": "1632:31:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5961,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5935,
                      "src": "1642:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC4626_$6683",
                        "typeString": "contract IERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5962,
                      "name": "_pool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5951,
                      "src": "1650:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC4626_$6683",
                        "typeString": "contract IERC4626"
                      }
                    },
                    "src": "1642:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$6683",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "id": 5964,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:14:12"
                }
              ]
            },
            "documentation": {
              "id": 5941,
              "nodeType": "StructuredDocumentation",
              "src": "1125:247:12",
              "text": "@notice Initializes the data provider.\n @param _linkerCodeHash_ The hash of the erc20 linker contract deploy code\n @param _factory_ The factory which is used to deploy the linking contracts\n @param _pool_ The ERC4626 pool."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5954,
                    "name": "_config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5944,
                    "src": "1559:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolConfig_$6891_memory_ptr",
                      "typeString": "struct IHyperdrive.PoolConfig memory"
                    }
                  }
                ],
                "id": 5955,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5953,
                  "name": "HyperdriveDataProvider",
                  "nameLocations": [
                    "1536:22:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1778,
                  "src": "1536:22:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1536:31:12"
              },
              {
                "arguments": [
                  {
                    "id": 5957,
                    "name": "_linkerCodeHash_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5946,
                    "src": "1599:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 5958,
                    "name": "_factory_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5948,
                    "src": "1617:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5959,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5956,
                  "name": "MultiTokenDataProvider",
                  "nameLocations": [
                    "1576:22:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13102,
                  "src": "1576:22:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1576:51:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5944,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "1428:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "1398:37:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolConfig_$6891_memory_ptr",
                    "typeString": "struct IHyperdrive.PoolConfig"
                  },
                  "typeName": {
                    "id": 5943,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5942,
                      "name": "IHyperdrive.PoolConfig",
                      "nameLocations": [
                        "1398:11:12",
                        "1410:10:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6891,
                      "src": "1398:22:12"
                    },
                    "referencedDeclaration": 6891,
                    "src": "1398:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolConfig_$6891_storage_ptr",
                      "typeString": "struct IHyperdrive.PoolConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5946,
                  "mutability": "mutable",
                  "name": "_linkerCodeHash_",
                  "nameLocation": "1453:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "1445:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5945,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5948,
                  "mutability": "mutable",
                  "name": "_factory_",
                  "nameLocation": "1487:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "1479:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5951,
                  "mutability": "mutable",
                  "name": "_pool_",
                  "nameLocation": "1515:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "1506:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$6683",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 5950,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5949,
                      "name": "IERC4626",
                      "nameLocations": [
                        "1506:8:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6683,
                      "src": "1506:8:12"
                    },
                    "referencedDeclaration": 6683,
                    "src": "1506:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$6683",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:139:12"
            },
            "returnParameters": {
              "id": 5960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:0:12"
            },
            "scope": 6016,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5982,
            "nodeType": "FunctionDefinition",
            "src": "1891:188:12",
            "nodes": [],
            "body": {
              "id": 5981,
              "nodeType": "Block",
              "src": "2005:74:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5973,
                      "name": "sharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5971,
                      "src": "2015:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 5976,
                            "name": "FixedPointMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8453,
                            "src": "2050:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPointMath_$8453_$",
                              "typeString": "type(library FixedPointMath)"
                            }
                          },
                          "id": 5977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2065:6:12",
                          "memberName": "ONE_18",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7712,
                          "src": "2050:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 5974,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5935,
                          "src": "2028:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$6683",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "id": 5975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2034:15:12",
                        "memberName": "convertToAssets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6618,
                        "src": "2028:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 5978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2028:44:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2015:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5980,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:57:12"
                }
              ]
            },
            "baseFunctions": [
              1359
            ],
            "documentation": {
              "id": 5967,
              "nodeType": "StructuredDocumentation",
              "src": "1695:191:12",
              "text": "@notice Loads the share price from the yield source.\n @return sharePrice The current share price.\n @dev must remain consistent with the impl inside of the HyperdriveInstance"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pricePerShare",
            "nameLocation": "1900:14:12",
            "overrides": {
              "id": 5969,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1955:8:12"
            },
            "parameters": {
              "id": 5968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1914:2:12"
            },
            "returnParameters": {
              "id": 5972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5971,
                  "mutability": "mutable",
                  "name": "sharePrice",
                  "nameLocation": "1989:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 5982,
                  "src": "1981:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:20:12"
            },
            "scope": 6016,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5997,
            "nodeType": "FunctionDefinition",
            "src": "2173:92:12",
            "nodes": [],
            "body": {
              "id": 5996,
              "nodeType": "Block",
              "src": "2222:43:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5992,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5935,
                            "src": "2251:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$6683",
                              "typeString": "contract IERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC4626_$6683",
                              "typeString": "contract IERC4626"
                            }
                          ],
                          "expression": {
                            "id": 5990,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2240:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2244:6:12",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2240:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2240:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5989,
                      "name": "_revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13101,
                      "src": "2232:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) pure"
                      }
                    },
                    "id": 5994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5995,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:26:12"
                }
              ]
            },
            "documentation": {
              "id": 5983,
              "nodeType": "StructuredDocumentation",
              "src": "2106:62:12",
              "text": "@notice Gets the 4626 pool.\n @return The 4626 pool."
            },
            "functionSelector": "16f0115b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pool",
            "nameLocation": "2182:4:12",
            "parameters": {
              "id": 5984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2186:2:12"
            },
            "returnParameters": {
              "id": 5988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5997,
                  "src": "2212:8:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$6683",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 5986,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5985,
                      "name": "IERC4626",
                      "nameLocations": [
                        "2212:8:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6683,
                      "src": "2212:8:12"
                    },
                    "referencedDeclaration": 6683,
                    "src": "2212:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$6683",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2211:10:12"
            },
            "scope": 6016,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6015,
            "nodeType": "FunctionDefinition",
            "src": "2369:126:12",
            "nodes": [],
            "body": {
              "id": 6014,
              "nodeType": "Block",
              "src": "2436:59:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 6008,
                              "name": "_isSweepable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5940,
                              "src": "2465:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 6010,
                            "indexExpression": {
                              "id": 6009,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6000,
                              "src": "2478:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2465:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 6006,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2454:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2458:6:12",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2454:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2454:33:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6005,
                      "name": "_revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13101,
                      "src": "2446:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) pure"
                      }
                    },
                    "id": 6012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6013,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:42:12"
                }
              ]
            },
            "documentation": {
              "id": 5998,
              "nodeType": "StructuredDocumentation",
              "src": "2271:93:12",
              "text": "@notice Gets the sweepable status of a target.\n @param _target The target address."
            },
            "functionSelector": "cc962f8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSweepable",
            "nameLocation": "2378:11:12",
            "parameters": {
              "id": 6001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6000,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2398:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 6015,
                  "src": "2390:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:17:12"
            },
            "returnParameters": {
              "id": 6004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6015,
                  "src": "2430:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6002,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:6:12"
            },
            "scope": 6016,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5926,
              "name": "MultiTokenDataProvider",
              "nameLocations": [
                "764:22:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13102,
              "src": "764:22:12"
            },
            "id": 5927,
            "nodeType": "InheritanceSpecifier",
            "src": "764:22:12"
          },
          {
            "baseName": {
              "id": 5928,
              "name": "HyperdriveDataProvider",
              "nameLocations": [
                "788:22:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1778,
              "src": "788:22:12"
            },
            "id": 5929,
            "nodeType": "InheritanceSpecifier",
            "src": "788:22:12"
          }
        ],
        "canonicalName": "ERC4626DataProvider",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5925,
          "nodeType": "StructuredDocumentation",
          "src": "397:335:12",
          "text": "@author DELV\n @title ERC4626DataProvider\n @notice The data provider for ERC4626Hyperdrive instances.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6016,
          1778,
          13102,
          7512,
          4901,
          13163,
          62862
        ],
        "name": "ERC4626DataProvider",
        "nameLocation": "741:19:12",
        "scope": 6017,
        "usedErrors": [
          6955,
          6961,
          6963,
          6967,
          6971,
          7000,
          7005,
          7055,
          7057,
          7064
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 12
}