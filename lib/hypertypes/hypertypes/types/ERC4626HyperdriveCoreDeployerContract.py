"""A web3.py Contract class for the ERC4626HyperdriveCoreDeployer contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain"""

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overriden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

from __future__ import annotations

from typing import Any, Type, cast

from eth_account.signers.local import LocalAccount
from eth_typing import ChecksumAddress, HexStr
from hexbytes import HexBytes
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import Contract, ContractConstructor, ContractFunction, ContractFunctions
from web3.exceptions import FallbackNotFound
from web3.types import ABI, BlockIdentifier, CallOverride, TxParams

from .ERC4626HyperdriveCoreDeployerTypes import Fees, PoolConfig
from .utilities import dataclass_to_tuple, rename_returned_types

structs = {
    "Fees": Fees,
    "PoolConfig": PoolConfig,
}


class ERC4626HyperdriveCoreDeployerDeployContractFunction(ContractFunction):
    """ContractFunction for the deploy method."""

    def __call__(self, config: PoolConfig, extraData: bytes, target0: str, target1: str, target2: str, target3: str) -> ERC4626HyperdriveCoreDeployerDeployContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(config),
            dataclass_to_tuple(extraData),
            dataclass_to_tuple(target0),
            dataclass_to_tuple(target1),
            dataclass_to_tuple(target2),
            dataclass_to_tuple(target3),
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: CallOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(transaction, block_identifier, state_override, ccip_read_enabled)
        return cast(str, rename_returned_types(structs, return_types, raw_values))


class ERC4626HyperdriveCoreDeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the ERC4626HyperdriveCoreDeployer contract."""

    deploy: ERC4626HyperdriveCoreDeployerDeployContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deploy = ERC4626HyperdriveCoreDeployerDeployContractFunction.factory(
            "deploy",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            function_identifier="deploy",
        )


erc4626hyperdrivecoredeployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deploy",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {"name": "baseToken", "type": "address", "internalType": "contract IERC20"},
                        {"name": "linkerFactory", "type": "address", "internalType": "address"},
                        {"name": "linkerCodeHash", "type": "bytes32", "internalType": "bytes32"},
                        {"name": "initialSharePrice", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumShareReserves", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumTransactionAmount", "type": "uint256", "internalType": "uint256"},
                        {"name": "positionDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "checkpointDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "timeStretch", "type": "uint256", "internalType": "uint256"},
                        {"name": "governance", "type": "address", "internalType": "address"},
                        {"name": "feeCollector", "type": "address", "internalType": "address"},
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {"name": "curve", "type": "uint256", "internalType": "uint256"},
                                {"name": "flat", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceLP", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceZombie", "type": "uint256", "internalType": "uint256"},
                            ],
                        },
                    ],
                },
                {"name": "_extraData", "type": "bytes", "internalType": "bytes"},
                {"name": "target0", "type": "address", "internalType": "address"},
                {"name": "target1", "type": "address", "internalType": "address"},
                {"name": "target2", "type": "address", "internalType": "address"},
                {"name": "target3", "type": "address", "internalType": "address"},
            ],
            "outputs": [{"name": "", "type": "address", "internalType": "address"}],
            "stateMutability": "nonpayable",
        }
    ],
)
# pylint: disable=line-too-long
erc4626hyperdrivecoredeployer_bytecode = HexStr(
    "0x608060405234801561001057600080fd5b50611d00806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80633e2505431462000033575b600080fd5b6200004a620000443660046200024b565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600080868060200190518101906200007f9190620003a4565b90508786868686856040516200009590620000d0565b620000a696959493929190620003cb565b604051809103906000f080158015620000c3573d6000803e3d6000fd5b5098975050505050505050565b6117ed80620004de83390190565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156200011b576200011b620000de565b60405290565b6001600160a01b03811681146200013757600080fd5b50565b8035620001478162000121565b919050565b6000608082840312156200015f57600080fd5b6040516080810181811067ffffffffffffffff82111715620001855762000185620000de565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112620001c857600080fd5b813567ffffffffffffffff80821115620001e657620001e6620000de565b604051601f8301601f19908116603f01168101908282118183101715620002115762000211620000de565b816040528381528660208588010111156200022b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000808688036102808112156200026757600080fd5b6101e0808212156200027857600080fd5b62000282620000f4565b91506200028f896200013a565b82526200029f60208a016200013a565b602083015260408901356040830152606089013560608301526080890135608083015260a089013560a083015260c089013560c083015260e089013560e0830152610100808a01358184015250610120620002fc818b016200013a565b90830152610140620003108a82016200013a565b90830152610160620003258b8b83016200014c565b9083015290965087013567ffffffffffffffff8111156200034557600080fd5b6200035389828a01620001b6565b9550506200036561020088016200013a565b93506200037661022088016200013a565b92506200038761024088016200013a565b91506200039861026088016200013a565b90509295509295509295565b600060208284031215620003b757600080fd5b8151620003c48162000121565b9392505050565b86516001600160a01b0316815261028081016020880151620003f860208401826001600160a01b03169052565b5060408801516040830152606088015160608301526080880151608083015260a088015160a083015260c088015160c083015260e088015160e0830152610100808901518184015250610120808901516200045d828501826001600160a01b03169052565b5050610140888101516001600160a01b039081169184019190915261016098890151805199840199909952602089015161018084015260408901516101a08401526060909801516101c08301529587166101e08201529386166102008501529185166102208401528416610240830152909216610260909201919091529056fe61030060405260016000553480156200001757600080fd5b50604051620017ed380380620017ed8339810160408190526200003a9162000595565b8086868686868480600001516001600160a01b03166080816001600160a01b0316815250506103e88160800151101562000087576040516349db44f560e01b815260040160405180910390fd5b60808101516101a05260a08101516101c05260e0810151600003620000bf57604051635428734d60e01b815260040160405180910390fd5b60e08101805160a0525160c08201511080620000ef57508060e001518160c00151620000ec9190620006d6565b15155b156200010e5760405163253fffcf60e11b815260040160405180910390fd5b60c081810151905261010081015160e052606081015161018052610120810151600880546001600160a01b0319166001600160a01b03928316179055610140820151166101e05261016081015151670de0b6b3a76400001080620001825750670de0b6b3a764000081610160015160200151115b806200019e5750670de0b6b3a764000081610160015160400151115b15620001bd576040516322f72cc360e11b815260040160405180910390fd5b610160818101805151610100528051602090810151610120528151604090810151610140529151606090810151909352808401516001600160a01b039081166102005293820151610220528784166102405286841661026052858416610280529284166102a0528051808201825260018152603160f81b9084015280517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd938101939093527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc690830152469082015230608082015260a00160408051601f1981840301815291905280516020909101206102c0525050506001600160a01b039092166102e05250620002d09050620003bd565b866060015114620002f4576040516355f2a42f60e01b815260040160405180910390fd5b6102e0516001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000336573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035c9190620006f9565b6001600160a01b031686600001516001600160a01b0316146200039257604051630722152560e11b815260040160405180910390fd5b6102e0518651620003b1916001600160a01b039091169060016200043b565b5050505050506200073a565b6102e0516040516303d1689d60e11b8152670de0b6b3a764000060048201526000916001600160a01b0316906307a2d13a90602401602060405180830381865afa15801562000410573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000436919062000720565b905090565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080620004b75760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b60405161018081016001600160401b0381118282101715620004ef57634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146200050b57600080fd5b50565b80516200051b81620004f5565b919050565b6000608082840312156200053357600080fd5b604051608081016001600160401b03811182821017156200056457634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600080600080600080868803610280811215620005b157600080fd5b6101e080821215620005c257600080fd5b620005cc620004bd565b9150620005d9896200050e565b8252620005e960208a016200050e565b602083015260408901516040830152606089015160608301526080890151608083015260a089015160a083015260c089015160c083015260e089015160e0830152610100808a0151818401525061012062000646818b016200050e565b908301526101406200065a8a82016200050e565b908301526101606200066f8b8b830162000520565b818401525081975062000684818a016200050e565b965050506200069761020088016200050e565b9350620006a861022088016200050e565b9250620006b961024088016200050e565b9150620006ca61026088016200050e565b90509295509295509295565b600082620006f457634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156200070c57600080fd5b81516200071981620004f5565b9392505050565b6000602082840312156200073357600080fd5b5051919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e051610f86620008676000396000505060008181610423015261078401526000818161055f015281816106c0015261098f015260008181610518015261092b0152600081816105b30152818161062a0152818161075301526108d00152600081816101b301528181610375015281816105fa0152818161065c0152818161068e015281816106f40152818161072301528181610815015281816108f9015261095e01526000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050610f866000f3fe60806040526004361061019c5760003560e01c80639032c726116100ec578063cbc134341161008a578063ded0623111610064578063ded06231146103af578063e44808bc14610581578063eac3e799146105a1578063ed64bab2146105d55761019c565b8063cbc13434146102e9578063d899e1121461054d578063dbbe80701461053a5761019c565b8063a22cb465116100c6578063a22cb46514610480578063a6e8a85914610506578063ab033ea9146102ac578063cba2e58d1461053a5761019c565b80639032c726146104b35780639aa68462146104d35780639cd241af146104e65761019c565b806329b23fc1116101595780633e691db9116101335780633e691db9146104455780634ed2d6ac146104655780637180c8ca1461048057806377d05ff4146104a05761019c565b806329b23fc1146103af57806330adf81f146103dd5780633644e515146104115761019c565b806301681a62146102ac57806302329a29146102ce578063074a6de9146102e957806317fad7fc146103235780631c0f12b61461034357806321b57d5314610363575b3480156101a857600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685856040516101eb9291906109cb565b600060405180830381855af49150503d8060008114610226576040519150601f19603f3d011682016040523d82523d6000602084013e61022b565b606091505b5091509150811561024f57604051638bb0a34b60e01b815260040160405180910390fd5b600061025a826109db565b90506001600160e01b03198116636e64089360e11b1461027c57815160208301fd5b81516003198101600484019081529261029d91810160200190602401610a4c565b80519650602001945050505050f35b3480156102b857600080fd5b506102cc6102c7366004610b11565b6105f5565b005b3480156102da57600080fd5b506102cc6102c7366004610b4a565b3480156102f557600080fd5b50610309610304366004610b77565b610622565b604080519283526020830191909152015b60405180910390f35b34801561032f57600080fd5b506102cc61033e366004610c13565b610657565b34801561034f57600080fd5b506102cc61035e366004610ca8565b610689565b34801561036f57600080fd5b506103977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161031a565b3480156103bb57600080fd5b506103cf6103ca366004610cf0565b6106b9565b60405190815260200161031a565b3480156103e957600080fd5b506103cf7f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561041d57600080fd5b506103cf7f000000000000000000000000000000000000000000000000000000000000000081565b34801561045157600080fd5b506103cf610460366004610d4a565b6106ed565b34801561047157600080fd5b506102cc61035e366004610d87565b34801561048c57600080fd5b506102cc61049b366004610dd1565b61071e565b6103cf6104ae366004610b77565b61074c565b3480156104bf57600080fd5b506102cc6104ce366004610e06565b61077f565b6103cf6104e1366004610cf0565b6108c9565b3480156104f257600080fd5b506102cc610501366004610e84565b6108f4565b34801561051257600080fd5b506103977f000000000000000000000000000000000000000000000000000000000000000081565b610309610548366004610cf0565b610923565b34801561055957600080fd5b506103977f000000000000000000000000000000000000000000000000000000000000000081565b34801561058d57600080fd5b506102cc61059c366004610ebc565b610959565b3480156105ad57600080fd5b506103977f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e157600080fd5b506102cc6105f0366004610f1b565b61098a565b61061e7f00000000000000000000000000000000000000000000000000000000000000006109af565b5050565b60008061064e7f00000000000000000000000000000000000000000000000000000000000000006109af565b50935093915050565b6106807f00000000000000000000000000000000000000000000000000000000000000006109af565b50505050505050565b6106b27f00000000000000000000000000000000000000000000000000000000000000006109af565b5050505050565b60006106e47f00000000000000000000000000000000000000000000000000000000000000006109af565b50949350505050565b60006107187f00000000000000000000000000000000000000000000000000000000000000006109af565b50919050565b6107477f00000000000000000000000000000000000000000000000000000000000000006109af565b505050565b60006107777f00000000000000000000000000000000000000000000000000000000000000006109af565b509392505050565b6040517f000000000000000000000000000000000000000000000000000000000000000060248201527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b038881166064830152878116608483015286151560a483015260c4820186905260ff851660e48301526101048201849052610124820183905260009182917f000000000000000000000000000000000000000000000000000000000000000016906101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b1790525161086f9190610f34565b600060405180830381855af49150503d80600081146108aa576040519150601f19603f3d011682016040523d82523d6000602084013e6108af565b606091505b5091509150816108c157805160208201fd5b805160208201f35b60006106e47f00000000000000000000000000000000000000000000000000000000000000006109af565b61091d7f00000000000000000000000000000000000000000000000000000000000000006109af565b50505050565b60008061094f7f00000000000000000000000000000000000000000000000000000000000000006109af565b5094509492505050565b6109827f00000000000000000000000000000000000000000000000000000000000000006109af565b505050505050565b61061e7f00000000000000000000000000000000000000000000000000000000000000005b6060600080836001600160a01b031660003660405161086f9291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610a0a5780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610a43578181015183820152602001610a2b565b50506000910152565b600060208284031215610a5e57600080fd5b815167ffffffffffffffff80821115610a7657600080fd5b818401915084601f830112610a8a57600080fd5b815181811115610a9c57610a9c610a12565b604051601f8201601f19908116603f01168101908382118183101715610ac457610ac4610a12565b81604052828152876020848701011115610add57600080fd5b610aee836020830160208801610a28565b979650505050505050565b6001600160a01b0381168114610b0e57600080fd5b50565b600060208284031215610b2357600080fd5b8135610b2e81610af9565b9392505050565b80358015158114610b4557600080fd5b919050565b600060208284031215610b5c57600080fd5b610b2e82610b35565b60006060828403121561071857600080fd5b600080600060608486031215610b8c57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610bb157600080fd5b610bbd86828701610b65565b9150509250925092565b60008083601f840112610bd957600080fd5b50813567ffffffffffffffff811115610bf157600080fd5b6020830191508360208260051b8501011115610c0c57600080fd5b9250929050565b60008060008060008060808789031215610c2c57600080fd5b8635610c3781610af9565b95506020870135610c4781610af9565b9450604087013567ffffffffffffffff80821115610c6457600080fd5b610c708a838b01610bc7565b90965094506060890135915080821115610c8957600080fd5b50610c9689828a01610bc7565b979a9699509497509295939492505050565b60008060008060808587031215610cbe57600080fd5b843593506020850135610cd081610af9565b92506040850135610ce081610af9565b9396929550929360600135925050565b60008060008060808587031215610d0657600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610d3257600080fd5b610d3e87828801610b65565b91505092959194509250565b600060208284031215610d5c57600080fd5b813567ffffffffffffffff811115610d7357600080fd5b610d7f84828501610b65565b949350505050565b60008060008060808587031215610d9d57600080fd5b843593506020850135610daf81610af9565b9250604085013591506060850135610dc681610af9565b939692955090935050565b60008060408385031215610de457600080fd5b8235610def81610af9565b9150610dfd60208401610b35565b90509250929050565b600080600080600080600060e0888a031215610e2157600080fd5b8735610e2c81610af9565b96506020880135610e3c81610af9565b9550610e4a60408901610b35565b945060608801359350608088013560ff81168114610e6757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080600060608486031215610e9957600080fd5b833592506020840135610eab81610af9565b929592945050506040919091013590565b600080600080600060a08688031215610ed457600080fd5b853594506020860135610ee681610af9565b93506040860135610ef681610af9565b9250606086013591506080860135610f0d81610af9565b809150509295509295909350565b600060208284031215610f2d57600080fd5b5035919050565b60008251610f46818460208701610a28565b919091019291505056fea26469706673582212200012628f8f9e1a34b4dc84beafa3f9fe7762a72a4a40152ec60c151d4a85482b64736f6c63430008130033a2646970667358221220311c5b94e72ac3dc7e40ef94eb922b6d79e20ee0247af481322a93c6d507aebd64736f6c63430008130033"
)


class ERC4626HyperdriveCoreDeployerContract(Contract):
    """A web3.py Contract class for the ERC4626HyperdriveCoreDeployer contract."""

    abi: ABI = erc4626hyperdrivecoredeployer_abi
    bytecode: bytes = HexBytes(erc4626hyperdrivecoredeployer_bytecode)

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        try:
            # Initialize parent Contract class
            super().__init__(address=address)
            self.functions = ERC4626HyperdriveCoreDeployerContractFunctions(erc4626hyperdrivecoredeployer_abi, self.w3, address)  # type: ignore

        except FallbackNotFound:
            print("Fallback function not found. Continuing...")

    functions: ERC4626HyperdriveCoreDeployerContractFunctions

    @classmethod
    def constructor(cls) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """

        return super().constructor()

    @classmethod
    def deploy(cls, w3: Web3, account: LocalAccount | ChecksumAddress) -> Self:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor()

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address)
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(cls, w3: Web3, class_name: str | None = None, **kwargs: Any) -> Type[Self]:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = ERC4626HyperdriveCoreDeployerContractFunctions(erc4626hyperdrivecoredeployer_abi, w3, None)

        return contract
