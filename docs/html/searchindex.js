Search.setIndex({"docnames": ["_autosummary/elfpy", "autoapi/elfpy/agent/index", "autoapi/elfpy/index", "autoapi/elfpy/markets/index", "autoapi/elfpy/policies/index", "autoapi/elfpy/policies/init_lp/index", "autoapi/elfpy/policies/lp_and_withdraw/index", "autoapi/elfpy/policies/no_action/index", "autoapi/elfpy/policies/single_long/index", "autoapi/elfpy/policies/single_lp/index", "autoapi/elfpy/policies/single_short/index", "autoapi/elfpy/pricing_models/base/index", "autoapi/elfpy/pricing_models/hyperdrive/index", "autoapi/elfpy/pricing_models/index", "autoapi/elfpy/pricing_models/yieldspace/index", "autoapi/elfpy/simulators/index", "autoapi/elfpy/types/index", "autoapi/elfpy/utils/config/index", "autoapi/elfpy/utils/index", "autoapi/elfpy/utils/outputs/index", "autoapi/elfpy/utils/parse_config/index", "autoapi/elfpy/utils/post_processing/index", "autoapi/elfpy/utils/price/index", "autoapi/elfpy/utils/sim_utils/index", "autoapi/elfpy/utils/time/index", "autoapi/elfpy/wallet/index", "autoapi/index", "index", "installation"], "filenames": ["_autosummary/elfpy.rst", "autoapi/elfpy/agent/index.rst", "autoapi/elfpy/index.rst", "autoapi/elfpy/markets/index.rst", "autoapi/elfpy/policies/index.rst", "autoapi/elfpy/policies/init_lp/index.rst", "autoapi/elfpy/policies/lp_and_withdraw/index.rst", "autoapi/elfpy/policies/no_action/index.rst", "autoapi/elfpy/policies/single_long/index.rst", "autoapi/elfpy/policies/single_lp/index.rst", "autoapi/elfpy/policies/single_short/index.rst", "autoapi/elfpy/pricing_models/base/index.rst", "autoapi/elfpy/pricing_models/hyperdrive/index.rst", "autoapi/elfpy/pricing_models/index.rst", "autoapi/elfpy/pricing_models/yieldspace/index.rst", "autoapi/elfpy/simulators/index.rst", "autoapi/elfpy/types/index.rst", "autoapi/elfpy/utils/config/index.rst", "autoapi/elfpy/utils/index.rst", "autoapi/elfpy/utils/outputs/index.rst", "autoapi/elfpy/utils/parse_config/index.rst", "autoapi/elfpy/utils/post_processing/index.rst", "autoapi/elfpy/utils/price/index.rst", "autoapi/elfpy/utils/sim_utils/index.rst", "autoapi/elfpy/utils/time/index.rst", "autoapi/elfpy/wallet/index.rst", "autoapi/index.rst", "index.rst", "installation.rst"], "titles": ["elfpy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.agent</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.markets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.policies</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.policies.init_lp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.policies.lp_and_withdraw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.policies.no_action</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.policies.single_long</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.policies.single_lp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.policies.single_short</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.hyperdrive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.yieldspace</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.simulators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.outputs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.parse_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.post_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.price</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.sim_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.wallet</span></code>", "API Reference", "Welcome to elfpy\u2019s documentation!", "Quick Install"], "terms": {"packag": 0, "implement": [1, 5, 6, 7, 9, 10, 23, 25], "abstract": [1, 11, 25], "control": [1, 25], "behavior": [1, 19, 25], "wallet_address": [1, 3, 5, 6, 7, 8, 9, 10, 16], "int": [1, 3, 7, 15, 16, 17, 19, 20, 24, 25], "budget": [1, 5, 6, 7, 8, 9, 10], "float": [1, 3, 7, 11, 12, 14, 15, 16, 17, 22, 23, 24, 25], "conduct": 1, "trade": [1, 3, 7, 11, 12, 15, 16, 19, 21, 23], "market": [1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 23, 24, 26, 27], "ha": [1, 3, 5, 6, 8, 9, 10, 19, 24, 25], "i": [1, 3, 5, 7, 11, 12, 14, 15, 17, 19, 21, 23, 25], "dict": [1, 16, 17, 20, 23, 25], "kei": [1, 15, 16, 20, 21, 23], "date": 1, "valu": [1, 2, 3, 11, 15, 16, 17, 23, 24], "an": [1, 3, 7, 12, 14, 16, 19, 20, 23, 25], "how": [1, 3, 11, 14, 23], "mani": [1, 11, 14], "token": [1, 3, 11, 12, 14, 16, 19, 23, 24, 25], "thei": [1, 3], "have": [1, 3, 15, 19, 23], "object": [1, 15, 16, 17, 19, 20, 23], "thi": [1, 3, 11, 12, 14, 15, 16, 19, 23, 25, 26], "type": [1, 2, 3, 7, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 27], "rng": [1, 15, 17], "random": [1, 15, 16, 17, 23], "number": [1, 3, 15, 17, 19, 24], "gener": [1, 15, 17, 26], "us": [1, 3, 5, 11, 12, 14, 15, 16, 17, 23, 24], "variou": 1, "simul": [1, 2, 3, 11, 16, 17, 19, 20, 21, 23, 24, 26, 27], "function": [1, 3, 11, 15], "numpi": [1, 15, 17], "_gener": [1, 15], "id": [1, 15], "identifi": [1, 11, 12, 14], "specif": [1, 3, 15, 16, 17], "amount": [1, 3, 5, 8, 11, 12, 14, 16, 23, 24, 25], "asset": [1, 11, 12, 14, 19, 22, 25], "avail": 1, "spend": 1, "last_update_spend": 1, "time": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 22, 23, 26, 27], "rel": [1, 24], "yearfrac": [1, 22, 24], "when": [1, 3, 6, 11, 25], "last": 1, "made": 1, "track": [1, 15], "pnl": 1, "product_of_time_and_bas": 1, "helper": [1, 3, 16, 19, 21, 23, 24], "attribut": 1, "over": [1, 19, 21], "wallet": [1, 2, 3, 15, 16, 19, 26, 27], "which": [1, 3, 7, 15, 19, 21, 24], "": [1, 2, 3, 12, 14, 16, 19, 24, 25], "balanc": [1, 25], "create_agent_act": 1, "action_typ": [1, 3, 16], "marketactiontyp": [1, 3, 16], "trade_amount": [1, 3, 16], "mint_tim": [1, 3, 16, 24], "0": [1, 2, 3, 11, 16, 22, 23, 24, 25], "marketact": [1, 3, 7, 15, 16], "creat": [1, 16, 26], "return": [1, 3, 7, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24], "repres": 1, "can": [1, 3, 5, 6, 9, 10, 11, 12, 14, 15, 16, 23], "make": [1, 19], "paramet": [1, 3, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "action": [1, 3, 5, 6, 7, 8, 9, 10, 16, 23], "execut": [1, 3, 15, 16], "must": [1, 3, 12, 14, 15, 20], "one": [1, 5, 6, 8, 9, 10, 23], "support": [1, 11], "relev": [1, 19], "were": 1, "mint": [1, 3, 11, 14, 23, 24], "The": [1, 3, 11, 12, 14, 15, 16, 23, 25], "contain": [1, 3, 11, 15, 16, 17, 19, 20, 21, 23, 26], "detail": [1, 3, 16, 23], "about": [1, 16], "list": [1, 7, 15, 16, 17, 19, 23], "method": [1, 3, 11, 16], "meant": 1, "polici": [1, 2, 26, 27], "specifi": [1, 8, 12, 14, 16, 20, 23], "from": [1, 3, 7, 11, 15, 19, 22, 23, 24], "get_max_long": [1, 11], "get": [1, 15, 23, 24], "approxim": 1, "maximum": [1, 11], "base": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 19, 22, 23, 24, 25, 26, 27], "typic": 1, "would": [1, 11, 17, 22], "call": [1, 19], "determin": [1, 23], "much": [1, 3, 23], "enter": 1, "long": [1, 8, 10, 11, 19, 24, 25], "posit": [1, 8, 11, 22, 25], "open": [1, 3, 5, 6, 8, 9, 10, 23, 25], "get_max_short": [1, 11], "bond": [1, 3, 5, 11, 12, 14, 22, 23, 25], "short": [1, 3, 5, 10, 11, 19, 23, 25], "current": [1, 3, 11, 12, 14, 15, 22, 24, 25], "get_trad": 1, "comput": [1, 3, 11, 14, 15, 16, 21, 23], "direct": [1, 15], "chosen": 1, "logic": [1, 3], "we": [1, 3, 16], "calcoutgivenin": 1, "becaus": 1, "know": 1, "want": [1, 12, 14], "care": 1, "less": [1, 24], "exit": 1, "close": [1, 3, 8, 10, 19], "calcingivenout": 1, "what": [1, 25], "pricing_model": [1, 2, 3, 23, 26, 27], "pricingmodel": [1, 3, 11, 14, 15, 23], "price": [1, 2, 3, 11, 12, 14, 15, 18, 21, 23, 26, 27], "model": [1, 3, 11, 12, 14, 15, 23], "update_wallet": 1, "wallet_delta": 1, "none": [1, 3, 15, 16, 19, 23], "updat": [1, 3, 15, 16], "hold": [1, 3], "It": [1, 3], "accord": [1, 3, 24], "pass": [1, 6, 8, 11, 23], "get_liquidation_trad": 1, "final": [1, 15], "liquid": [1, 3, 6, 9, 10, 11, 15, 23], "order": [1, 15], "where": 1, "applic": 1, "log_status_report": 1, "log": [1, 3, 19, 20], "user": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 20, 25], "state": [1, 3, 11, 12, 14, 15, 16, 25], "log_final_report": 1, "report": 1, "init_lp": [2, 4, 17, 19, 23, 26, 27], "lp_and_withdraw": [2, 4, 26, 27], "no_act": [2, 4, 26, 27], "single_long": [2, 4, 26, 27], "single_lp": [2, 4, 26, 27], "single_short": [2, 4, 26, 27], "hyperdr": [2, 3, 13, 23, 26, 27], "yieldspac": [2, 3, 11, 12, 13, 23, 26, 27], "util": [2, 15, 26, 27], "config": [2, 15, 18, 20, 23, 26, 27], "output": [2, 12, 14, 15, 18, 21, 23, 26, 27], "parse_config": [2, 18, 26, 27], "post_process": [2, 18, 26, 27], "sim_util": [2, 18, 26, 27], "agent": [2, 3, 5, 6, 7, 8, 9, 10, 15, 16, 19, 23, 25, 26, 27], "default_log_level": [2, 19], "default_log_formatt": 2, "multilin": 2, "string": [2, 3, 15, 19, 20], "show": 2, "asctim": 2, "levelnam": 2, "modul": [2, 27], "funcnam": 2, "messag": 2, "default_log_datetim": 2, "y": [2, 12, 14, 19], "m": 2, "d": [2, 14], "h": 2, "default_log_maxbyt": [2, 19], "black": 2, "cycl": 2, "colorblind": 2, "cmapcyc": 2, "twilight": 2, "cmapdiv": 2, "burd": 2, "cmapseq": 2, "viridi": 2, "cmapcat": 2, "colorblind10": 2, "diverg": 2, "div": 2, "framealpha": 2, "fontnam": 2, "san": 2, "serif": 2, "fontsiz": [2, 19], "9": 2, "gridalpha": 2, "1": [2, 3, 5, 11, 12, 14, 15, 16, 19, 23, 24, 26], "gridbelow": 2, "line": [2, 15], "gridpad": 2, "3": 2, "gridratio": 2, "5": [2, 11, 22, 23], "gridstyl": 2, "labelpad": 2, "4": 2, "larges": 2, "larg": 2, "legendloc": 2, "best": 2, "linewidth": [2, 19], "6": [2, 3, 23], "margin": [2, 3, 25], "05": [2, 11, 22], "mathtext": 2, "smallsiz": 2, "medium": 2, "titleweight": 2, "bold": 2, "tickdir": 2, "out": [2, 3, 11, 12, 14, 28], "ticklen": 2, "ticklenratio": 2, "tickminor": 2, "true": [2, 15, 19], "tickpad": 2, "2": [2, 3, 14], "tickwidthratio": 2, "8": 2, "titlepad": 2, "white": 2, "zline": 2, "zpatch": 2, "rc_param": 2, "store": [3, 15, 17, 25], "inform": [3, 16], "interfac": 3, "amm": [3, 11, 12, 14, 15, 16, 17, 20], "market_st": [3, 11, 12, 14, 16], "marketst": [3, 11, 12, 14, 16], "share_reserv": [3, 11, 16], "bond_reserv": [3, 11, 16], "base_buff": [3, 16], "bond_buff": [3, 16], "lp_reserv": [3, 16], "vault_apr": [3, 15, 16, 17, 23], "share_pric": [3, 11, 16], "init_share_pric": [3, 11, 16, 23], "position_dur": [3, 11, 16, 23], "stretchedtim": [3, 11, 12, 14, 16, 22], "365": [3, 24], "fee_perc": [3, 11, 12, 14, 16, 23], "variabl": [3, 11, 12, 14, 15, 16, 17, 20, 21, 23, 25], "given": [3, 11, 12, 14, 22, 24], "also": 3, "some": [3, 21], "assess": 3, "condit": 3, "properti": [3, 16, 25], "rate": [3, 11, 14], "apr": [3, 11, 17, 19, 22, 23], "spot_pric": [3, 16], "share": [3, 5, 11, 12, 14, 23], "reserv": [3, 5, 11, 12, 14, 19, 23], "check_action_typ": 3, "pricing_model_nam": [3, 17], "str": [3, 11, 12, 14, 15, 16, 17, 19, 20, 23], "ensur": [3, 11], "allow": [3, 17], "see": 3, "all": [3, 15], "accept": 3, "perform": [3, 7, 12, 16, 23], "name": [3, 11, 12, 14, 23], "trade_and_upd": 3, "agent_act": 3, "check": [3, 28], "ar": [3, 11, 12, 14, 15, 16, 23], "being": 3, "handl": 3, "each": [3, 7, 15, 16, 19, 23], "case": [3, 12, 14], "open_long": [3, 16], "close_long": [3, 16], "open_short": [3, 16], "close_short": [3, 16], "add_liquid": [3, 16], "new": [3, 15, 16], "delta": [3, 12, 14, 16], "its": [3, 11], "pool": [3, 11, 22, 23, 24], "address": [3, 25], "lp": [3, 5, 6, 9, 11, 14, 19, 23, 25], "fungibl": 3, "eas": 3, "remove_liquid": [3, 16], "figur": [3, 19], "contribut": 3, "calcualt": 3, "fee": [3, 11, 12, 14, 16, 23, 25], "weight": 3, "resolv": 3, "add": [3, 6, 9, 11, 16, 19], "option": [3, 15, 17, 19, 23], "update_market": 3, "market_delta": 3, "marketdelta": [3, 16], "increment": [3, 15], "member": [3, 11, 12, 14, 15, 20, 21, 23], "reflect": 3, "get_market_state_str": 3, "format": [3, 15, 16, 19, 24], "tick": [3, 19], "delta_tim": 3, "tupl": [3, 11, 14, 15, 19], "need": [3, 24], "account": [3, 23], "cover": 3, "worst": 3, "scenario": 3, "p": [3, 11], "come": 3, "sourc": [3, 11], "proce": 3, "your": 3, "sale": 3, "max": 3, "you": [3, 5, 6, 9, 10], "depost": 3, "two": 3, "compon": 3, "both": [3, 19], "yet": 3, "happili": 3, "up": [3, 11, 15, 23, 25], "unit": [3, 11, 12, 14, 16, 22, 24], "so": [3, 15, 23], "follow": [3, 11], "ident": [3, 15], "total": [3, 11, 16, 19, 23, 24], "deposit": [3, 12, 14, 23], "face": 3, "guarante": 3, "system": 3, "alwai": [3, 12, 14], "fulli": 3, "back": 3, "equal": 3, "give": 3, "u": 3, "reduc": 3, "longer": 3, "same": [3, 17, 20, 23], "drain": 3, "pai": [3, 12, 14], "bought": 3, "minu": 3, "cost": 3, "bui": 3, "d_base": [3, 11, 14, 16], "trade_result": [3, 11], "user_result": [3, 16], "neg": 3, "more": [3, 23], "take": 3, "spec": 3, "turn": 3, "after": [3, 8, 16, 17], "ad": [3, 12, 14, 25], "remov": [3, 6, 9], "log_market_step_str": 3, "step": 3, "special": 5, "strategi": [5, 6, 8, 9, 10], "initi": [5, 17, 23], "desir": [5, 11, 23], "1000": [5, 6, 8, 9], "first_base_to_lp": 5, "pt_to_short": 5, "100": [5, 10], "second_base_to_lp": 5, "simpl": [5, 6, 8, 9, 10], "onli": [5, 6, 8, 9, 10], "do": [5, 6, 9], "onc": [5, 6, 9, 10], "enough": 6, "inherit": 7, "thu": 7, "assign": [7, 15, 17], "subclass": 7, "basicpolici": 7, "noaction": 7, "most": 7, "basic": 7, "setup": [7, 16, 19, 23], "noop": 7, "empti": [7, 15, 23], "indic": [7, 15], "now": [7, 28], "certain": 8, "doesn": [9, 10, 23], "t": [9, 10, 12, 14, 23], "until": [9, 10, 11, 22, 23, 24], "_market": 9, "singl": 10, "thatonli": 10, "abc": 11, "calcul": [11, 12, 14, 22, 23, 24], "should": [11, 12, 14, 16, 23, 24], "instanti": [11, 15, 16, 19, 23], "own": 11, "assum": 11, "child": 11, "calc_in_given_out": [11, 12, 14], "quantiti": [11, 12, 14, 16, 19], "time_remain": [11, 12, 14, 22, 24], "traderesult": [11, 12, 14, 16], "adjust": [11, 23], "calc_out_given_in": [11, 12, 14], "in_": [11, 12, 14], "calc_lp_out_given_tokens_in": [11, 14], "calc_lp_in_given_tokens_out": [11, 14], "calc_tokens_out_given_lp_in": [11, 14], "lp_in": [11, 14], "addit": [11, 14, 23], "model_nam": [11, 12, 14, 16, 21, 23], "uniqu": [11, 12, 14], "model_typ": [11, 12, 14], "lower": [11, 12, 14], "snake_cas": [11, 12, 14], "calc_bond_reserv": 11, "target_apr": 11, "e": [11, 23, 24], "target": [11, 23], "fix": [11, 22], "decim": [11, 22, 23], "exampl": [11, 22], "days_remain": [11, 24], "dai": [11, 15, 16, 19, 21, 23, 24], "left": [11, 24], "matur": [11, 22, 24], "time_stretch": [11, 16, 24], "stretch": [11, 12, 14, 16, 23, 24], "year": [11, 23, 24], "origin": 11, "start": [11, 24], "expect": 11, "input": [11, 12, 14, 15, 20, 23], "todo": [11, 23], "write": 11, "test": [11, 19], "calc_share_reserv": 11, "pt": [11, 12, 14, 16], "provid": [11, 12, 14, 15, 22, 23, 24], "calc_liquid": 11, "target_liquid": [11, 16, 23], "volum": [11, 15], "suppli": [11, 19], "scale": [11, 24], "factor": [11, 24], "while": 11, "keep": [11, 21], "ratio": [11, 23], "constant": [11, 12, 16, 24], "preserv": 11, "total_liquid": 11, "term": [11, 12, 14, 22, 24], "total_reserv": 11, "arbitrari": 11, "au": 11, "math": [11, 14], "target_liquidity_usd": 11, "try": 11, "achiev": [11, 23], "seed": [11, 15], "durat": [11, 22, 23, 24], "calc_total_liquidity_from_reserves_and_pric": 11, "underli": [11, 19], "yield": [11, 12, 14, 23], "calc_spot_price_from_reserv": 11, "spot": [11, 21, 22], "defin": [11, 17, 20], "begin": [11, 12, 14], "align": 11, "frac": [11, 12, 14], "2y": [11, 12, 14], "cz": [11, 12, 14], "mu": [11, 12, 14], "z": [11, 12, 14], "tau": [11, 12, 14], "end": [11, 12, 14], "remain": [11, 12, 14, 22, 24], "incorpor": [11, 12, 14], "princip": 11, "calc_apr_from_reserv": 11, "bisect": 11, "percent": [11, 23], "charg": 11, "purchas": 11, "calc_time_stretch": 11, "check_input_assert": 11, "appli": [11, 16], "set": [11, 15, 16, 19, 23, 25], "assert": 11, "check_output_assert": 11, "result": [11, 12, 16, 23], "hyperdrivepricingmodel": 12, "yieldspacepricingmodel": [12, 14], "combin": 12, "sum": 12, "invari": [12, 14], "modif": [12, 14, 17], "enabl": [12, 14], "bear": [12, 14, 23], "vault": [12, 14, 23], "receiv": [12, 14], "other": [12, 14], "c": [12, 14], "k": [12, 14], "cdot": [12, 14], "text": [12, 14, 19], "_in": [12, 14], "f": [12, 14], "phi": [12, 14], "percentag": [12, 14], "differ": [12, 14, 23], "between": [12, 14, 15, 23, 24], "paid": [12, 14, 25], "without": [12, 14, 23], "slippag": [12, 14, 16, 23], "_out": [12, 14], "r": 14, "d_b": 14, "wrap": 15, "experi": 15, "random_simulation_vari": 15, "randomsimulationvari": [15, 16, 17, 20, 23], "environ": 15, "experiment": 15, "includ": [15, 16], "rang": 15, "To": [15, 23], "conjunct": 15, "check_vault_apr": 15, "verifi": 15, "right": 15, "length": [15, 17, 24], "set_rng": 15, "intern": 15, "forc": 15, "across": 15, "run": [15, 17, 19, 23], "construct": [15, 16, 17, 23], "np": 15, "default_rng": 15, "log_config_vari": 15, "print": 15, "get_simulation_state_str": 15, "state_str": 15, "self": 15, "__dict__": 15, "cast": 15, "separ": [15, 19], "market_step_s": [15, 16], "minimum": 15, "block": [15, 24], "blocks_per_year": 15, "add_ag": 15, "agent_list": 15, "append": [15, 16], "simulation_st": [15, 21], "If": [15, 19], "alreadi": 15, "happen": 15, "run_trade_numb": [15, 16], "prepend": 15, "still": [15, 24], "easili": 15, "convert": [15, 20, 21, 24, 25], "panda": [15, 21], "datafram": [15, 21], "A": [15, 16, 23], "collect_and_execute_trad": 15, "last_block_in_sim": 15, "bool": [15, 17, 19], "fals": [15, 19], "them": 15, "occur": 15, "collect_trad": 15, "agent_id": 15, "ani": [15, 19, 23], "collect": [15, 16, 23], "These": 15, "correspond": [15, 20, 23], "regist": 15, "associ": 15, "collect_liquidation_trad": 15, "execute_trad": 15, "run_simul": 15, "dictionari": [15, 20, 21, 23], "primari": 15, "loop": 15, "group": 15, "num_trading_dai": [15, 16, 17], "There": 15, "doe": 15, "update_simulation_st": 15, "common": 16, "throughtout": 16, "codebas": 16, "to_descript": 16, "descript": [16, 20, 23], "dataclass": [16, 17, 20, 23, 25], "metadata": 16, "wei": 16, "1e": [16, 23], "18": [16, 19], "max_reserves_differ": 16, "20000000000": 16, "tokentyp": 16, "enum": 16, "descriptor": 16, "normalized_tim": 16, "normal": [16, 24], "stretched_tim": [16, 24], "chang": [16, 20, 23], "d_base_asset": 16, "d_token_asset": 16, "d_base_buff": 16, "d_bond_buff": 16, "d_lp_reserv": 16, "d_share_pric": 16, "like": [16, 19], "total_suppli": 16, "apply_delta": 16, "agenttraderesult": 16, "d_bond": 16, "markettraderesult": 16, "tradebreakdown": 16, "granular": 16, "breakdown": 16, "relat": 16, "without_fee_or_slippag": 16, "with_fe": 16, "without_fe": 16, "addition": 16, "market_result": 16, "dure": 16, "target_pool_apr": [16, 23], "init_vault_ag": [16, 17], "simulationst": [16, 21], "run_numb": 16, "simulation_start_tim": 16, "block_numb": [16, 24], "daily_block_numb": 16, "block_timestamp": 16, "current_market_datetim": 16, "current_market_yearfrac": 16, "floor_fe": [16, 17], "base_asset_pric": [16, 17], "pool_apr": 16, "num_blocks_per_dai": [16, 17], "update_market_st": 16, "entri": 16, "copi": 16, "update_agent_wallet": 16, "structur": 17, "marketconfig": [17, 20], "min_target_liquid": 17, "max_target_liquid": 17, "min_target_volum": 17, "max_target_volum": 17, "min_vault_ag": 17, "max_vault_ag": 17, "union": 17, "callabl": 17, "ammconfig": [17, 20], "min_fe": 17, "max_fe": 17, "min_pool_apr": 17, "max_pool_apr": 17, "simulatorconfig": [17, 20], "token_dur": [17, 23, 24], "shuffle_us": 17, "agent_polici": 17, "compound_vault_apr": 17, "logging_level": 17, "precis": 17, "random_se": 17, "data": 17, "setup_vault_apr": 17, "note": [17, 23], "infinit": 17, "small": [17, 23], "get_random_vari": 17, "deliv": 19, "plot_market_lp_reserv": 19, "matplotlib": 19, "plot": 19, "per": [19, 23], "plot_market_spot_pric": 19, "plot_pool_apr": 19, "plot_longs_and_short": 19, "exclude_first_ag": 19, "xtick_step": 19, "10": 19, "exclud": 19, "first": [19, 23], "usual": 19, "plot_wallet_return": 19, "get_gridspec_subplot": 19, "nrow": 19, "ncol": 19, "kwarg": 19, "pyplot": 19, "ax": 19, "gridspec": 19, "reason": 19, "space": 19, "row": 19, "column": [19, 21], "keyword": 19, "argument": [19, 23], "clear_axi": 19, "axi": 19, "spine": 19, "clear": 19, "label": 19, "proplot": 19, "color": 19, "default": [19, 23, 24], "invis": 19, "clear_ax": 19, "iter": [19, 23], "format_axi": 19, "axis_handl": 19, "xlabel": 19, "linestyl": 19, "grei": 19, "annot": 19, "major_offset": 19, "minor_offset": 19, "val": 19, "legend": 19, "delete_log_fil": 19, "logger": 19, "handler": 19, "file": [19, 20], "delet": 19, "setup_log": 19, "log_filenam": 19, "max_byt": 19, "log_level": 19, "close_log": 19, "delete_log": 19, "customencod": 19, "skipkei": 19, "ensure_ascii": 19, "check_circular": 19, "allow_nan": 19, "sort_kei": 19, "indent": 19, "json": 19, "jsonencod": 19, "custom": 19, "encod": 19, "dump": 19, "o": 19, "overrid": [19, 23], "pars": 20, "load": 20, "toml": 20, "load_and_parse_config_fil": 20, "config_fil": 20, "wrapper": 20, "absolut": 20, "path": 20, "nest": 20, "class": [20, 21, 23], "load_config_fil": 20, "config_dict": 20, "parse_simulation_config": 20, "text_to_logging_level": 20, "logging_text": 20, "level": [20, 23], "integ": 20, "debug": 20, "info": 20, "warn": 20, "error": 20, "critic": 20, "override_config_vari": 20, "override_dict": [20, 23], "replac": 20, "exist": 20, "ones": 20, "field": [20, 23], "post": 21, "process": 21, "get_simulation_state_df": 21, "well": 21, "compute_derived_vari": 21, "deriv": 21, "aggregate_trade_data": 21, "aggreg": 21, "mean": 21, "trades_agg": 21, "calc_apr_from_spot_pric": 22, "normalized_time_remain": 22, "calc_spot_price_from_apr": 22, "get_simul": 23, "random_sim_var": 23, "sane": 23, "get_init_lp_ag": 23, "seed_liquid": 23, "requir": 23, "hit": 23, "larger": 23, "estim": 23, "due": 23, "next": 23, "monoton": 23, "decreas": 23, "sinc": [23, 24], "diminish": 23, "here": 23, "http": 23, "github": 23, "com": 23, "element": 23, "fi": 23, "elf": 23, "pull": 23, "136": 23, "issuecom": 23, "1405922764": 23, "lper": 23, "within": 23, "15": 23, "13": 23, "init_lp_ag": 23, "get_market": 23, "explicitli": 23, "portion": 23, "express": 23, "expiri": 23, "fraction": [23, 24], "g": [23, 24], "month": 23, "valut": 23, "renam": 23, "get_pricing_model": 23, "match": 23, "override_random_vari": 23, "random_vari": 23, "current_datetim": 24, "datetim": 24, "utc": 24, "block_number_to_datetim": 24, "start_tim": 24, "time_between_block": 24, "timestamp": 24, "second": 24, "wa": 24, "valid": 24, "yearfrac_as_datetim": 24, "plu": 24, "get_yearfrac_remain": 24, "market_tim": 24, "elaps": 24, "question": 24, "than": 24, "norm_dai": 24, "normalizing_const": 24, "assumpt": 24, "stretch_tim": 24, "unnorm_dai": 24, "normed_dai": 24, "unstretch_tim": 24, "unstretch": 24, "been": 24, "days_to_time_remain": 24, "time_to_days_remain": 24, "trader": 25, "held": 25, "lp_token": 25, "fees_paid": 25, "public": 25, "instead": 25, "page": [26, 27], "auto": 26, "document": 26, "elfpi": 26, "sphinx": 26, "autoapi": 26, "quick": 27, "instal": 27, "index": 27, "search": 27, "our": 28, "readm": 28}, "objects": {"": [[2, 0, 0, "-", "elfpy"]], "elfpy": [[2, 1, 1, "", "BLACK"], [2, 1, 1, "", "CMAPCAT"], [2, 1, 1, "", "CMAPCYC"], [2, 1, 1, "", "CMAPDIV"], [2, 1, 1, "", "CMAPSEQ"], [2, 1, 1, "", "CYCLE"], [2, 1, 1, "", "DEFAULT_LOG_DATETIME"], [2, 1, 1, "", "DEFAULT_LOG_FORMATTER"], [2, 1, 1, "", "DEFAULT_LOG_LEVEL"], [2, 1, 1, "", "DEFAULT_LOG_MAXBYTES"], [2, 1, 1, "", "DIVERGING"], [2, 1, 1, "", "FONTNAME"], [2, 1, 1, "", "FONTSIZE"], [2, 1, 1, "", "FRAMEALPHA"], [2, 1, 1, "", "GRIDALPHA"], [2, 1, 1, "", "GRIDBELOW"], [2, 1, 1, "", "GRIDPAD"], [2, 1, 1, "", "GRIDRATIO"], [2, 1, 1, "", "GRIDSTYLE"], [2, 1, 1, "", "LABELPAD"], [2, 1, 1, "", "LARGESIZE"], [2, 1, 1, "", "LEGENDLOC"], [2, 1, 1, "", "LINEWIDTH"], [2, 1, 1, "", "MARGIN"], [2, 1, 1, "", "MATHTEXT"], [2, 1, 1, "", "SMALLSIZE"], [2, 1, 1, "", "TICKDIR"], [2, 1, 1, "", "TICKLEN"], [2, 1, 1, "", "TICKLENRATIO"], [2, 1, 1, "", "TICKMINOR"], [2, 1, 1, "", "TICKPAD"], [2, 1, 1, "", "TICKWIDTHRATIO"], [2, 1, 1, "", "TITLEPAD"], [2, 1, 1, "", "TITLEWEIGHT"], [2, 1, 1, "", "WHITE"], [2, 1, 1, "", "ZLINES"], [2, 1, 1, "", "ZPATCHES"], [1, 0, 0, "-", "agent"], [3, 0, 0, "-", "markets"], [4, 0, 0, "-", "policies"], [13, 0, 0, "-", "pricing_models"], [2, 1, 1, "", "rc_params"], [15, 0, 0, "-", "simulators"], [16, 0, 0, "-", "types"], [18, 0, 0, "-", "utils"], [25, 0, 0, "-", "wallet"]], "elfpy.agent": [[1, 2, 1, "", "Agent"]], "elfpy.agent.Agent": [[1, 3, 1, "", "action"], [1, 4, 1, "", "budget"], [1, 3, 1, "", "create_agent_action"], [1, 3, 1, "", "get_liquidation_trades"], [1, 3, 1, "", "get_max_long"], [1, 3, 1, "", "get_max_short"], [1, 3, 1, "", "get_trades"], [1, 4, 1, "", "last_update_spend"], [1, 3, 1, "", "log_final_report"], [1, 3, 1, "", "log_status_report"], [1, 4, 1, "", "market"], [1, 4, 1, "", "product_of_time_and_base"], [1, 4, 1, "", "rng"], [1, 3, 1, "", "update_wallet"], [1, 4, 1, "", "wallet"], [1, 4, 1, "", "wallet_address"]], "elfpy.markets": [[3, 2, 1, "", "Market"]], "elfpy.markets.Market": [[3, 3, 1, "", "add_liquidity"], [3, 3, 1, "", "check_action_type"], [3, 3, 1, "", "close_long"], [3, 3, 1, "", "close_short"], [3, 3, 1, "", "get_market_state_string"], [3, 3, 1, "", "log_market_step_string"], [3, 3, 1, "", "open_long"], [3, 3, 1, "", "open_short"], [3, 5, 1, "", "rate"], [3, 3, 1, "", "remove_liquidity"], [3, 5, 1, "", "spot_price"], [3, 3, 1, "", "tick"], [3, 3, 1, "", "trade_and_update"], [3, 3, 1, "", "update_market"]], "elfpy.policies": [[5, 0, 0, "-", "init_lp"], [6, 0, 0, "-", "lp_and_withdraw"], [7, 0, 0, "-", "no_action"], [8, 0, 0, "-", "single_long"], [9, 0, 0, "-", "single_lp"], [10, 0, 0, "-", "single_short"]], "elfpy.policies.init_lp": [[5, 2, 1, "", "Policy"]], "elfpy.policies.init_lp.Policy": [[5, 3, 1, "", "action"]], "elfpy.policies.lp_and_withdraw": [[6, 2, 1, "", "Policy"]], "elfpy.policies.lp_and_withdraw.Policy": [[6, 3, 1, "", "action"]], "elfpy.policies.no_action": [[7, 2, 1, "", "NoAction"]], "elfpy.policies.no_action.NoAction": [[7, 3, 1, "", "action"]], "elfpy.policies.single_long": [[8, 2, 1, "", "Policy"]], "elfpy.policies.single_long.Policy": [[8, 3, 1, "", "action"]], "elfpy.policies.single_lp": [[9, 2, 1, "", "Policy"]], "elfpy.policies.single_lp.Policy": [[9, 3, 1, "", "action"]], "elfpy.policies.single_short": [[10, 2, 1, "", "Policy"]], "elfpy.policies.single_short.Policy": [[10, 3, 1, "", "action"]], "elfpy.pricing_models": [[11, 0, 0, "-", "base"], [12, 0, 0, "-", "hyperdrive"], [14, 0, 0, "-", "yieldspace"]], "elfpy.pricing_models.base": [[11, 2, 1, "", "PricingModel"]], "elfpy.pricing_models.base.PricingModel": [[11, 3, 1, "", "calc_apr_from_reserves"], [11, 3, 1, "", "calc_bond_reserves"], [11, 3, 1, "", "calc_in_given_out"], [11, 3, 1, "", "calc_liquidity"], [11, 3, 1, "", "calc_lp_in_given_tokens_out"], [11, 3, 1, "", "calc_lp_out_given_tokens_in"], [11, 3, 1, "", "calc_out_given_in"], [11, 3, 1, "", "calc_share_reserves"], [11, 3, 1, "", "calc_spot_price_from_reserves"], [11, 3, 1, "", "calc_time_stretch"], [11, 3, 1, "", "calc_tokens_out_given_lp_in"], [11, 3, 1, "", "calc_total_liquidity_from_reserves_and_price"], [11, 3, 1, "", "check_input_assertions"], [11, 3, 1, "", "check_output_assertions"], [11, 3, 1, "", "get_max_long"], [11, 3, 1, "", "get_max_short"], [11, 3, 1, "", "model_name"], [11, 3, 1, "", "model_type"]], "elfpy.pricing_models.hyperdrive": [[12, 2, 1, "", "HyperdrivePricingModel"]], "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel": [[12, 3, 1, "", "calc_in_given_out"], [12, 3, 1, "", "calc_out_given_in"], [12, 3, 1, "", "model_name"], [12, 3, 1, "", "model_type"]], "elfpy.pricing_models.yieldspace": [[14, 2, 1, "", "YieldSpacePricingModel"]], "elfpy.pricing_models.yieldspace.YieldSpacePricingModel": [[14, 3, 1, "", "calc_in_given_out"], [14, 3, 1, "", "calc_lp_in_given_tokens_out"], [14, 3, 1, "", "calc_lp_out_given_tokens_in"], [14, 3, 1, "", "calc_out_given_in"], [14, 3, 1, "", "calc_tokens_out_given_lp_in"], [14, 3, 1, "", "model_name"], [14, 3, 1, "", "model_type"]], "elfpy.simulators": [[15, 2, 1, "", "Simulator"]], "elfpy.simulators.Simulator": [[15, 3, 1, "", "add_agents"], [15, 3, 1, "", "check_vault_apr"], [15, 3, 1, "", "collect_and_execute_trades"], [15, 3, 1, "", "collect_liquidation_trades"], [15, 3, 1, "", "collect_trades"], [15, 3, 1, "", "execute_trades"], [15, 3, 1, "", "get_simulation_state_string"], [15, 3, 1, "", "log_config_variables"], [15, 3, 1, "", "market_step_size"], [15, 3, 1, "", "run_simulation"], [15, 3, 1, "", "set_rng"], [15, 3, 1, "", "update_simulation_state"]], "elfpy.types": [[16, 2, 1, "", "AgentTradeResult"], [16, 1, 1, "", "MAX_RESERVES_DIFFERENCE"], [16, 2, 1, "", "MarketAction"], [16, 2, 1, "", "MarketActionType"], [16, 2, 1, "", "MarketDeltas"], [16, 2, 1, "", "MarketState"], [16, 2, 1, "", "MarketTradeResult"], [16, 2, 1, "", "Quantity"], [16, 2, 1, "", "RandomSimulationVariables"], [16, 2, 1, "", "SimulationState"], [16, 2, 1, "", "StretchedTime"], [16, 2, 1, "", "TokenType"], [16, 2, 1, "", "TradeBreakdown"], [16, 2, 1, "", "TradeResult"], [16, 1, 1, "", "WEI"], [16, 6, 1, "", "to_description"]], "elfpy.types.AgentTradeResult": [[16, 4, 1, "", "d_base"], [16, 4, 1, "", "d_bonds"]], "elfpy.types.MarketAction": [[16, 4, 1, "", "action_type"], [16, 4, 1, "", "mint_time"], [16, 4, 1, "", "trade_amount"], [16, 4, 1, "", "wallet_address"]], "elfpy.types.MarketActionType": [[16, 4, 1, "", "ADD_LIQUIDITY"], [16, 4, 1, "", "CLOSE_LONG"], [16, 4, 1, "", "CLOSE_SHORT"], [16, 4, 1, "", "OPEN_LONG"], [16, 4, 1, "", "OPEN_SHORT"], [16, 4, 1, "", "REMOVE_LIQUIDITY"]], "elfpy.types.MarketDeltas": [[16, 4, 1, "", "d_base_asset"], [16, 4, 1, "", "d_base_buffer"], [16, 4, 1, "", "d_bond_buffer"], [16, 4, 1, "", "d_lp_reserves"], [16, 4, 1, "", "d_share_price"], [16, 4, 1, "", "d_token_asset"]], "elfpy.types.MarketState": [[16, 3, 1, "", "apply_delta"], [16, 4, 1, "", "base_buffer"], [16, 4, 1, "", "bond_buffer"], [16, 4, 1, "", "bond_reserves"], [16, 4, 1, "", "init_share_price"], [16, 4, 1, "", "lp_reserves"], [16, 4, 1, "", "share_price"], [16, 4, 1, "", "share_reserves"], [16, 4, 1, "", "vault_apr"]], "elfpy.types.MarketTradeResult": [[16, 4, 1, "", "d_base"], [16, 4, 1, "", "d_bonds"]], "elfpy.types.Quantity": [[16, 4, 1, "", "amount"], [16, 4, 1, "", "unit"]], "elfpy.types.RandomSimulationVariables": [[16, 4, 1, "", "fee_percent"], [16, 4, 1, "", "init_share_price"], [16, 4, 1, "", "init_vault_age"], [16, 4, 1, "", "target_liquidity"], [16, 4, 1, "", "target_pool_apr"], [16, 4, 1, "", "vault_apr"]], "elfpy.types.SimulationState": [[16, 4, 1, "", "base_asset_price"], [16, 4, 1, "", "block_number"], [16, 4, 1, "", "block_timestamp"], [16, 4, 1, "", "current_market_datetime"], [16, 4, 1, "", "current_market_yearfrac"], [16, 4, 1, "", "daily_block_number"], [16, 4, 1, "", "day"], [16, 4, 1, "", "fee_percent"], [16, 4, 1, "", "floor_fee"], [16, 4, 1, "", "init_vault_age"], [16, 4, 1, "", "market_step_size"], [16, 4, 1, "", "model_name"], [16, 4, 1, "", "num_blocks_per_day"], [16, 4, 1, "", "num_trading_days"], [16, 4, 1, "", "pool_apr"], [16, 4, 1, "", "position_duration"], [16, 4, 1, "", "run_number"], [16, 4, 1, "", "run_trade_number"], [16, 4, 1, "", "simulation_start_time"], [16, 4, 1, "", "spot_price"], [16, 4, 1, "", "target_liquidity"], [16, 3, 1, "", "update_agent_wallet"], [16, 3, 1, "", "update_market_state"]], "elfpy.types.StretchedTime": [[16, 5, 1, "", "days"], [16, 5, 1, "", "normalized_time"], [16, 5, 1, "", "stretched_time"], [16, 5, 1, "", "time_stretch"]], "elfpy.types.TokenType": [[16, 4, 1, "", "BASE"], [16, 4, 1, "", "PT"]], "elfpy.types.TradeBreakdown": [[16, 4, 1, "", "fee"], [16, 4, 1, "", "with_fee"], [16, 4, 1, "", "without_fee"], [16, 4, 1, "", "without_fee_or_slippage"]], "elfpy.types.TradeResult": [[16, 4, 1, "", "breakdown"], [16, 4, 1, "", "market_result"], [16, 4, 1, "", "user_result"]], "elfpy.utils": [[17, 0, 0, "-", "config"], [19, 0, 0, "-", "outputs"], [20, 0, 0, "-", "parse_config"], [21, 0, 0, "-", "post_processing"], [22, 0, 0, "-", "price"], [23, 0, 0, "-", "sim_utils"], [24, 0, 0, "-", "time"]], "elfpy.utils.config": [[17, 2, 1, "", "AMMConfig"], [17, 2, 1, "", "Config"], [17, 2, 1, "", "MarketConfig"], [17, 2, 1, "", "SimulatorConfig"], [17, 6, 1, "", "get_random_variables"], [17, 6, 1, "", "setup_vault_apr"]], "elfpy.utils.config.AMMConfig": [[17, 4, 1, "", "floor_fee"], [17, 4, 1, "", "max_fee"], [17, 4, 1, "", "max_pool_apr"], [17, 4, 1, "", "min_fee"], [17, 4, 1, "", "min_pool_apr"], [17, 4, 1, "", "pricing_model_name"]], "elfpy.utils.config.Config": [[17, 4, 1, "", "amm"], [17, 4, 1, "", "market"], [17, 4, 1, "", "simulator"]], "elfpy.utils.config.MarketConfig": [[17, 4, 1, "", "base_asset_price"], [17, 4, 1, "", "max_target_liquidity"], [17, 4, 1, "", "max_target_volume"], [17, 4, 1, "", "max_vault_age"], [17, 4, 1, "", "min_target_liquidity"], [17, 4, 1, "", "min_target_volume"], [17, 4, 1, "", "min_vault_age"], [17, 4, 1, "", "vault_apr"]], "elfpy.utils.config.SimulatorConfig": [[17, 4, 1, "", "agent_policies"], [17, 4, 1, "", "compound_vault_apr"], [17, 4, 1, "", "init_lp"], [17, 4, 1, "", "init_vault_age"], [17, 4, 1, "", "logging_level"], [17, 4, 1, "", "num_blocks_per_day"], [17, 4, 1, "", "num_trading_days"], [17, 4, 1, "", "precision"], [17, 4, 1, "", "random_seed"], [17, 4, 1, "", "rng"], [17, 4, 1, "", "shuffle_users"], [17, 4, 1, "", "token_duration"]], "elfpy.utils.outputs": [[19, 2, 1, "", "CustomEncoder"], [19, 6, 1, "", "annotate"], [19, 6, 1, "", "clear_axes"], [19, 6, 1, "", "clear_axis"], [19, 6, 1, "", "close_logging"], [19, 6, 1, "", "delete_log_file"], [19, 6, 1, "", "format_axis"], [19, 6, 1, "", "get_gridspec_subplots"], [19, 6, 1, "", "plot_longs_and_shorts"], [19, 6, 1, "", "plot_market_lp_reserves"], [19, 6, 1, "", "plot_market_spot_price"], [19, 6, 1, "", "plot_pool_apr"], [19, 6, 1, "", "plot_wallet_returns"], [19, 6, 1, "", "setup_logging"]], "elfpy.utils.outputs.CustomEncoder": [[19, 3, 1, "", "default"]], "elfpy.utils.parse_config": [[20, 6, 1, "", "load_and_parse_config_file"], [20, 6, 1, "", "load_config_file"], [20, 6, 1, "", "override_config_variables"], [20, 6, 1, "", "parse_simulation_config"], [20, 6, 1, "", "text_to_logging_level"]], "elfpy.utils.post_processing": [[21, 6, 1, "", "aggregate_trade_data"], [21, 6, 1, "", "compute_derived_variables"], [21, 6, 1, "", "get_simulation_state_df"]], "elfpy.utils.price": [[22, 6, 1, "", "calc_apr_from_spot_price"], [22, 6, 1, "", "calc_spot_price_from_apr"]], "elfpy.utils.sim_utils": [[23, 6, 1, "", "get_init_lp_agent"], [23, 6, 1, "", "get_market"], [23, 6, 1, "", "get_pricing_model"], [23, 6, 1, "", "get_simulator"], [23, 6, 1, "", "override_random_variables"]], "elfpy.utils.time": [[24, 6, 1, "", "block_number_to_datetime"], [24, 6, 1, "", "current_datetime"], [24, 6, 1, "", "days_to_time_remaining"], [24, 6, 1, "", "get_yearfrac_remaining"], [24, 6, 1, "", "norm_days"], [24, 6, 1, "", "stretch_time"], [24, 6, 1, "", "time_to_days_remaining"], [24, 6, 1, "", "unnorm_days"], [24, 6, 1, "", "unstretch_time"], [24, 6, 1, "", "yearfrac_as_datetime"]], "elfpy.wallet": [[25, 2, 1, "", "Long"], [25, 2, 1, "", "Short"], [25, 2, 1, "", "Wallet"]], "elfpy.wallet.Long": [[25, 4, 1, "", "balance"]], "elfpy.wallet.Short": [[25, 4, 1, "", "balance"], [25, 4, 1, "", "margin"]], "elfpy.wallet.Wallet": [[25, 4, 1, "", "address"], [25, 4, 1, "", "base"], [25, 4, 1, "", "fees_paid"], [25, 4, 1, "", "longs"], [25, 4, 1, "", "lp_tokens"], [25, 4, 1, "", "shorts"], [25, 5, 1, "", "state"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "titleterms": {"elfpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "agent": 1, "modul": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "content": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "class": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 25], "subpackag": 2, "submodul": [2, 4, 13, 18], "packag": 2, "market": 3, "polici": [4, 5, 6, 7, 8, 9, 10], "init_lp": 5, "lp_and_withdraw": 6, "no_act": 7, "single_long": 8, "single_lp": 9, "single_short": 10, "pricing_model": [11, 12, 13, 14], "base": 11, "hyperdr": 12, "yieldspac": 14, "simul": 15, "type": 16, "function": [16, 17, 19, 20, 21, 22, 23, 24], "attribut": 16, "todo": [16, 25], "util": [17, 18, 19, 20, 21, 22, 23, 24], "config": 17, "output": 19, "parse_config": 20, "post_process": 21, "price": 22, "sim_util": 23, "time": 24, "wallet": 25, "api": [26, 27], "refer": 26, "welcom": 27, "": 27, "document": 27, "indic": 27, "tabl": 27, "quick": 28, "instal": 28}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"elfpy": [[0, "module-elfpy"], [2, "module-elfpy"]], "elfpy.agent": [[1, "module-elfpy.agent"]], "Module Contents": [[1, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"]], "Classes": [[1, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [19, "classes"], [25, "classes"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [4, "submodules"], [13, "submodules"], [18, "submodules"]], "Package Contents": [[2, "package-contents"]], "elfpy.markets": [[3, "module-elfpy.markets"]], "elfpy.policies": [[4, "module-elfpy.policies"]], "elfpy.policies.init_lp": [[5, "module-elfpy.policies.init_lp"]], "elfpy.policies.lp_and_withdraw": [[6, "module-elfpy.policies.lp_and_withdraw"]], "elfpy.policies.no_action": [[7, "module-elfpy.policies.no_action"]], "elfpy.policies.single_long": [[8, "module-elfpy.policies.single_long"]], "elfpy.policies.single_lp": [[9, "module-elfpy.policies.single_lp"]], "elfpy.policies.single_short": [[10, "module-elfpy.policies.single_short"]], "elfpy.pricing_models.base": [[11, "module-elfpy.pricing_models.base"]], "elfpy.pricing_models.hyperdrive": [[12, "module-elfpy.pricing_models.hyperdrive"]], "elfpy.pricing_models": [[13, "module-elfpy.pricing_models"]], "elfpy.pricing_models.yieldspace": [[14, "module-elfpy.pricing_models.yieldspace"]], "elfpy.simulators": [[15, "module-elfpy.simulators"]], "elfpy.types": [[16, "module-elfpy.types"]], "Functions": [[16, "functions"], [17, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [24, "functions"]], "Attributes": [[16, "attributes"]], "Todo": [[16, "id1"], [25, "id1"]], "elfpy.utils.config": [[17, "module-elfpy.utils.config"]], "elfpy.utils": [[18, "module-elfpy.utils"]], "elfpy.utils.outputs": [[19, "module-elfpy.utils.outputs"]], "elfpy.utils.parse_config": [[20, "module-elfpy.utils.parse_config"]], "elfpy.utils.post_processing": [[21, "module-elfpy.utils.post_processing"]], "elfpy.utils.price": [[22, "module-elfpy.utils.price"]], "elfpy.utils.sim_utils": [[23, "module-elfpy.utils.sim_utils"]], "elfpy.utils.time": [[24, "module-elfpy.utils.time"]], "elfpy.wallet": [[25, "module-elfpy.wallet"]], "API Reference": [[26, "api-reference"]], "Welcome to elfpy\u2019s documentation!": [[27, "welcome-to-elfpy-s-documentation"]], "Documentation": [[27, null]], "API": [[27, null]], "Indices and tables": [[27, "indices-and-tables"]], "Quick Install": [[28, "quick-install"]]}, "indexentries": {"elfpy": [[0, "module-elfpy"], [2, "module-elfpy"]], "module": [[0, "module-elfpy"], [1, "module-elfpy.agent"], [2, "module-elfpy"], [3, "module-elfpy.markets"], [4, "module-elfpy.policies"], [5, "module-elfpy.policies.init_lp"], [6, "module-elfpy.policies.lp_and_withdraw"], [7, "module-elfpy.policies.no_action"], [8, "module-elfpy.policies.single_long"], [9, "module-elfpy.policies.single_lp"], [10, "module-elfpy.policies.single_short"], [11, "module-elfpy.pricing_models.base"], [12, "module-elfpy.pricing_models.hyperdrive"], [13, "module-elfpy.pricing_models"], [14, "module-elfpy.pricing_models.yieldspace"], [15, "module-elfpy.simulators"], [16, "module-elfpy.types"], [17, "module-elfpy.utils.config"], [18, "module-elfpy.utils"], [19, "module-elfpy.utils.outputs"], [20, "module-elfpy.utils.parse_config"], [21, "module-elfpy.utils.post_processing"], [22, "module-elfpy.utils.price"], [23, "module-elfpy.utils.sim_utils"], [24, "module-elfpy.utils.time"], [25, "module-elfpy.wallet"]], "agent (class in elfpy.agent)": [[1, "elfpy.agent.Agent"]], "action() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.action"]], "budget (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.budget"]], "create_agent_action() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.create_agent_action"]], "elfpy.agent": [[1, "module-elfpy.agent"]], "get_liquidation_trades() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_liquidation_trades"]], "get_max_long() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_max_long"]], "get_max_short() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_max_short"]], "get_trades() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_trades"]], "last_update_spend (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.last_update_spend"]], "log_final_report() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.log_final_report"]], "log_status_report() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.log_status_report"]], "market (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.market"]], "product_of_time_and_base (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.product_of_time_and_base"]], "rng (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.rng"]], "update_wallet() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.update_wallet"]], "wallet (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.wallet"]], "wallet_address (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.wallet_address"]], "black (in module elfpy)": [[2, "elfpy.BLACK"]], "cmapcat (in module elfpy)": [[2, "elfpy.CMAPCAT"]], "cmapcyc (in module elfpy)": [[2, "elfpy.CMAPCYC"]], "cmapdiv (in module elfpy)": [[2, "elfpy.CMAPDIV"]], "cmapseq (in module elfpy)": [[2, "elfpy.CMAPSEQ"]], "cycle (in module elfpy)": [[2, "elfpy.CYCLE"]], "default_log_datetime (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_DATETIME"]], "default_log_formatter (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_FORMATTER"]], "default_log_level (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_LEVEL"]], "default_log_maxbytes (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_MAXBYTES"]], "diverging (in module elfpy)": [[2, "elfpy.DIVERGING"]], "fontname (in module elfpy)": [[2, "elfpy.FONTNAME"]], "fontsize (in module elfpy)": [[2, "elfpy.FONTSIZE"]], "framealpha (in module elfpy)": [[2, "elfpy.FRAMEALPHA"]], "gridalpha (in module elfpy)": [[2, "elfpy.GRIDALPHA"]], "gridbelow (in module elfpy)": [[2, "elfpy.GRIDBELOW"]], "gridpad (in module elfpy)": [[2, "elfpy.GRIDPAD"]], "gridratio (in module elfpy)": [[2, "elfpy.GRIDRATIO"]], "gridstyle (in module elfpy)": [[2, "elfpy.GRIDSTYLE"]], "labelpad (in module elfpy)": [[2, "elfpy.LABELPAD"]], "largesize (in module elfpy)": [[2, "elfpy.LARGESIZE"]], "legendloc (in module elfpy)": [[2, "elfpy.LEGENDLOC"]], "linewidth (in module elfpy)": [[2, "elfpy.LINEWIDTH"]], "margin (in module elfpy)": [[2, "elfpy.MARGIN"]], "mathtext (in module elfpy)": [[2, "elfpy.MATHTEXT"]], "smallsize (in module elfpy)": [[2, "elfpy.SMALLSIZE"]], "tickdir (in module elfpy)": [[2, "elfpy.TICKDIR"]], "ticklen (in module elfpy)": [[2, "elfpy.TICKLEN"]], "ticklenratio (in module elfpy)": [[2, "elfpy.TICKLENRATIO"]], "tickminor (in module elfpy)": [[2, "elfpy.TICKMINOR"]], "tickpad (in module elfpy)": [[2, "elfpy.TICKPAD"]], "tickwidthratio (in module elfpy)": [[2, "elfpy.TICKWIDTHRATIO"]], "titlepad (in module elfpy)": [[2, "elfpy.TITLEPAD"]], "titleweight (in module elfpy)": [[2, "elfpy.TITLEWEIGHT"]], "white (in module elfpy)": [[2, "elfpy.WHITE"]], "zlines (in module elfpy)": [[2, "elfpy.ZLINES"]], "zpatches (in module elfpy)": [[2, "elfpy.ZPATCHES"]], "rc_params (in module elfpy)": [[2, "elfpy.rc_params"]], "market (class in elfpy.markets)": [[3, "elfpy.markets.Market"]], "add_liquidity() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.add_liquidity"]], "check_action_type() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.check_action_type"]], "close_long() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.close_long"]], "close_short() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.close_short"]], "elfpy.markets": [[3, "module-elfpy.markets"]], "get_market_state_string() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.get_market_state_string"]], "log_market_step_string() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.log_market_step_string"]], "open_long() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.open_long"]], "open_short() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.open_short"]], "rate (elfpy.markets.market property)": [[3, "elfpy.markets.Market.rate"]], "remove_liquidity() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.remove_liquidity"]], "spot_price (elfpy.markets.market property)": [[3, "elfpy.markets.Market.spot_price"]], "tick() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.tick"]], "trade_and_update() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.trade_and_update"]], "update_market() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.update_market"]], "elfpy.policies": [[4, "module-elfpy.policies"]], "policy (class in elfpy.policies.init_lp)": [[5, "elfpy.policies.init_lp.Policy"]], "action() (elfpy.policies.init_lp.policy method)": [[5, "elfpy.policies.init_lp.Policy.action"]], "elfpy.policies.init_lp": [[5, "module-elfpy.policies.init_lp"]], "policy (class in elfpy.policies.lp_and_withdraw)": [[6, "elfpy.policies.lp_and_withdraw.Policy"]], "action() (elfpy.policies.lp_and_withdraw.policy method)": [[6, "elfpy.policies.lp_and_withdraw.Policy.action"]], "elfpy.policies.lp_and_withdraw": [[6, "module-elfpy.policies.lp_and_withdraw"]], "noaction (class in elfpy.policies.no_action)": [[7, "elfpy.policies.no_action.NoAction"]], "action() (elfpy.policies.no_action.noaction method)": [[7, "elfpy.policies.no_action.NoAction.action"]], "elfpy.policies.no_action": [[7, "module-elfpy.policies.no_action"]], "policy (class in elfpy.policies.single_long)": [[8, "elfpy.policies.single_long.Policy"]], "action() (elfpy.policies.single_long.policy method)": [[8, "elfpy.policies.single_long.Policy.action"]], "elfpy.policies.single_long": [[8, "module-elfpy.policies.single_long"]], "policy (class in elfpy.policies.single_lp)": [[9, "elfpy.policies.single_lp.Policy"]], "action() (elfpy.policies.single_lp.policy method)": [[9, "elfpy.policies.single_lp.Policy.action"]], "elfpy.policies.single_lp": [[9, "module-elfpy.policies.single_lp"]], "policy (class in elfpy.policies.single_short)": [[10, "elfpy.policies.single_short.Policy"]], "action() (elfpy.policies.single_short.policy method)": [[10, "elfpy.policies.single_short.Policy.action"]], "elfpy.policies.single_short": [[10, "module-elfpy.policies.single_short"]], "pricingmodel (class in elfpy.pricing_models.base)": [[11, "elfpy.pricing_models.base.PricingModel"]], "calc_apr_from_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_apr_from_reserves"]], "calc_bond_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_bond_reserves"]], "calc_in_given_out() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_in_given_out"]], "calc_liquidity() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_liquidity"]], "calc_lp_in_given_tokens_out() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_lp_in_given_tokens_out"]], "calc_lp_out_given_tokens_in() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_lp_out_given_tokens_in"]], "calc_out_given_in() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_out_given_in"]], "calc_share_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_share_reserves"]], "calc_spot_price_from_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_spot_price_from_reserves"]], "calc_time_stretch() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_time_stretch"]], "calc_tokens_out_given_lp_in() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_tokens_out_given_lp_in"]], "calc_total_liquidity_from_reserves_and_price() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.calc_total_liquidity_from_reserves_and_price"]], "check_input_assertions() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.check_input_assertions"]], "check_output_assertions() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.check_output_assertions"]], "elfpy.pricing_models.base": [[11, "module-elfpy.pricing_models.base"]], "get_max_long() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.get_max_long"]], "get_max_short() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.get_max_short"]], "model_name() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.model_name"]], "model_type() (elfpy.pricing_models.base.pricingmodel method)": [[11, "elfpy.pricing_models.base.PricingModel.model_type"]], "hyperdrivepricingmodel (class in elfpy.pricing_models.hyperdrive)": [[12, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel"]], "calc_in_given_out() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[12, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.calc_in_given_out"]], "calc_out_given_in() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[12, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.calc_out_given_in"]], "elfpy.pricing_models.hyperdrive": [[12, "module-elfpy.pricing_models.hyperdrive"]], "model_name() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[12, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.model_name"]], "model_type() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[12, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.model_type"]], "elfpy.pricing_models": [[13, "module-elfpy.pricing_models"]], "yieldspacepricingmodel (class in elfpy.pricing_models.yieldspace)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel"]], "calc_in_given_out() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_in_given_out"]], "calc_lp_in_given_tokens_out() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_lp_in_given_tokens_out"]], "calc_lp_out_given_tokens_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_lp_out_given_tokens_in"]], "calc_out_given_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_out_given_in"]], "calc_tokens_out_given_lp_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_tokens_out_given_lp_in"]], "elfpy.pricing_models.yieldspace": [[14, "module-elfpy.pricing_models.yieldspace"]], "model_name() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.model_name"]], "model_type() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[14, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.model_type"]], "simulator (class in elfpy.simulators)": [[15, "elfpy.simulators.Simulator"]], "add_agents() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.add_agents"]], "check_vault_apr() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.check_vault_apr"]], "collect_and_execute_trades() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.collect_and_execute_trades"]], "collect_liquidation_trades() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.collect_liquidation_trades"]], "collect_trades() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.collect_trades"]], "elfpy.simulators": [[15, "module-elfpy.simulators"]], "execute_trades() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.execute_trades"]], "get_simulation_state_string() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.get_simulation_state_string"]], "log_config_variables() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.log_config_variables"]], "market_step_size() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.market_step_size"]], "run_simulation() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.run_simulation"]], "set_rng() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.set_rng"]], "update_simulation_state() (elfpy.simulators.simulator method)": [[15, "elfpy.simulators.Simulator.update_simulation_state"]], "add_liquidity (elfpy.types.marketactiontype attribute)": [[16, "elfpy.types.MarketActionType.ADD_LIQUIDITY"]], "agenttraderesult (class in elfpy.types)": [[16, "elfpy.types.AgentTradeResult"]], "base (elfpy.types.tokentype attribute)": [[16, "elfpy.types.TokenType.BASE"]], "close_long (elfpy.types.marketactiontype attribute)": [[16, "elfpy.types.MarketActionType.CLOSE_LONG"]], "close_short (elfpy.types.marketactiontype attribute)": [[16, "elfpy.types.MarketActionType.CLOSE_SHORT"]], "max_reserves_difference (in module elfpy.types)": [[16, "elfpy.types.MAX_RESERVES_DIFFERENCE"]], "marketaction (class in elfpy.types)": [[16, "elfpy.types.MarketAction"]], "marketactiontype (class in elfpy.types)": [[16, "elfpy.types.MarketActionType"]], "marketdeltas (class in elfpy.types)": [[16, "elfpy.types.MarketDeltas"]], "marketstate (class in elfpy.types)": [[16, "elfpy.types.MarketState"]], "markettraderesult (class in elfpy.types)": [[16, "elfpy.types.MarketTradeResult"]], "open_long (elfpy.types.marketactiontype attribute)": [[16, "elfpy.types.MarketActionType.OPEN_LONG"]], "open_short (elfpy.types.marketactiontype attribute)": [[16, "elfpy.types.MarketActionType.OPEN_SHORT"]], "pt (elfpy.types.tokentype attribute)": [[16, "elfpy.types.TokenType.PT"]], "quantity (class in elfpy.types)": [[16, "elfpy.types.Quantity"]], "remove_liquidity (elfpy.types.marketactiontype attribute)": [[16, "elfpy.types.MarketActionType.REMOVE_LIQUIDITY"]], "randomsimulationvariables (class in elfpy.types)": [[16, "elfpy.types.RandomSimulationVariables"]], "simulationstate (class in elfpy.types)": [[16, "elfpy.types.SimulationState"]], "stretchedtime (class in elfpy.types)": [[16, "elfpy.types.StretchedTime"]], "tokentype (class in elfpy.types)": [[16, "elfpy.types.TokenType"]], "tradebreakdown (class in elfpy.types)": [[16, "elfpy.types.TradeBreakdown"]], "traderesult (class in elfpy.types)": [[16, "elfpy.types.TradeResult"]], "wei (in module elfpy.types)": [[16, "elfpy.types.WEI"]], "action_type (elfpy.types.marketaction attribute)": [[16, "elfpy.types.MarketAction.action_type"]], "amount (elfpy.types.quantity attribute)": [[16, "elfpy.types.Quantity.amount"]], "apply_delta() (elfpy.types.marketstate method)": [[16, "elfpy.types.MarketState.apply_delta"]], "base_asset_price (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.base_asset_price"]], "base_buffer (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.base_buffer"]], "block_number (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.block_number"]], "block_timestamp (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.block_timestamp"]], "bond_buffer (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.bond_buffer"]], "bond_reserves (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.bond_reserves"]], "breakdown (elfpy.types.traderesult attribute)": [[16, "elfpy.types.TradeResult.breakdown"]], "current_market_datetime (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.current_market_datetime"]], "current_market_yearfrac (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.current_market_yearfrac"]], "d_base (elfpy.types.agenttraderesult attribute)": [[16, "elfpy.types.AgentTradeResult.d_base"]], "d_base (elfpy.types.markettraderesult attribute)": [[16, "elfpy.types.MarketTradeResult.d_base"]], "d_base_asset (elfpy.types.marketdeltas attribute)": [[16, "elfpy.types.MarketDeltas.d_base_asset"]], "d_base_buffer (elfpy.types.marketdeltas attribute)": [[16, "elfpy.types.MarketDeltas.d_base_buffer"]], "d_bond_buffer (elfpy.types.marketdeltas attribute)": [[16, "elfpy.types.MarketDeltas.d_bond_buffer"]], "d_bonds (elfpy.types.agenttraderesult attribute)": [[16, "elfpy.types.AgentTradeResult.d_bonds"]], "d_bonds (elfpy.types.markettraderesult attribute)": [[16, "elfpy.types.MarketTradeResult.d_bonds"]], "d_lp_reserves (elfpy.types.marketdeltas attribute)": [[16, "elfpy.types.MarketDeltas.d_lp_reserves"]], "d_share_price (elfpy.types.marketdeltas attribute)": [[16, "elfpy.types.MarketDeltas.d_share_price"]], "d_token_asset (elfpy.types.marketdeltas attribute)": [[16, "elfpy.types.MarketDeltas.d_token_asset"]], "daily_block_number (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.daily_block_number"]], "day (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.day"]], "days (elfpy.types.stretchedtime property)": [[16, "elfpy.types.StretchedTime.days"]], "elfpy.types": [[16, "module-elfpy.types"]], "fee (elfpy.types.tradebreakdown attribute)": [[16, "elfpy.types.TradeBreakdown.fee"]], "fee_percent (elfpy.types.randomsimulationvariables attribute)": [[16, "elfpy.types.RandomSimulationVariables.fee_percent"]], "fee_percent (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.fee_percent"]], "floor_fee (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.floor_fee"]], "init_share_price (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.init_share_price"]], "init_share_price (elfpy.types.randomsimulationvariables attribute)": [[16, "elfpy.types.RandomSimulationVariables.init_share_price"]], "init_vault_age (elfpy.types.randomsimulationvariables attribute)": [[16, "elfpy.types.RandomSimulationVariables.init_vault_age"]], "init_vault_age (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.init_vault_age"]], "lp_reserves (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.lp_reserves"]], "market_result (elfpy.types.traderesult attribute)": [[16, "elfpy.types.TradeResult.market_result"]], "market_step_size (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.market_step_size"]], "mint_time (elfpy.types.marketaction attribute)": [[16, "elfpy.types.MarketAction.mint_time"]], "model_name (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.model_name"]], "normalized_time (elfpy.types.stretchedtime property)": [[16, "elfpy.types.StretchedTime.normalized_time"]], "num_blocks_per_day (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.num_blocks_per_day"]], "num_trading_days (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.num_trading_days"]], "pool_apr (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.pool_apr"]], "position_duration (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.position_duration"]], "run_number (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.run_number"]], "run_trade_number (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.run_trade_number"]], "share_price (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.share_price"]], "share_reserves (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.share_reserves"]], "simulation_start_time (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.simulation_start_time"]], "spot_price (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.spot_price"]], "stretched_time (elfpy.types.stretchedtime property)": [[16, "elfpy.types.StretchedTime.stretched_time"]], "target_liquidity (elfpy.types.randomsimulationvariables attribute)": [[16, "elfpy.types.RandomSimulationVariables.target_liquidity"]], "target_liquidity (elfpy.types.simulationstate attribute)": [[16, "elfpy.types.SimulationState.target_liquidity"]], "target_pool_apr (elfpy.types.randomsimulationvariables attribute)": [[16, "elfpy.types.RandomSimulationVariables.target_pool_apr"]], "time_stretch (elfpy.types.stretchedtime property)": [[16, "elfpy.types.StretchedTime.time_stretch"]], "to_description() (in module elfpy.types)": [[16, "elfpy.types.to_description"]], "trade_amount (elfpy.types.marketaction attribute)": [[16, "elfpy.types.MarketAction.trade_amount"]], "unit (elfpy.types.quantity attribute)": [[16, "elfpy.types.Quantity.unit"]], "update_agent_wallet() (elfpy.types.simulationstate method)": [[16, "elfpy.types.SimulationState.update_agent_wallet"]], "update_market_state() (elfpy.types.simulationstate method)": [[16, "elfpy.types.SimulationState.update_market_state"]], "user_result (elfpy.types.traderesult attribute)": [[16, "elfpy.types.TradeResult.user_result"]], "vault_apr (elfpy.types.marketstate attribute)": [[16, "elfpy.types.MarketState.vault_apr"]], "vault_apr (elfpy.types.randomsimulationvariables attribute)": [[16, "elfpy.types.RandomSimulationVariables.vault_apr"]], "wallet_address (elfpy.types.marketaction attribute)": [[16, "elfpy.types.MarketAction.wallet_address"]], "with_fee (elfpy.types.tradebreakdown attribute)": [[16, "elfpy.types.TradeBreakdown.with_fee"]], "without_fee (elfpy.types.tradebreakdown attribute)": [[16, "elfpy.types.TradeBreakdown.without_fee"]], "without_fee_or_slippage (elfpy.types.tradebreakdown attribute)": [[16, "elfpy.types.TradeBreakdown.without_fee_or_slippage"]], "ammconfig (class in elfpy.utils.config)": [[17, "elfpy.utils.config.AMMConfig"]], "config (class in elfpy.utils.config)": [[17, "elfpy.utils.config.Config"]], "marketconfig (class in elfpy.utils.config)": [[17, "elfpy.utils.config.MarketConfig"]], "simulatorconfig (class in elfpy.utils.config)": [[17, "elfpy.utils.config.SimulatorConfig"]], "agent_policies (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.agent_policies"]], "amm (elfpy.utils.config.config attribute)": [[17, "elfpy.utils.config.Config.amm"]], "base_asset_price (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.base_asset_price"]], "compound_vault_apr (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.compound_vault_apr"]], "elfpy.utils.config": [[17, "module-elfpy.utils.config"]], "floor_fee (elfpy.utils.config.ammconfig attribute)": [[17, "elfpy.utils.config.AMMConfig.floor_fee"]], "get_random_variables() (in module elfpy.utils.config)": [[17, "elfpy.utils.config.get_random_variables"]], "init_lp (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.init_lp"]], "init_vault_age (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.init_vault_age"]], "logging_level (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.logging_level"]], "market (elfpy.utils.config.config attribute)": [[17, "elfpy.utils.config.Config.market"]], "max_fee (elfpy.utils.config.ammconfig attribute)": [[17, "elfpy.utils.config.AMMConfig.max_fee"]], "max_pool_apr (elfpy.utils.config.ammconfig attribute)": [[17, "elfpy.utils.config.AMMConfig.max_pool_apr"]], "max_target_liquidity (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.max_target_liquidity"]], "max_target_volume (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.max_target_volume"]], "max_vault_age (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.max_vault_age"]], "min_fee (elfpy.utils.config.ammconfig attribute)": [[17, "elfpy.utils.config.AMMConfig.min_fee"]], "min_pool_apr (elfpy.utils.config.ammconfig attribute)": [[17, "elfpy.utils.config.AMMConfig.min_pool_apr"]], "min_target_liquidity (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.min_target_liquidity"]], "min_target_volume (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.min_target_volume"]], "min_vault_age (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.min_vault_age"]], "num_blocks_per_day (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.num_blocks_per_day"]], "num_trading_days (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.num_trading_days"]], "precision (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.precision"]], "pricing_model_name (elfpy.utils.config.ammconfig attribute)": [[17, "elfpy.utils.config.AMMConfig.pricing_model_name"]], "random_seed (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.random_seed"]], "rng (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.rng"]], "setup_vault_apr() (in module elfpy.utils.config)": [[17, "elfpy.utils.config.setup_vault_apr"]], "shuffle_users (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.shuffle_users"]], "simulator (elfpy.utils.config.config attribute)": [[17, "elfpy.utils.config.Config.simulator"]], "token_duration (elfpy.utils.config.simulatorconfig attribute)": [[17, "elfpy.utils.config.SimulatorConfig.token_duration"]], "vault_apr (elfpy.utils.config.marketconfig attribute)": [[17, "elfpy.utils.config.MarketConfig.vault_apr"]], "elfpy.utils": [[18, "module-elfpy.utils"]], "customencoder (class in elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.CustomEncoder"]], "annotate() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.annotate"]], "clear_axes() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.clear_axes"]], "clear_axis() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.clear_axis"]], "close_logging() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.close_logging"]], "default() (elfpy.utils.outputs.customencoder method)": [[19, "elfpy.utils.outputs.CustomEncoder.default"]], "delete_log_file() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.delete_log_file"]], "elfpy.utils.outputs": [[19, "module-elfpy.utils.outputs"]], "format_axis() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.format_axis"]], "get_gridspec_subplots() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.get_gridspec_subplots"]], "plot_longs_and_shorts() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.plot_longs_and_shorts"]], "plot_market_lp_reserves() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.plot_market_lp_reserves"]], "plot_market_spot_price() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.plot_market_spot_price"]], "plot_pool_apr() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.plot_pool_apr"]], "plot_wallet_returns() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.plot_wallet_returns"]], "setup_logging() (in module elfpy.utils.outputs)": [[19, "elfpy.utils.outputs.setup_logging"]], "elfpy.utils.parse_config": [[20, "module-elfpy.utils.parse_config"]], "load_and_parse_config_file() (in module elfpy.utils.parse_config)": [[20, "elfpy.utils.parse_config.load_and_parse_config_file"]], "load_config_file() (in module elfpy.utils.parse_config)": [[20, "elfpy.utils.parse_config.load_config_file"]], "override_config_variables() (in module elfpy.utils.parse_config)": [[20, "elfpy.utils.parse_config.override_config_variables"]], "parse_simulation_config() (in module elfpy.utils.parse_config)": [[20, "elfpy.utils.parse_config.parse_simulation_config"]], "text_to_logging_level() (in module elfpy.utils.parse_config)": [[20, "elfpy.utils.parse_config.text_to_logging_level"]], "aggregate_trade_data() (in module elfpy.utils.post_processing)": [[21, "elfpy.utils.post_processing.aggregate_trade_data"]], "compute_derived_variables() (in module elfpy.utils.post_processing)": [[21, "elfpy.utils.post_processing.compute_derived_variables"]], "elfpy.utils.post_processing": [[21, "module-elfpy.utils.post_processing"]], "get_simulation_state_df() (in module elfpy.utils.post_processing)": [[21, "elfpy.utils.post_processing.get_simulation_state_df"]], "calc_apr_from_spot_price() (in module elfpy.utils.price)": [[22, "elfpy.utils.price.calc_apr_from_spot_price"]], "calc_spot_price_from_apr() (in module elfpy.utils.price)": [[22, "elfpy.utils.price.calc_spot_price_from_apr"]], "elfpy.utils.price": [[22, "module-elfpy.utils.price"]], "elfpy.utils.sim_utils": [[23, "module-elfpy.utils.sim_utils"]], "get_init_lp_agent() (in module elfpy.utils.sim_utils)": [[23, "elfpy.utils.sim_utils.get_init_lp_agent"]], "get_market() (in module elfpy.utils.sim_utils)": [[23, "elfpy.utils.sim_utils.get_market"]], "get_pricing_model() (in module elfpy.utils.sim_utils)": [[23, "elfpy.utils.sim_utils.get_pricing_model"]], "get_simulator() (in module elfpy.utils.sim_utils)": [[23, "elfpy.utils.sim_utils.get_simulator"]], "override_random_variables() (in module elfpy.utils.sim_utils)": [[23, "elfpy.utils.sim_utils.override_random_variables"]], "block_number_to_datetime() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.block_number_to_datetime"]], "current_datetime() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.current_datetime"]], "days_to_time_remaining() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.days_to_time_remaining"]], "elfpy.utils.time": [[24, "module-elfpy.utils.time"]], "get_yearfrac_remaining() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.get_yearfrac_remaining"]], "norm_days() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.norm_days"]], "stretch_time() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.stretch_time"]], "time_to_days_remaining() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.time_to_days_remaining"]], "unnorm_days() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.unnorm_days"]], "unstretch_time() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.unstretch_time"]], "yearfrac_as_datetime() (in module elfpy.utils.time)": [[24, "elfpy.utils.time.yearfrac_as_datetime"]], "long (class in elfpy.wallet)": [[25, "elfpy.wallet.Long"]], "short (class in elfpy.wallet)": [[25, "elfpy.wallet.Short"]], "wallet (class in elfpy.wallet)": [[25, "elfpy.wallet.Wallet"]], "address (elfpy.wallet.wallet attribute)": [[25, "elfpy.wallet.Wallet.address"]], "balance (elfpy.wallet.long attribute)": [[25, "elfpy.wallet.Long.balance"]], "balance (elfpy.wallet.short attribute)": [[25, "elfpy.wallet.Short.balance"]], "base (elfpy.wallet.wallet attribute)": [[25, "elfpy.wallet.Wallet.base"]], "elfpy.wallet": [[25, "module-elfpy.wallet"]], "fees_paid (elfpy.wallet.wallet attribute)": [[25, "elfpy.wallet.Wallet.fees_paid"]], "longs (elfpy.wallet.wallet attribute)": [[25, "elfpy.wallet.Wallet.longs"]], "lp_tokens (elfpy.wallet.wallet attribute)": [[25, "elfpy.wallet.Wallet.lp_tokens"]], "margin (elfpy.wallet.short attribute)": [[25, "elfpy.wallet.Short.margin"]], "shorts (elfpy.wallet.wallet attribute)": [[25, "elfpy.wallet.Wallet.shorts"]], "state (elfpy.wallet.wallet property)": [[25, "elfpy.wallet.Wallet.state"]]}})