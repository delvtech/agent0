Search.setIndex({"docnames": ["_autosummary/elfpy", "autoapi/elfpy/agent/index", "autoapi/elfpy/index", "autoapi/elfpy/markets/index", "autoapi/elfpy/pricing_models/base/index", "autoapi/elfpy/pricing_models/hyperdrive/index", "autoapi/elfpy/pricing_models/index", "autoapi/elfpy/pricing_models/yieldspace/index", "autoapi/elfpy/simulators/index", "autoapi/elfpy/types/index", "autoapi/elfpy/utils/config/index", "autoapi/elfpy/utils/index", "autoapi/elfpy/utils/outputs/index", "autoapi/elfpy/utils/parse_config/index", "autoapi/elfpy/utils/post_processing/index", "autoapi/elfpy/utils/price/index", "autoapi/elfpy/utils/sim_utils/index", "autoapi/elfpy/utils/time/index", "autoapi/elfpy/wallet/index", "autoapi/index", "autoapi/init_lp/index", "autoapi/lp_and_withdraw/index", "autoapi/no_action/index", "autoapi/single_long/index", "autoapi/single_lp/index", "autoapi/single_short/index", "index"], "filenames": ["_autosummary/elfpy.rst", "autoapi/elfpy/agent/index.rst", "autoapi/elfpy/index.rst", "autoapi/elfpy/markets/index.rst", "autoapi/elfpy/pricing_models/base/index.rst", "autoapi/elfpy/pricing_models/hyperdrive/index.rst", "autoapi/elfpy/pricing_models/index.rst", "autoapi/elfpy/pricing_models/yieldspace/index.rst", "autoapi/elfpy/simulators/index.rst", "autoapi/elfpy/types/index.rst", "autoapi/elfpy/utils/config/index.rst", "autoapi/elfpy/utils/index.rst", "autoapi/elfpy/utils/outputs/index.rst", "autoapi/elfpy/utils/parse_config/index.rst", "autoapi/elfpy/utils/post_processing/index.rst", "autoapi/elfpy/utils/price/index.rst", "autoapi/elfpy/utils/sim_utils/index.rst", "autoapi/elfpy/utils/time/index.rst", "autoapi/elfpy/wallet/index.rst", "autoapi/index.rst", "autoapi/init_lp/index.rst", "autoapi/lp_and_withdraw/index.rst", "autoapi/no_action/index.rst", "autoapi/single_long/index.rst", "autoapi/single_lp/index.rst", "autoapi/single_short/index.rst", "index.rst"], "titles": ["elfpy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.agent</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.markets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.hyperdrive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.yieldspace</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.simulators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.outputs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.parse_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.post_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.price</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.sim_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.wallet</span></code>", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">init_lp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lp_and_withdraw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">no_action</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">single_long</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">single_lp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">single_short</span></code>", "Welcome to elfpy\u2019s documentation!"], "terms": {"implement": [1, 16, 18, 20, 21, 22, 24, 25], "abstract": [1, 4, 18], "class": [13, 14, 16], "control": [1, 18], "agent": [2, 3, 8, 9, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25], "behavior": [1, 12, 18], "wallet_address": [1, 3, 9, 20, 21, 22, 23, 24, 25], "budget": [1, 20, 21, 22, 23, 24, 25], "base": [1, 2, 3, 5, 6, 7, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "object": [1, 8, 9, 10, 12, 13, 16], "ha": [1, 3, 12, 17, 18, 20, 21, 23, 24, 25], "i": [1, 3, 4, 5, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22], "dict": [1, 9, 10, 13, 16, 18], "kei": [1, 8, 9, 10, 13, 14, 16, 18], "date": 1, "valu": [1, 2, 3, 4, 8, 9, 10, 16, 17, 18], "an": [1, 3, 5, 7, 9, 12, 13, 16, 18, 22], "int": [1, 3, 8, 9, 10, 12, 13, 17, 18, 22], "how": [1, 3, 4, 7, 16], "mani": [1, 4, 7], "token": [1, 3, 4, 5, 7, 9, 12, 16, 17, 18], "thei": [1, 3], "have": [1, 3, 8, 12, 16], "market": [1, 2, 4, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25], "thi": [1, 3, 4, 5, 7, 8, 9, 12, 16, 18, 19], "trade": [1, 3, 4, 5, 7, 8, 9, 12, 14, 16, 22], "type": [1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "rng": [1, 8, 10], "random": [1, 8, 9, 10, 16], "number": [1, 3, 8, 10, 12, 17], "gener": [1, 8, 10, 19], "us": [1, 3, 4, 5, 7, 8, 9, 10, 16, 17, 20], "variou": 1, "simul": [1, 2, 3, 4, 9, 10, 12, 13, 14, 16, 17, 19], "function": [1, 3, 4, 8], "numpi": [1, 8, 10], "_gener": [1, 8], "id": [1, 8], "identifi": [1, 4, 5, 7], "specif": [1, 3, 8, 9, 10], "amount": [1, 3, 4, 5, 7, 9, 16, 17, 18, 20, 23], "asset": [1, 4, 5, 7, 12, 15, 18], "avail": 1, "spend": 1, "float": [1, 3, 4, 5, 7, 8, 9, 10, 15, 16, 17, 18, 22], "last_update_spend": 1, "time": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25], "rel": [1, 17], "yearfrac": [1, 15, 17], "when": [1, 3, 4, 18, 21], "last": 1, "made": 1, "track": [1, 8], "pnl": 1, "product_of_time_and_bas": 1, "helper": [1, 3, 9, 12, 14, 16, 17], "attribut": 1, "over": [1, 12, 14], "wallet": [1, 2, 3, 8, 9, 12, 19], "which": [1, 3, 8, 12, 14, 17, 18, 22], "balanc": [1, 18], "create_agent_act": 1, "action_typ": [1, 3, 9], "marketactiontyp": [1, 3, 9], "trade_amount": [1, 3, 9], "mint_tim": [1, 3, 9, 17], "0": [1, 2, 3, 4, 9, 15, 16, 17, 18], "marketact": [1, 3, 8, 9, 22], "creat": [1, 9, 19], "return": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 22], "repres": 1, "can": [1, 3, 4, 5, 7, 8, 9, 16, 20, 21, 24, 25], "make": [1, 12], "action": [1, 3, 9, 16, 20, 21, 22, 23, 24, 25], "self": [8, 9, 18], "list": [1, 8, 9, 10, 12, 16, 22], "execut": [1, 3, 8, 9], "polici": [1, 20, 21, 22, 23, 24, 25], "get_max_long": [1, 4], "approxim": 1, "maximum": [1, 4], "amoun": [], "long": [1, 4, 12, 17, 18, 23, 25], "given": [3, 4, 5, 7, 15, 17], "current": [1, 3, 4, 5, 7, 8, 15, 17, 18], "condit": 3, "get_max_short": [1, 4], "short": [1, 3, 4, 12, 16, 18, 20, 25], "get_trade_list": [], "comput": [1, 3, 4, 7, 8, 9, 14, 16], "update_spend": [], "none": [1, 3, 8, 9, 12, 16, 18], "weight": 3, "averag": [], "calcul": [4, 5, 7, 15, 16, 17], "update_wallet": 1, "wallet_delta": 1, "updat": [1, 3, 8, 9], "get_liquidation_trad": 1, "get": [1, 8, 9, 16, 17], "final": [1, 8], "liquid": [1, 3, 4, 8, 16, 21, 24, 25], "posit": [1, 4, 15, 18, 23], "log_status_report": 1, "log": [1, 3, 12, 13], "user": [1, 3, 4, 5, 7, 9, 10, 13, 18, 20, 21, 22, 23, 24, 25], "state": [1, 3, 4, 5, 7, 8, 9, 18], "log_final_report": 1, "report": 1, "paramet": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18], "method": [1, 3, 4, 9], "must": [1, 3, 5, 7, 8, 13], "one": [1, 16, 20, 21, 23, 24, 25], "support": [1, 4], "relev": [1, 12], "were": 1, "mint": [1, 3, 4, 7, 16, 17], "The": [1, 3, 4, 5, 7, 8, 9, 16, 18], "contain": [1, 3, 4, 8, 9, 10, 12, 13, 14, 16, 19], "detail": [1, 3, 9, 16], "about": [1, 9], "param": [], "meant": 1, "specifi": [1, 5, 7, 9, 13, 16, 23], "from": [1, 3, 4, 7, 8, 12, 15, 16, 17, 22], "enter": 1, "bond": [1, 3, 4, 5, 7, 15, 16, 18, 20], "get_trad": 1, "direct": [1, 8], "chosen": 1, "logic": [1, 3], "open": [1, 3, 16, 18, 20, 21, 23, 24, 25], "we": [1, 3, 9], "calcoutgivenin": 1, "becaus": 1, "know": 1, "much": [1, 3, 16], "want": [1, 5, 7], "care": 1, "less": [1, 17], "exit": 1, "close": [1, 3, 12, 23, 25], "calcingivenout": 1, "what": [1, 18], "pricing_model": [1, 2, 3, 16, 19], "pricingmodel": [1, 3, 4, 7, 8, 16], "price": [1, 2, 3, 4, 5, 7, 8, 11, 14, 16, 19], "model": [1, 3, 4, 5, 7, 8, 16], "hold": [1, 3], "It": [1, 3], "accord": [1, 3, 17], "pass": [1, 4, 16, 21, 23], "order": [1, 8], "where": 1, "applic": 1, "store": [3, 8, 10, 18], "inform": [3, 9], "interfac": 3, "amm": [3, 4, 5, 7, 8, 9, 10, 13], "market_st": [3, 4, 5, 7, 9], "marketst": [3, 4, 5, 7, 9], "share_reserv": [3, 4, 9], "bond_reserv": [3, 4, 9], "base_buff": [3, 9], "bond_buff": [3, 9], "lp_reserv": [3, 9], "vault_apr": [3, 8, 9, 10, 16], "share_pric": [3, 4, 9], "1": [2, 3, 4, 5, 7, 8, 9, 12, 16, 17, 19, 20], "init_share_pric": [3, 4, 9, 16], "position_dur": [3, 4, 9, 16], "stretchedtim": [3, 4, 5, 7, 9, 15], "fee_perc": [3, 4, 5, 7, 9, 16], "variabl": [3, 4, 5, 7, 8, 9, 10, 13, 14, 16, 18], "also": 3, "some": [3, 14], "assess": 3, "rate": [3, 4, 7], "apr": [3, 4, 10, 12, 15, 16], "spot_pric": [3, 9], "share": [3, 4, 5, 7, 16, 20], "reserv": [3, 4, 5, 7, 12, 16, 20], "check_action_typ": 3, "pricing_model_nam": [3, 10], "ensur": [3, 4], "allow": [3, 10], "see": 3, "all": [3, 8], "accept": 3, "perform": [3, 5, 9, 16, 22], "str": [3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 18], "name": [3, 4, 5, 7, 16], "hyperdr": [2, 3, 6, 16, 19], "yieldspac": [2, 3, 4, 5, 6, 16, 19], "trade_and_upd": 3, "agent_act": 3, "check": 3, "6": [2, 3, 16], "ar": [3, 4, 5, 7, 8, 9, 16], "being": 3, "handl": 3, "each": [3, 8, 9, 12, 16, 22], "case": [3, 5, 7], "open_long": [3, 9], "close_long": [3, 9], "open_short": [3, 9], "close_short": [3, 9], "add_liquid": [3, 9], "new": [3, 8, 9], "delta": [3, 5, 7, 9], "its": [1, 3, 4], "pool": [3, 4, 15, 16, 17], "address": [3, 18], "lp": [3, 4, 7, 12, 16, 18, 20, 21, 24], "fungibl": 3, "eas": 3, "remove_liquid": [3, 9], "figur": [3, 12], "out": [2, 3, 4, 5, 7], "contribut": 3, "calcualt": 3, "fee": [3, 4, 5, 7, 9, 16, 18], "resolv": 3, "add": [3, 4, 9, 12, 21, 24], "option": [3, 8, 10, 12, 16], "update_market": 3, "market_delta": 3, "increment": [3, 8], "member": [3, 4, 5, 7, 8, 13, 14, 16], "reflect": 3, "marketdelta": [3, 9], "properti": [3, 9, 18], "get_market_state_str": 3, "format": [3, 4, 8, 9, 12, 17], "string": [2, 3, 8, 12, 13], "tick": [3, 12], "delta_tim": 3, "need": [3, 17, 18], "margin": [2, 3, 18], "account": [3, 16], "cover": 3, "worst": 3, "scenario": 3, "p": [3, 4], "come": 3, "2": [2, 3, 7], "sourc": [3, 4], "proce": 3, "your": 3, "sale": 3, "max": 3, "you": [3, 20, 21, 24, 25], "depost": 3, "two": 3, "compon": 3, "both": [3, 12], "yet": 3, "happili": 3, "up": [3, 4, 8, 16, 18], "unit": [3, 4, 5, 7, 9, 15, 17], "so": [3, 8, 16], "follow": [3, 4], "ident": [3, 8], "total": [3, 4, 9, 12, 16, 17], "deposit": [3, 5, 7, 16], "face": 3, "guarante": 3, "system": 3, "alwai": [3, 5, 7], "fulli": 3, "back": 3, "equal": 3, "tupl": [1, 3, 4, 7, 8, 12], "give": 3, "u": 3, "reduc": 3, "longer": 3, "same": [3, 10, 13, 16], "drain": 3, "pai": [3, 5, 7], "bought": 3, "minu": 3, "cost": 3, "bui": 3, "d_base": [3, 4, 7, 9], "trade_result": [3, 4], "user_result": [3, 9], "neg": 3, "more": [3, 16], "take": 3, "spec": 3, "turn": 3, "after": [3, 9, 10, 23], "ad": [3, 5, 7, 18], "remov": [3, 21, 24], "log_market_step_str": 3, "step": 3, "wrap": 8, "experi": 8, "config": [2, 8, 11, 13, 16, 19], "random_simulation_vari": 8, "environ": 8, "output": [2, 5, 7, 8, 11, 14, 16, 19], "experiment": 8, "includ": [8, 9], "input": [4, 5, 7, 8, 13, 16], "set": [4, 8, 9, 12, 16, 18], "rang": 8, "To": [8, 16], "conjunct": 8, "util": [2, 8, 19], "randomsimulationvari": [8, 9, 10, 13, 16], "check_vault_apr": 8, "verifi": 8, "right": 8, "length": [8, 10, 17], "set_rng": 8, "assign": [8, 10, 22], "intern": [1, 8], "instanti": [4, 8, 9, 12, 16], "forc": 8, "volum": [4, 8], "across": 8, "run": [8, 10, 12, 16], "construct": [8, 9, 10, 16], "np": 8, "default_rng": 8, "seed": [4, 8], "log_config_vari": 8, "print": 8, "get_simulation_state_str": 8, "state_str": 8, "__dict__": 8, "cast": 8, "separ": [8, 12], "line": [2, 8], "market_step_s": [8, 9], "minimum": 8, "between": [5, 7, 8, 16, 17], "block": [8, 17], "blocks_per_year": 8, "add_ag": 8, "agent_list": 8, "append": [8, 9], "simulation_st": [8, 14], "If": [8, 12], "alreadi": 8, "happen": 8, "run_trade_numb": [8, 9], "empti": [8, 16, 22], "prepend": 8, "still": [8, 17], "easili": 8, "convert": [8, 13, 14, 17, 18], "panda": [8, 14], "datafram": [8, 14], "A": [1, 8, 9, 16], "collect_and_execute_trad": 8, "last_block_in_sim": 8, "fals": [8, 12], "them": 8, "bool": [8, 10, 12], "true": [2, 8, 12], "occur": 8, "collect_trad": 8, "agent_id": 8, "collect": [8, 9, 16], "provid": [4, 5, 7, 8, 15, 16, 17], "ani": [8, 12, 16, 18], "These": 8, "correspond": [8, 13, 16], "regist": 8, "associ": 8, "collect_liquidation_trad": 8, "execute_trad": 8, "run_simul": 8, "dictionari": [8, 13, 14, 16], "primari": 8, "loop": 8, "group": 8, "dai": [4, 8, 9, 12, 14, 16, 17], "num_trading_dai": [8, 9, 10], "There": 8, "doe": 8, "update_simulation_st": 8, "common": 9, "throughtout": 9, "codebas": 9, "to_descript": 9, "descript": [9, 13, 16], "dataclass": [9, 10, 13, 16, 18], "metadata": 9, "tokentyp": 9, "enum": 9, "pt": [4, 5, 7, 9], "descriptor": 9, "quantiti": [4, 5, 7, 9, 12], "time_stretch": [4, 9, 17], "stretch": [4, 5, 7, 9, 16, 17], "normalized_tim": 9, "normal": [9, 17], "stretched_tim": [9, 17], "constant": [4, 5, 7, 9, 17], "d_base_asset": 9, "d_token_asset": 9, "d_base_buff": 9, "d_bond_buff": 9, "d_lp_reserv": 9, "d_share_pric": 9, "chang": [9, 13, 16], "todo": [4, 9, 16, 18], "like": [9, 12], "total_suppli": 9, "apply_delta": 9, "appli": [4, 9], "agenttraderesult": 9, "d_bond": 9, "result": [4, 5, 9, 16], "markettraderesult": 9, "tradebreakdown": 9, "without_fee_or_slippag": 9, "with_fe": 9, "without_fe": 9, "granular": 9, "breakdown": 9, "relat": 9, "slippag": [5, 7, 9, 16], "traderesult": [4, 5, 7, 9], "market_result": 9, "addition": 9, "should": [4, 5, 7, 9, 16, 17], "target_liquid": [4, 9, 16], "target_pool_apr": [9, 16], "init_vault_ag": [9, 10], "dure": 9, "setup": [9, 12, 16, 22], "simulationst": [9, 14], "model_nam": [4, 5, 7, 9, 14, 16], "factori": [], "run_numb": 9, "simulation_start_tim": 9, "block_numb": [9, 17], "daily_block_numb": 9, "block_timestamp": 9, "current_market_datetim": 9, "current_market_yearfrac": 9, "floor_fe": [9, 10], "base_asset_pric": [9, 10], "pool_apr": 9, "num_blocks_per_dai": [9, 10], "update_market_st": 9, "entri": 9, "copi": 9, "update_agent_wallet": 9, "lp_token": 18, "fees_paid": 18, "trader": 18, "held": 18, "paid": [5, 7, 18], "public": 18, "instead": 18, "index": 26, "modul": [2, 26], "search": 26, "page": [19, 26], "elfpi": [19, 20, 21, 22, 23, 24, 25], "": [1, 2, 3, 5, 7, 9, 12, 17, 18], "indic": [8, 22], "api": [], "packag": 0, "defin": [4, 10, 13], "built": [], "aren": [], "t": [5, 7, 16, 24, 25], "directli": [], "access": [], "builtin": [], "functiontyp": [], "alia": [], "lambdatyp": [], "codetyp": [], "code": [], "mappingproxytyp": [], "mappingproxi": [], "simplenamespac": [], "simpl": [20, 21, 23, 24, 25], "namespac": [], "kwarg": 12, "celltyp": [], "cell": [], "generatortyp": [], "coroutinetyp": [], "coroutin": [], "asyncgeneratortyp": [], "async_gener": [], "methodtyp": [], "builtinfunctiontyp": [], "builtin_function_or_method": [], "builtinmethodtyp": [], "wrapperdescriptortyp": [], "wrapper_descriptor": [], "methodwrappertyp": [], "wrapper": 13, "methoddescriptortyp": [], "method_descriptor": [], "classmethoddescriptortyp": [], "classmethod_descriptor": [], "moduletyp": [], "tracebacktyp": [], "frametyp": [], "frame": [], "getsetdescriptortyp": [], "getset_descriptor": [], "memberdescriptortyp": [], "member_descriptor": [], "new_class": [], "kwd": [], "exec_bodi": [], "dynam": [], "appropri": [], "metaclass": [], "resolve_bas": [], "mro": [], "pep": [], "560": [], "prepare_class": [], "call": [1, 12], "__prepare__": [], "3": 2, "prepar": [], "argument": [12, 16], "dynamicclassattribut": [], "fget": [], "fset": [], "fdel": [], "doc": [], "rout": [], "__getattr__": [], "act": [], "differ": [5, 7, 16], "through": [], "instanc": [], "remain": [4, 5, 7, 15, 17], "done": [], "rais": [], "attributeerror": [], "activ": [], "virtual": [], "python": [], "version": [], "4": 2, "9": 2, "subclass": 22, "atribut": [], "treat": [], "properli": [], "inspect": [], "sinc": [16, 17], "10": 12, "delet": 12, "getter": [], "setter": [], "func": [], "regular": [], "genericalia": [], "585": [], "e": [4, 16, 17], "g": [16, 17], "__origin__": [], "__args__": [], "uniontyp": [], "604": [], "union": 10, "ellipsistyp": [], "ellipsi": [], "nonetyp": [], "notimplementedtyp": [], "__init__": [], "initi": [10, 16, 20], "arg": [], "structur": 10, "marketconfig": [10, 13], "min_target_liquid": 10, "1000000": [], "max_target_liquid": 10, "10000000": [], "min_target_volum": 10, "001": [], "max_target_volum": 10, "01": [], "min_vault_ag": 10, "max_vault_ag": 10, "2000": [], "callabl": 10, "ammconfig": [10, 13], "min_fe": 10, "max_fe": 10, "5": [2, 4, 15, 16], "min_pool_apr": 10, "02": [], "max_pool_apr": 10, "simulatorconfig": [10, 13], "180": [], "7200": [], "token_dur": [10, 16, 17], "2465753424657534": [], "shuffle_us": 10, "agent_polici": 10, "init_lp": [10, 12, 16, 19], "compound_vault_apr": 10, "logging_level": 10, "info": 13, "precis": [4, 10], "64": [], "random_se": 10, "data": [1, 10], "setup_vault_apr": 10, "note": [10, 16], "would": [1, 4, 10, 15], "infinit": 10, "small": [10, 16], "modif": [5, 7, 10], "get_random_vari": 10, "deliv": 12, "plot_market_lp_reserv": 12, "plot": 12, "per": [12, 16], "matplotlib": 12, "plot_market_spot_pric": 12, "plot_pool_apr": 12, "plot_longs_and_short": 12, "exclude_first_ag": 12, "xtick_step": 12, "exclud": 12, "first": [12, 16], "usual": 12, "plot_wallet_return": 12, "get_gridspec_subplot": 12, "nrow": 12, "ncol": 12, "ax": 12, "reason": 12, "space": 12, "_ax": [], "gridspec": 12, "row": 12, "column": [12, 14], "keyword": 12, "suppli": [4, 12], "clear_axi": 12, "axi": 12, "spine": 12, "clear": 12, "label": 12, "proplot": 12, "color": 12, "default": [12, 16, 17], "invis": 12, "clear_ax": 12, "iter": [1, 12, 16], "rtype": [], "format_axi": 12, "axis_handl": 12, "xlabel": 12, "fontsiz": [2, 12], "18": [9, 12], "linestyl": 12, "linewidth": [2, 12], "grei": 12, "y": [2, 5, 7, 12], "annot": 12, "text": [5, 7, 12], "major_offset": 12, "minor_offset": 12, "val": 12, "legend": 12, "delete_log_fil": 12, "logger": 12, "handler": 12, "file": [12, 13], "underli": [4, 12], "setup_log": 12, "log_filenam": 12, "max_byt": 12, "2000000": [], "log_level": 12, "20": [], "close_log": 12, "delete_log": 12, "test": [4, 12], "customencod": 12, "skipkei": 12, "ensure_ascii": 12, "check_circular": 12, "allow_nan": 12, "sort_kei": 12, "indent": 12, "jsonencod": 12, "custom": 12, "encod": 12, "json": 12, "dump": 12, "o": 12, "overrid": [12, 16], "constructor": [], "sensibl": [], "typeerror": [], "attempt": [], "item": [], "simpli": [], "skip": [], "incom": [], "non": [], "ascii": [], "charact": [], "escap": [], "circular": [], "refer": [], "prevent": [], "recurs": [], "caus": [], "recursionerror": [], "otherwis": [], "place": [], "nan": [], "infin": [], "compliant": [], "consist": [], "most": 22, "javascript": [], "decod": [], "valueerror": [], "sort": [], "regress": [], "serial": [], "compar": [], "basi": [], "integ": 13, "arrai": [], "element": 16, "pretti": [], "level": [13, 16], "onli": [20, 21, 23, 24, 25], "insert": [], "newlin": [], "compact": [], "represent": [], "item_separ": [], "key_separ": [], "elimin": [], "whitespac": [], "import": [], "foo": [], "bar": [], "baz": [], "iterencod": [], "_one_shot": [], "yield": [4, 5, 7, 16], "For": [], "exampl": [4, 15], "chunk": [], "bigobject": [], "mysocket": [], "write": 4, "pars": 13, "load": 13, "toml": 13, "load_and_parse_config_fil": 13, "config_fil": 13, "absolut": 13, "path": 13, "nest": 13, "load_config_fil": 13, "config_dict": 13, "parse_simulation_config": 13, "text_to_logging_level": 13, "logging_text": 13, "debug": 13, "warn": 13, "error": 13, "critic": 13, "override_config_vari": 13, "override_dict": [13, 16], "replac": 13, "exist": 13, "ones": 13, "field": [13, 16], "post": 14, "process": 14, "get_simulation_state_df": 14, "core": [], "well": 14, "compute_derived_vari": 14, "deriv": 14, "aggregate_trade_data": 14, "aggreg": 14, "mean": 14, "trades_agg": 14, "keep": [4, 14], "spot": [4, 14, 15], "calc_apr_from_spot_pric": 15, "time_remain": [4, 5, 7, 15, 17], "decim": [4, 7, 15, 16], "durat": [4, 15, 16, 17], "term": [4, 5, 7, 15, 17], "normalized_time_remain": 15, "until": [4, 15, 16, 17, 24, 25], "matur": [4, 15, 17], "calc_spot_price_from_apr": 15, "fix": [4, 15], "05": [2, 4, 15], "get_simul": 16, "random_sim_var": 16, "sane": 16, "get_init_lp_ag": 16, "seed_liquid": 16, "requir": 16, "determin": [1, 16], "achiev": [4, 16], "target": [4, 16], "hit": 16, "desir": [4, 16, 20], "ratio": [4, 16], "larger": 16, "estim": 16, "due": 16, "adjust": [4, 16], "next": 16, "monoton": 16, "decreas": 16, "diminish": 16, "addit": [4, 7, 16], "here": 16, "http": 16, "github": 16, "com": 16, "fi": 16, "elf": 16, "pull": 16, "136": 16, "issuecom": 16, "1405922764": 16, "lper": 16, "within": 16, "1e": [9, 16], "15": 16, "13": 16, "init_lp_ag": 16, "get_market": 16, "explicitli": 16, "portion": 16, "express": 16, "renam": 16, "doesn": [16, 24, 25], "percent": [4, 16], "expiri": 16, "fraction": [16, 17], "year": [4, 16, 17], "month": 16, "valut": 16, "bear": [5, 7, 16], "vault": [5, 7, 16], "without": [5, 7, 16], "get_pricing_model": 16, "match": 16, "override_random_vari": 16, "random_vari": 16, "current_datetim": 17, "datetim": 17, "utc": 17, "block_number_to_datetim": 17, "start_tim": 17, "time_between_block": 17, "start": [4, 17], "timestamp": 17, "second": 17, "wa": 17, "valid": 17, "yearfrac_as_datetim": 17, "plu": 17, "get_yearfrac_remain": 17, "market_tim": 17, "elaps": 17, "question": 17, "than": 17, "left": [4, 17], "norm_dai": 17, "normalizing_const": 17, "365": [3, 17], "assumpt": 17, "scale": [4, 17], "factor": [4, 17], "stretch_tim": 17, "unnorm_dai": 17, "normed_dai": 17, "unstretch_tim": 17, "unstretch": 17, "been": 17, "days_to_time_remain": 17, "days_remain": [4, 17], "time_to_days_remain": 17, "conduct": 1, "typic": 1, "abc": 4, "own": 4, "assum": 4, "child": 4, "calc_in_given_out": [4, 5, 7], "calc_out_given_in": [4, 5, 7], "in_": [4, 5, 7], "calc_lp_out_given_tokens_in": [4, 7], "calc_lp_in_given_tokens_out": [4, 7], "calc_tokens_out_given_lp_in": [4, 7], "lp_in": [4, 7], "uniqu": [4, 5, 7], "model_typ": [4, 5, 7], "lower": [4, 5, 7], "snake_cas": [4, 5, 7], "calc_bond_reserv": 4, "target_apr": 4, "origin": 4, "expect": 4, "calc_share_reserv": 4, "calc_liquid": 4, "while": 4, "preserv": 4, "total_liquid": 4, "total_reserv": 4, "arbitrari": 4, "au": 4, "math": [4, 7], "target_liquidity_usd": 4, "try": 4, "calc_total_liquidity_from_reserves_and_pric": 4, "calc_spot_price_from_reserv": 4, "begin": [4, 5, 7], "align": 4, "frac": [4, 5, 7], "2y": [4, 5, 7], "cz": [4, 5, 7], "mu": [4, 5, 7], "z": [4, 5, 7], "tau": [4, 5, 7], "end": [4, 5, 7], "incorpor": [4, 5, 7], "princip": 4, "calc_apr_from_reserv": 4, "bisect": 4, "charg": 4, "purchas": 4, "calc_time_stretch": 4, "check_input_assert": 4, "assert": 4, "check_output_assert": 4, "hyperdrivepricingmodel": 5, "yieldspacepricingmodel": [5, 7], "combin": 5, "sum": 5, "invari": [5, 7], "enabl": [5, 7], "receiv": [5, 7], "other": [1, 5, 7, 9], "c": [5, 7], "k": [4, 5, 7], "cdot": [5, 7], "_in": [5, 7], "f": [5, 7], "phi": [5, 7], "percentag": [5, 7], "_out": [5, 7], "r": 7, "d": [2, 7], "d_b": 7, "_update_long": 1, "_update_short": 1, "shortscontain": 1, "parse_config": [2, 11, 19], "post_process": [2, 11, 19], "sim_util": [2, 11, 19], "default_log_level": [2, 12], "default_log_formatt": 2, "multilin": 2, "show": 2, "asctim": 2, "levelnam": 2, "funcnam": 2, "messag": 2, "default_log_datetim": 2, "m": 2, "h": 2, "default_log_maxbyt": [2, 12], "black": 2, "cycl": 2, "colorblind": 2, "cmapcyc": 2, "twilight": 2, "cmapdiv": 2, "burd": 2, "cmapseq": 2, "viridi": 2, "cmapcat": 2, "colorblind10": 2, "diverg": 2, "div": 2, "framealpha": 2, "fontnam": 2, "san": 2, "serif": 2, "gridalpha": 2, "gridbelow": 2, "gridpad": 2, "gridratio": 2, "gridstyl": 2, "labelpad": 2, "larges": 2, "larg": 2, "legendloc": 2, "best": 2, "mathtext": 2, "smallsiz": 2, "medium": 2, "titleweight": 2, "bold": 2, "tickdir": 2, "ticklen": 2, "ticklenratio": 2, "tickminor": 2, "tickpad": 2, "tickwidthratio": 2, "8": 2, "titlepad": 2, "white": 2, "zline": 2, "zpatch": 2, "rc_param": 2, "_calc_k_const": [4, 7], "mathemat": [4, 7], "_calc_spot_price_from_reserves_high_precis": 4, "variant": 4, "high": 4, "wei": 9, "max_reserves_differ": 9, "20000000000": 9, "__str__": [9, 18], "__getitem__": [9, 10, 18], "__setitem__": [9, 10, 18], "__post_init__": [9, 10], "referenc": 9, "pyplot": 12, "auto": 19, "document": 19, "lp_and_withdraw": 19, "single_long": 19, "single_short": 19, "no_act": 19, "single_lp": 19, "sphinx": 19, "autoapi": 19, "special": 20, "strategi": [20, 21, 23, 24, 25], "1000": [20, 21, 23, 24], "first_base_to_lp": 20, "pt_to_short": 20, "100": [20, 25], "second_base_to_lp": 20, "do": [20, 21, 24], "onc": [20, 21, 24, 25], "enough": 21, "inherit": 22, "thu": 22, "basicpolici": 22, "noaction": 22, "basic": 22, "noop": 22, "now": 22, "certain": 23, "_market": 24, "singl": 25, "thatonli": 25}, "objects": {"": [[2, 0, 0, "-", "elfpy"], [20, 0, 0, "-", "init_lp"], [21, 0, 0, "-", "lp_and_withdraw"], [22, 0, 0, "-", "no_action"], [23, 0, 0, "-", "single_long"], [24, 0, 0, "-", "single_lp"], [25, 0, 0, "-", "single_short"]], "elfpy": [[2, 1, 1, "", "BLACK"], [2, 1, 1, "", "CMAPCAT"], [2, 1, 1, "", "CMAPCYC"], [2, 1, 1, "", "CMAPDIV"], [2, 1, 1, "", "CMAPSEQ"], [2, 1, 1, "", "CYCLE"], [2, 1, 1, "", "DEFAULT_LOG_DATETIME"], [2, 1, 1, "", "DEFAULT_LOG_FORMATTER"], [2, 1, 1, "", "DEFAULT_LOG_LEVEL"], [2, 1, 1, "", "DEFAULT_LOG_MAXBYTES"], [2, 1, 1, "", "DIVERGING"], [2, 1, 1, "", "FONTNAME"], [2, 1, 1, "", "FONTSIZE"], [2, 1, 1, "", "FRAMEALPHA"], [2, 1, 1, "", "GRIDALPHA"], [2, 1, 1, "", "GRIDBELOW"], [2, 1, 1, "", "GRIDPAD"], [2, 1, 1, "", "GRIDRATIO"], [2, 1, 1, "", "GRIDSTYLE"], [2, 1, 1, "", "LABELPAD"], [2, 1, 1, "", "LARGESIZE"], [2, 1, 1, "", "LEGENDLOC"], [2, 1, 1, "", "LINEWIDTH"], [2, 1, 1, "", "MARGIN"], [2, 1, 1, "", "MATHTEXT"], [2, 1, 1, "", "SMALLSIZE"], [2, 1, 1, "", "TICKDIR"], [2, 1, 1, "", "TICKLEN"], [2, 1, 1, "", "TICKLENRATIO"], [2, 1, 1, "", "TICKMINOR"], [2, 1, 1, "", "TICKPAD"], [2, 1, 1, "", "TICKWIDTHRATIO"], [2, 1, 1, "", "TITLEPAD"], [2, 1, 1, "", "TITLEWEIGHT"], [2, 1, 1, "", "WHITE"], [2, 1, 1, "", "ZLINES"], [2, 1, 1, "", "ZPATCHES"], [1, 0, 0, "-", "agent"], [3, 0, 0, "-", "markets"], [6, 0, 0, "-", "pricing_models"], [2, 1, 1, "", "rc_params"], [8, 0, 0, "-", "simulators"], [9, 0, 0, "-", "types"], [11, 0, 0, "-", "utils"], [18, 0, 0, "-", "wallet"]], "elfpy.agent": [[1, 2, 1, "", "Agent"]], "elfpy.agent.Agent": [[1, 3, 1, "", "_update_longs"], [1, 3, 1, "", "_update_shorts"], [1, 3, 1, "", "action"], [1, 4, 1, "", "budget"], [1, 3, 1, "", "create_agent_action"], [1, 3, 1, "", "get_liquidation_trades"], [1, 3, 1, "", "get_max_long"], [1, 3, 1, "", "get_max_short"], [1, 3, 1, "", "get_trades"], [1, 4, 1, "", "last_update_spend"], [1, 3, 1, "", "log_final_report"], [1, 3, 1, "", "log_status_report"], [1, 4, 1, "", "market"], [1, 4, 1, "", "product_of_time_and_base"], [1, 4, 1, "", "rng"], [1, 3, 1, "", "update_wallet"], [1, 4, 1, "", "wallet"], [1, 4, 1, "", "wallet_address"]], "elfpy.markets": [[3, 2, 1, "", "Market"]], "elfpy.markets.Market": [[3, 3, 1, "", "add_liquidity"], [3, 3, 1, "", "check_action_type"], [3, 3, 1, "", "close_long"], [3, 3, 1, "", "close_short"], [3, 3, 1, "", "get_market_state_string"], [3, 3, 1, "", "log_market_step_string"], [3, 3, 1, "", "open_long"], [3, 3, 1, "", "open_short"], [3, 5, 1, "", "rate"], [3, 3, 1, "", "remove_liquidity"], [3, 5, 1, "", "spot_price"], [3, 3, 1, "", "tick"], [3, 3, 1, "", "trade_and_update"], [3, 3, 1, "", "update_market"]], "elfpy.pricing_models": [[4, 0, 0, "-", "base"], [5, 0, 0, "-", "hyperdrive"], [7, 0, 0, "-", "yieldspace"]], "elfpy.pricing_models.base": [[4, 2, 1, "", "PricingModel"]], "elfpy.pricing_models.base.PricingModel": [[4, 3, 1, "", "_calc_k_const"], [4, 3, 1, "", "_calc_spot_price_from_reserves_high_precision"], [4, 3, 1, "", "calc_apr_from_reserves"], [4, 3, 1, "", "calc_bond_reserves"], [4, 3, 1, "", "calc_in_given_out"], [4, 3, 1, "", "calc_liquidity"], [4, 3, 1, "", "calc_lp_in_given_tokens_out"], [4, 3, 1, "", "calc_lp_out_given_tokens_in"], [4, 3, 1, "", "calc_out_given_in"], [4, 3, 1, "", "calc_share_reserves"], [4, 3, 1, "", "calc_spot_price_from_reserves"], [4, 3, 1, "", "calc_time_stretch"], [4, 3, 1, "", "calc_tokens_out_given_lp_in"], [4, 3, 1, "", "calc_total_liquidity_from_reserves_and_price"], [4, 3, 1, "", "check_input_assertions"], [4, 3, 1, "", "check_output_assertions"], [4, 3, 1, "", "get_max_long"], [4, 3, 1, "", "get_max_short"], [4, 3, 1, "", "model_name"], [4, 3, 1, "", "model_type"]], "elfpy.pricing_models.hyperdrive": [[5, 2, 1, "", "HyperdrivePricingModel"]], "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel": [[5, 3, 1, "", "calc_in_given_out"], [5, 3, 1, "", "calc_out_given_in"], [5, 3, 1, "", "model_name"], [5, 3, 1, "", "model_type"]], "elfpy.pricing_models.yieldspace": [[7, 2, 1, "", "YieldSpacePricingModel"]], "elfpy.pricing_models.yieldspace.YieldSpacePricingModel": [[7, 3, 1, "", "_calc_k_const"], [7, 3, 1, "", "calc_in_given_out"], [7, 3, 1, "", "calc_lp_in_given_tokens_out"], [7, 3, 1, "", "calc_lp_out_given_tokens_in"], [7, 3, 1, "", "calc_out_given_in"], [7, 3, 1, "", "calc_tokens_out_given_lp_in"], [7, 3, 1, "", "model_name"], [7, 3, 1, "", "model_type"]], "elfpy.simulators": [[8, 2, 1, "", "Simulator"]], "elfpy.simulators.Simulator": [[8, 3, 1, "", "add_agents"], [8, 3, 1, "", "check_vault_apr"], [8, 3, 1, "", "collect_and_execute_trades"], [8, 3, 1, "", "collect_liquidation_trades"], [8, 3, 1, "", "collect_trades"], [8, 3, 1, "", "execute_trades"], [8, 3, 1, "", "get_simulation_state_string"], [8, 3, 1, "", "log_config_variables"], [8, 3, 1, "", "market_step_size"], [8, 3, 1, "", "run_simulation"], [8, 3, 1, "", "set_rng"], [8, 3, 1, "", "update_simulation_state"]], "elfpy.types": [[9, 2, 1, "", "AgentTradeResult"], [9, 1, 1, "", "MAX_RESERVES_DIFFERENCE"], [9, 2, 1, "", "MarketAction"], [9, 2, 1, "", "MarketActionType"], [9, 2, 1, "", "MarketDeltas"], [9, 2, 1, "", "MarketState"], [9, 2, 1, "", "MarketTradeResult"], [9, 2, 1, "", "Quantity"], [9, 2, 1, "", "RandomSimulationVariables"], [9, 2, 1, "", "SimulationState"], [9, 2, 1, "", "StretchedTime"], [9, 2, 1, "", "TokenType"], [9, 2, 1, "", "TradeBreakdown"], [9, 2, 1, "", "TradeResult"], [9, 1, 1, "", "WEI"], [9, 6, 1, "", "to_description"]], "elfpy.types.AgentTradeResult": [[9, 4, 1, "", "d_base"], [9, 4, 1, "", "d_bonds"]], "elfpy.types.MarketAction": [[9, 3, 1, "", "__str__"], [9, 4, 1, "", "action_type"], [9, 4, 1, "", "mint_time"], [9, 4, 1, "", "trade_amount"], [9, 4, 1, "", "wallet_address"]], "elfpy.types.MarketActionType": [[9, 4, 1, "", "ADD_LIQUIDITY"], [9, 4, 1, "", "CLOSE_LONG"], [9, 4, 1, "", "CLOSE_SHORT"], [9, 4, 1, "", "OPEN_LONG"], [9, 4, 1, "", "OPEN_SHORT"], [9, 4, 1, "", "REMOVE_LIQUIDITY"]], "elfpy.types.MarketDeltas": [[9, 3, 1, "", "__getitem__"], [9, 3, 1, "", "__setitem__"], [9, 3, 1, "", "__str__"], [9, 4, 1, "", "d_base_asset"], [9, 4, 1, "", "d_base_buffer"], [9, 4, 1, "", "d_bond_buffer"], [9, 4, 1, "", "d_lp_reserves"], [9, 4, 1, "", "d_share_price"], [9, 4, 1, "", "d_token_asset"]], "elfpy.types.MarketState": [[9, 3, 1, "", "__str__"], [9, 3, 1, "", "apply_delta"], [9, 4, 1, "", "base_buffer"], [9, 4, 1, "", "bond_buffer"], [9, 4, 1, "", "bond_reserves"], [9, 4, 1, "", "init_share_price"], [9, 4, 1, "", "lp_reserves"], [9, 4, 1, "", "share_price"], [9, 4, 1, "", "share_reserves"], [9, 4, 1, "", "vault_apr"]], "elfpy.types.MarketTradeResult": [[9, 4, 1, "", "d_base"], [9, 4, 1, "", "d_bonds"]], "elfpy.types.Quantity": [[9, 4, 1, "", "amount"], [9, 4, 1, "", "unit"]], "elfpy.types.RandomSimulationVariables": [[9, 3, 1, "", "__post_init__"], [9, 4, 1, "", "fee_percent"], [9, 4, 1, "", "init_share_price"], [9, 4, 1, "", "init_vault_age"], [9, 4, 1, "", "target_liquidity"], [9, 4, 1, "", "target_pool_apr"], [9, 4, 1, "", "vault_apr"]], "elfpy.types.SimulationState": [[9, 3, 1, "", "__getitem__"], [9, 3, 1, "", "__setitem__"], [9, 4, 1, "", "base_asset_price"], [9, 4, 1, "", "block_number"], [9, 4, 1, "", "block_timestamp"], [9, 4, 1, "", "current_market_datetime"], [9, 4, 1, "", "current_market_yearfrac"], [9, 4, 1, "", "daily_block_number"], [9, 4, 1, "", "day"], [9, 4, 1, "", "fee_percent"], [9, 4, 1, "", "floor_fee"], [9, 4, 1, "", "init_vault_age"], [9, 4, 1, "", "market_step_size"], [9, 4, 1, "", "model_name"], [9, 4, 1, "", "num_blocks_per_day"], [9, 4, 1, "", "num_trading_days"], [9, 4, 1, "", "pool_apr"], [9, 4, 1, "", "position_duration"], [9, 4, 1, "", "run_number"], [9, 4, 1, "", "run_trade_number"], [9, 4, 1, "", "simulation_start_time"], [9, 4, 1, "", "spot_price"], [9, 4, 1, "", "target_liquidity"], [9, 3, 1, "", "update_agent_wallet"], [9, 3, 1, "", "update_market_state"]], "elfpy.types.StretchedTime": [[9, 3, 1, "", "__str__"], [9, 5, 1, "", "days"], [9, 5, 1, "", "normalized_time"], [9, 5, 1, "", "stretched_time"], [9, 5, 1, "", "time_stretch"]], "elfpy.types.TokenType": [[9, 4, 1, "", "BASE"], [9, 4, 1, "", "PT"]], "elfpy.types.TradeBreakdown": [[9, 4, 1, "", "fee"], [9, 4, 1, "", "with_fee"], [9, 4, 1, "", "without_fee"], [9, 4, 1, "", "without_fee_or_slippage"]], "elfpy.types.TradeResult": [[9, 4, 1, "", "breakdown"], [9, 4, 1, "", "market_result"], [9, 4, 1, "", "user_result"]], "elfpy.utils": [[10, 0, 0, "-", "config"], [12, 0, 0, "-", "outputs"], [13, 0, 0, "-", "parse_config"], [14, 0, 0, "-", "post_processing"], [15, 0, 0, "-", "price"], [16, 0, 0, "-", "sim_utils"], [17, 0, 0, "-", "time"]], "elfpy.utils.config": [[10, 2, 1, "", "AMMConfig"], [10, 2, 1, "", "Config"], [10, 2, 1, "", "MarketConfig"], [10, 2, 1, "", "SimulatorConfig"], [10, 6, 1, "", "get_random_variables"], [10, 6, 1, "", "setup_vault_apr"]], "elfpy.utils.config.AMMConfig": [[10, 3, 1, "", "__getitem__"], [10, 3, 1, "", "__setitem__"], [10, 4, 1, "", "floor_fee"], [10, 4, 1, "", "max_fee"], [10, 4, 1, "", "max_pool_apr"], [10, 4, 1, "", "min_fee"], [10, 4, 1, "", "min_pool_apr"], [10, 4, 1, "", "pricing_model_name"]], "elfpy.utils.config.Config": [[10, 3, 1, "", "__getitem__"], [10, 4, 1, "", "amm"], [10, 4, 1, "", "market"], [10, 4, 1, "", "simulator"]], "elfpy.utils.config.MarketConfig": [[10, 3, 1, "", "__getitem__"], [10, 3, 1, "", "__setitem__"], [10, 4, 1, "", "base_asset_price"], [10, 4, 1, "", "max_target_liquidity"], [10, 4, 1, "", "max_target_volume"], [10, 4, 1, "", "max_vault_age"], [10, 4, 1, "", "min_target_liquidity"], [10, 4, 1, "", "min_target_volume"], [10, 4, 1, "", "min_vault_age"], [10, 4, 1, "", "vault_apr"]], "elfpy.utils.config.SimulatorConfig": [[10, 3, 1, "", "__getitem__"], [10, 3, 1, "", "__post_init__"], [10, 3, 1, "", "__setitem__"], [10, 4, 1, "", "agent_policies"], [10, 4, 1, "", "compound_vault_apr"], [10, 4, 1, "", "init_lp"], [10, 4, 1, "", "init_vault_age"], [10, 4, 1, "", "logging_level"], [10, 4, 1, "", "num_blocks_per_day"], [10, 4, 1, "", "num_trading_days"], [10, 4, 1, "", "precision"], [10, 4, 1, "", "random_seed"], [10, 4, 1, "", "rng"], [10, 4, 1, "", "shuffle_users"], [10, 4, 1, "", "token_duration"]], "elfpy.utils.outputs": [[12, 2, 1, "", "CustomEncoder"], [12, 6, 1, "", "annotate"], [12, 6, 1, "", "clear_axes"], [12, 6, 1, "", "clear_axis"], [12, 6, 1, "", "close_logging"], [12, 6, 1, "", "delete_log_file"], [12, 6, 1, "", "format_axis"], [12, 6, 1, "", "get_gridspec_subplots"], [12, 6, 1, "", "plot_longs_and_shorts"], [12, 6, 1, "", "plot_market_lp_reserves"], [12, 6, 1, "", "plot_market_spot_price"], [12, 6, 1, "", "plot_pool_apr"], [12, 6, 1, "", "plot_wallet_returns"], [12, 6, 1, "", "setup_logging"]], "elfpy.utils.outputs.CustomEncoder": [[12, 3, 1, "", "default"]], "elfpy.utils.parse_config": [[13, 6, 1, "", "load_and_parse_config_file"], [13, 6, 1, "", "load_config_file"], [13, 6, 1, "", "override_config_variables"], [13, 6, 1, "", "parse_simulation_config"], [13, 6, 1, "", "text_to_logging_level"]], "elfpy.utils.post_processing": [[14, 6, 1, "", "aggregate_trade_data"], [14, 6, 1, "", "compute_derived_variables"], [14, 6, 1, "", "get_simulation_state_df"]], "elfpy.utils.price": [[15, 6, 1, "", "calc_apr_from_spot_price"], [15, 6, 1, "", "calc_spot_price_from_apr"]], "elfpy.utils.sim_utils": [[16, 6, 1, "", "get_init_lp_agent"], [16, 6, 1, "", "get_market"], [16, 6, 1, "", "get_pricing_model"], [16, 6, 1, "", "get_simulator"], [16, 6, 1, "", "override_random_variables"]], "elfpy.utils.time": [[17, 6, 1, "", "block_number_to_datetime"], [17, 6, 1, "", "current_datetime"], [17, 6, 1, "", "days_to_time_remaining"], [17, 6, 1, "", "get_yearfrac_remaining"], [17, 6, 1, "", "norm_days"], [17, 6, 1, "", "stretch_time"], [17, 6, 1, "", "time_to_days_remaining"], [17, 6, 1, "", "unnorm_days"], [17, 6, 1, "", "unstretch_time"], [17, 6, 1, "", "yearfrac_as_datetime"]], "elfpy.wallet": [[18, 2, 1, "", "Long"], [18, 2, 1, "", "Short"], [18, 2, 1, "", "Wallet"]], "elfpy.wallet.Long": [[18, 3, 1, "", "__str__"], [18, 4, 1, "", "balance"]], "elfpy.wallet.Short": [[18, 3, 1, "", "__str__"], [18, 4, 1, "", "balance"], [18, 4, 1, "", "margin"]], "elfpy.wallet.Wallet": [[18, 3, 1, "", "__getitem__"], [18, 3, 1, "", "__setitem__"], [18, 3, 1, "", "__str__"], [18, 4, 1, "", "address"], [18, 4, 1, "", "base"], [18, 4, 1, "", "fees_paid"], [18, 4, 1, "", "longs"], [18, 4, 1, "", "lp_tokens"], [18, 4, 1, "", "shorts"], [18, 5, 1, "", "state"]], "init_lp": [[20, 2, 1, "", "Policy"]], "init_lp.Policy": [[20, 3, 1, "", "action"]], "lp_and_withdraw": [[21, 2, 1, "", "Policy"]], "lp_and_withdraw.Policy": [[21, 3, 1, "", "action"]], "no_action": [[22, 2, 1, "", "NoAction"]], "no_action.NoAction": [[22, 3, 1, "", "action"]], "single_long": [[23, 2, 1, "", "Policy"]], "single_long.Policy": [[23, 3, 1, "", "action"]], "single_lp": [[24, 2, 1, "", "Policy"]], "single_lp.Policy": [[24, 3, 1, "", "action"]], "single_short": [[25, 2, 1, "", "Policy"]], "single_short.Policy": [[25, 3, 1, "", "action"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "titleterms": {"welcom": 26, "elfpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26], "": 26, "document": 26, "indic": 26, "tabl": 26, "api": 19, "content": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25], "agent": 1, "market": 3, "simul": 8, "type": 9, "util": [10, 11, 12, 13, 14, 15, 16, 17], "wallet": 18, "agenttraderesult": [], "marketact": [], "marketactiontyp": [], "marketdelta": [], "marketst": [], "markettraderesult": [], "quantiti": [], "randomsimulationvari": [], "simulationst": [], "stretchedtim": [], "tokentyp": [], "tradebreakdown": [], "traderesult": [], "to_descript": [], "config": 10, "ammconfig": [], "marketconfig": [], "simulatorconfig": [], "get_random_vari": [], "setup_vault_apr": [], "output": 12, "customencod": [], "annot": [], "clear_ax": [], "clear_axi": [], "close_log": [], "delete_log_fil": [], "format_axi": [], "get_gridspec_subplot": [], "plot_longs_and_short": [], "plot_market_lp_reserv": [], "plot_market_spot_pric": [], "plot_pool_apr": [], "plot_wallet_return": [], "setup_log": [], "parse_config": 13, "load_and_parse_config_fil": [], "load_config_fil": [], "override_config_vari": [], "parse_simulation_config": [], "text_to_logging_level": [], "post_process": 14, "aggregate_trade_data": [], "compute_derived_vari": [], "get_simulation_state_df": [], "price": 15, "calc_apr_from_spot_pric": [], "calc_spot_price_from_apr": [], "sim_util": 16, "get_init_lp_ag": [], "get_market": [], "get_pricing_model": [], "get_simul": [], "override_random_vari": [], "time": 17, "block_number_to_datetim": [], "current_datetim": [], "days_to_time_remain": [], "get_yearfrac_remain": [], "norm_dai": [], "stretch_tim": [], "time_to_days_remain": [], "unnorm_dai": [], "unstretch_tim": [], "yearfrac_as_datetim": [], "long": [], "short": [], "pricing_model": [4, 5, 6, 7], "base": 4, "pricingmodel": [], "hyperdr": 5, "hyperdrivepricingmodel": [], "yieldspac": 7, "yieldspacepricingmodel": [], "modul": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25], "class": [1, 3, 4, 5, 7, 8, 9, 10, 12, 18, 20, 21, 22, 23, 24, 25], "subpackag": 2, "submodul": [2, 6, 11], "packag": 2, "function": [9, 10, 12, 13, 14, 15, 16, 17], "attribut": 9, "refer": 19, "init_lp": 20, "lp_and_withdraw": 21, "no_act": 22, "single_long": 23, "single_lp": 24, "single_short": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Welcome to elfpy\u2019s documentation!": [[26, "welcome-to-elfpy-s-documentation"]], "Indices and tables": [[26, "indices-and-tables"]], "elfpy": [[0, "module-elfpy"], [2, "module-elfpy"]], "elfpy.agent": [[1, "module-elfpy.agent"]], "Module Contents": [[1, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"]], "Classes": [[1, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [12, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [6, "submodules"], [11, "submodules"]], "Package Contents": [[2, "package-contents"]], "elfpy.markets": [[3, "module-elfpy.markets"]], "elfpy.pricing_models.base": [[4, "module-elfpy.pricing_models.base"]], "elfpy.pricing_models.hyperdrive": [[5, "module-elfpy.pricing_models.hyperdrive"]], "elfpy.pricing_models": [[6, "module-elfpy.pricing_models"]], "elfpy.pricing_models.yieldspace": [[7, "module-elfpy.pricing_models.yieldspace"]], "elfpy.simulators": [[8, "module-elfpy.simulators"]], "elfpy.types": [[9, "module-elfpy.types"]], "Functions": [[9, "functions"], [10, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"]], "Attributes": [[9, "attributes"]], "elfpy.utils.config": [[10, "module-elfpy.utils.config"]], "elfpy.utils": [[11, "module-elfpy.utils"]], "elfpy.utils.outputs": [[12, "module-elfpy.utils.outputs"]], "elfpy.utils.parse_config": [[13, "module-elfpy.utils.parse_config"]], "elfpy.utils.post_processing": [[14, "module-elfpy.utils.post_processing"]], "elfpy.utils.price": [[15, "module-elfpy.utils.price"]], "elfpy.utils.sim_utils": [[16, "module-elfpy.utils.sim_utils"]], "elfpy.utils.time": [[17, "module-elfpy.utils.time"]], "elfpy.wallet": [[18, "module-elfpy.wallet"]], "API Reference": [[19, "api-reference"]], "init_lp": [[20, "module-init_lp"]], "lp_and_withdraw": [[21, "module-lp_and_withdraw"]], "no_action": [[22, "module-no_action"]], "single_long": [[23, "module-single_long"]], "single_lp": [[24, "module-single_lp"]], "single_short": [[25, "module-single_short"]]}, "indexentries": {"agent (class in elfpy.agent)": [[1, "elfpy.agent.Agent"]], "_update_longs() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent._update_longs"]], "_update_shorts() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent._update_shorts"]], "action() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.action"]], "budget (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.budget"]], "create_agent_action() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.create_agent_action"]], "elfpy.agent": [[1, "module-elfpy.agent"]], "get_liquidation_trades() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_liquidation_trades"]], "get_max_long() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_max_long"]], "get_max_short() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_max_short"]], "get_trades() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.get_trades"]], "last_update_spend (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.last_update_spend"]], "log_final_report() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.log_final_report"]], "log_status_report() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.log_status_report"]], "market (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.market"]], "module": [[1, "module-elfpy.agent"], [2, "module-elfpy"], [3, "module-elfpy.markets"], [4, "module-elfpy.pricing_models.base"], [5, "module-elfpy.pricing_models.hyperdrive"], [6, "module-elfpy.pricing_models"], [7, "module-elfpy.pricing_models.yieldspace"], [8, "module-elfpy.simulators"], [9, "module-elfpy.types"], [10, "module-elfpy.utils.config"], [11, "module-elfpy.utils"], [12, "module-elfpy.utils.outputs"], [13, "module-elfpy.utils.parse_config"], [14, "module-elfpy.utils.post_processing"], [15, "module-elfpy.utils.price"], [16, "module-elfpy.utils.sim_utils"], [17, "module-elfpy.utils.time"], [18, "module-elfpy.wallet"], [20, "module-init_lp"], [21, "module-lp_and_withdraw"], [22, "module-no_action"], [23, "module-single_long"], [24, "module-single_lp"], [25, "module-single_short"]], "product_of_time_and_base (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.product_of_time_and_base"]], "rng (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.rng"]], "update_wallet() (elfpy.agent.agent method)": [[1, "elfpy.agent.Agent.update_wallet"]], "wallet (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.wallet"]], "wallet_address (elfpy.agent.agent attribute)": [[1, "elfpy.agent.Agent.wallet_address"]], "black (in module elfpy)": [[2, "elfpy.BLACK"]], "cmapcat (in module elfpy)": [[2, "elfpy.CMAPCAT"]], "cmapcyc (in module elfpy)": [[2, "elfpy.CMAPCYC"]], "cmapdiv (in module elfpy)": [[2, "elfpy.CMAPDIV"]], "cmapseq (in module elfpy)": [[2, "elfpy.CMAPSEQ"]], "cycle (in module elfpy)": [[2, "elfpy.CYCLE"]], "default_log_datetime (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_DATETIME"]], "default_log_formatter (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_FORMATTER"]], "default_log_level (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_LEVEL"]], "default_log_maxbytes (in module elfpy)": [[2, "elfpy.DEFAULT_LOG_MAXBYTES"]], "diverging (in module elfpy)": [[2, "elfpy.DIVERGING"]], "fontname (in module elfpy)": [[2, "elfpy.FONTNAME"]], "fontsize (in module elfpy)": [[2, "elfpy.FONTSIZE"]], "framealpha (in module elfpy)": [[2, "elfpy.FRAMEALPHA"]], "gridalpha (in module elfpy)": [[2, "elfpy.GRIDALPHA"]], "gridbelow (in module elfpy)": [[2, "elfpy.GRIDBELOW"]], "gridpad (in module elfpy)": [[2, "elfpy.GRIDPAD"]], "gridratio (in module elfpy)": [[2, "elfpy.GRIDRATIO"]], "gridstyle (in module elfpy)": [[2, "elfpy.GRIDSTYLE"]], "labelpad (in module elfpy)": [[2, "elfpy.LABELPAD"]], "largesize (in module elfpy)": [[2, "elfpy.LARGESIZE"]], "legendloc (in module elfpy)": [[2, "elfpy.LEGENDLOC"]], "linewidth (in module elfpy)": [[2, "elfpy.LINEWIDTH"]], "margin (in module elfpy)": [[2, "elfpy.MARGIN"]], "mathtext (in module elfpy)": [[2, "elfpy.MATHTEXT"]], "smallsize (in module elfpy)": [[2, "elfpy.SMALLSIZE"]], "tickdir (in module elfpy)": [[2, "elfpy.TICKDIR"]], "ticklen (in module elfpy)": [[2, "elfpy.TICKLEN"]], "ticklenratio (in module elfpy)": [[2, "elfpy.TICKLENRATIO"]], "tickminor (in module elfpy)": [[2, "elfpy.TICKMINOR"]], "tickpad (in module elfpy)": [[2, "elfpy.TICKPAD"]], "tickwidthratio (in module elfpy)": [[2, "elfpy.TICKWIDTHRATIO"]], "titlepad (in module elfpy)": [[2, "elfpy.TITLEPAD"]], "titleweight (in module elfpy)": [[2, "elfpy.TITLEWEIGHT"]], "white (in module elfpy)": [[2, "elfpy.WHITE"]], "zlines (in module elfpy)": [[2, "elfpy.ZLINES"]], "zpatches (in module elfpy)": [[2, "elfpy.ZPATCHES"]], "elfpy": [[2, "module-elfpy"]], "rc_params (in module elfpy)": [[2, "elfpy.rc_params"]], "market (class in elfpy.markets)": [[3, "elfpy.markets.Market"]], "add_liquidity() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.add_liquidity"]], "check_action_type() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.check_action_type"]], "close_long() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.close_long"]], "close_short() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.close_short"]], "elfpy.markets": [[3, "module-elfpy.markets"]], "get_market_state_string() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.get_market_state_string"]], "log_market_step_string() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.log_market_step_string"]], "open_long() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.open_long"]], "open_short() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.open_short"]], "rate (elfpy.markets.market property)": [[3, "elfpy.markets.Market.rate"]], "remove_liquidity() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.remove_liquidity"]], "spot_price (elfpy.markets.market property)": [[3, "elfpy.markets.Market.spot_price"]], "tick() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.tick"]], "trade_and_update() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.trade_and_update"]], "update_market() (elfpy.markets.market method)": [[3, "elfpy.markets.Market.update_market"]], "pricingmodel (class in elfpy.pricing_models.base)": [[4, "elfpy.pricing_models.base.PricingModel"]], "_calc_k_const() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel._calc_k_const"]], "_calc_spot_price_from_reserves_high_precision() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel._calc_spot_price_from_reserves_high_precision"]], "calc_apr_from_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_apr_from_reserves"]], "calc_bond_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_bond_reserves"]], "calc_in_given_out() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_in_given_out"]], "calc_liquidity() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_liquidity"]], "calc_lp_in_given_tokens_out() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_lp_in_given_tokens_out"]], "calc_lp_out_given_tokens_in() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_lp_out_given_tokens_in"]], "calc_out_given_in() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_out_given_in"]], "calc_share_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_share_reserves"]], "calc_spot_price_from_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_spot_price_from_reserves"]], "calc_time_stretch() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_time_stretch"]], "calc_tokens_out_given_lp_in() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_tokens_out_given_lp_in"]], "calc_total_liquidity_from_reserves_and_price() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.calc_total_liquidity_from_reserves_and_price"]], "check_input_assertions() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.check_input_assertions"]], "check_output_assertions() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.check_output_assertions"]], "elfpy.pricing_models.base": [[4, "module-elfpy.pricing_models.base"]], "get_max_long() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.get_max_long"]], "get_max_short() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.get_max_short"]], "model_name() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.model_name"]], "model_type() (elfpy.pricing_models.base.pricingmodel method)": [[4, "elfpy.pricing_models.base.PricingModel.model_type"]], "hyperdrivepricingmodel (class in elfpy.pricing_models.hyperdrive)": [[5, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel"]], "calc_in_given_out() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[5, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.calc_in_given_out"]], "calc_out_given_in() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[5, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.calc_out_given_in"]], "elfpy.pricing_models.hyperdrive": [[5, "module-elfpy.pricing_models.hyperdrive"]], "model_name() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[5, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.model_name"]], "model_type() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[5, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.model_type"]], "elfpy.pricing_models": [[6, "module-elfpy.pricing_models"]], "yieldspacepricingmodel (class in elfpy.pricing_models.yieldspace)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel"]], "_calc_k_const() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel._calc_k_const"]], "calc_in_given_out() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_in_given_out"]], "calc_lp_in_given_tokens_out() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_lp_in_given_tokens_out"]], "calc_lp_out_given_tokens_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_lp_out_given_tokens_in"]], "calc_out_given_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_out_given_in"]], "calc_tokens_out_given_lp_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_tokens_out_given_lp_in"]], "elfpy.pricing_models.yieldspace": [[7, "module-elfpy.pricing_models.yieldspace"]], "model_name() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.model_name"]], "model_type() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[7, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.model_type"]], "simulator (class in elfpy.simulators)": [[8, "elfpy.simulators.Simulator"]], "add_agents() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.add_agents"]], "check_vault_apr() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.check_vault_apr"]], "collect_and_execute_trades() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.collect_and_execute_trades"]], "collect_liquidation_trades() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.collect_liquidation_trades"]], "collect_trades() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.collect_trades"]], "elfpy.simulators": [[8, "module-elfpy.simulators"]], "execute_trades() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.execute_trades"]], "get_simulation_state_string() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.get_simulation_state_string"]], "log_config_variables() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.log_config_variables"]], "market_step_size() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.market_step_size"]], "run_simulation() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.run_simulation"]], "set_rng() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.set_rng"]], "update_simulation_state() (elfpy.simulators.simulator method)": [[8, "elfpy.simulators.Simulator.update_simulation_state"]], "add_liquidity (elfpy.types.marketactiontype attribute)": [[9, "elfpy.types.MarketActionType.ADD_LIQUIDITY"]], "agenttraderesult (class in elfpy.types)": [[9, "elfpy.types.AgentTradeResult"]], "base (elfpy.types.tokentype attribute)": [[9, "elfpy.types.TokenType.BASE"]], "close_long (elfpy.types.marketactiontype attribute)": [[9, "elfpy.types.MarketActionType.CLOSE_LONG"]], "close_short (elfpy.types.marketactiontype attribute)": [[9, "elfpy.types.MarketActionType.CLOSE_SHORT"]], "max_reserves_difference (in module elfpy.types)": [[9, "elfpy.types.MAX_RESERVES_DIFFERENCE"]], "marketaction (class in elfpy.types)": [[9, "elfpy.types.MarketAction"]], "marketactiontype (class in elfpy.types)": [[9, "elfpy.types.MarketActionType"]], "marketdeltas (class in elfpy.types)": [[9, "elfpy.types.MarketDeltas"]], "marketstate (class in elfpy.types)": [[9, "elfpy.types.MarketState"]], "markettraderesult (class in elfpy.types)": [[9, "elfpy.types.MarketTradeResult"]], "open_long (elfpy.types.marketactiontype attribute)": [[9, "elfpy.types.MarketActionType.OPEN_LONG"]], "open_short (elfpy.types.marketactiontype attribute)": [[9, "elfpy.types.MarketActionType.OPEN_SHORT"]], "pt (elfpy.types.tokentype attribute)": [[9, "elfpy.types.TokenType.PT"]], "quantity (class in elfpy.types)": [[9, "elfpy.types.Quantity"]], "remove_liquidity (elfpy.types.marketactiontype attribute)": [[9, "elfpy.types.MarketActionType.REMOVE_LIQUIDITY"]], "randomsimulationvariables (class in elfpy.types)": [[9, "elfpy.types.RandomSimulationVariables"]], "simulationstate (class in elfpy.types)": [[9, "elfpy.types.SimulationState"]], "stretchedtime (class in elfpy.types)": [[9, "elfpy.types.StretchedTime"]], "tokentype (class in elfpy.types)": [[9, "elfpy.types.TokenType"]], "tradebreakdown (class in elfpy.types)": [[9, "elfpy.types.TradeBreakdown"]], "traderesult (class in elfpy.types)": [[9, "elfpy.types.TradeResult"]], "wei (in module elfpy.types)": [[9, "elfpy.types.WEI"]], "__getitem__() (elfpy.types.marketdeltas method)": [[9, "elfpy.types.MarketDeltas.__getitem__"]], "__getitem__() (elfpy.types.simulationstate method)": [[9, "elfpy.types.SimulationState.__getitem__"]], "__post_init__() (elfpy.types.randomsimulationvariables method)": [[9, "elfpy.types.RandomSimulationVariables.__post_init__"]], "__setitem__() (elfpy.types.marketdeltas method)": [[9, "elfpy.types.MarketDeltas.__setitem__"]], "__setitem__() (elfpy.types.simulationstate method)": [[9, "elfpy.types.SimulationState.__setitem__"]], "__str__() (elfpy.types.marketaction method)": [[9, "elfpy.types.MarketAction.__str__"]], "__str__() (elfpy.types.marketdeltas method)": [[9, "elfpy.types.MarketDeltas.__str__"]], "__str__() (elfpy.types.marketstate method)": [[9, "elfpy.types.MarketState.__str__"]], "__str__() (elfpy.types.stretchedtime method)": [[9, "elfpy.types.StretchedTime.__str__"]], "action_type (elfpy.types.marketaction attribute)": [[9, "elfpy.types.MarketAction.action_type"]], "amount (elfpy.types.quantity attribute)": [[9, "elfpy.types.Quantity.amount"]], "apply_delta() (elfpy.types.marketstate method)": [[9, "elfpy.types.MarketState.apply_delta"]], "base_asset_price (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.base_asset_price"]], "base_buffer (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.base_buffer"]], "block_number (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.block_number"]], "block_timestamp (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.block_timestamp"]], "bond_buffer (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.bond_buffer"]], "bond_reserves (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.bond_reserves"]], "breakdown (elfpy.types.traderesult attribute)": [[9, "elfpy.types.TradeResult.breakdown"]], "current_market_datetime (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.current_market_datetime"]], "current_market_yearfrac (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.current_market_yearfrac"]], "d_base (elfpy.types.agenttraderesult attribute)": [[9, "elfpy.types.AgentTradeResult.d_base"]], "d_base (elfpy.types.markettraderesult attribute)": [[9, "elfpy.types.MarketTradeResult.d_base"]], "d_base_asset (elfpy.types.marketdeltas attribute)": [[9, "elfpy.types.MarketDeltas.d_base_asset"]], "d_base_buffer (elfpy.types.marketdeltas attribute)": [[9, "elfpy.types.MarketDeltas.d_base_buffer"]], "d_bond_buffer (elfpy.types.marketdeltas attribute)": [[9, "elfpy.types.MarketDeltas.d_bond_buffer"]], "d_bonds (elfpy.types.agenttraderesult attribute)": [[9, "elfpy.types.AgentTradeResult.d_bonds"]], "d_bonds (elfpy.types.markettraderesult attribute)": [[9, "elfpy.types.MarketTradeResult.d_bonds"]], "d_lp_reserves (elfpy.types.marketdeltas attribute)": [[9, "elfpy.types.MarketDeltas.d_lp_reserves"]], "d_share_price (elfpy.types.marketdeltas attribute)": [[9, "elfpy.types.MarketDeltas.d_share_price"]], "d_token_asset (elfpy.types.marketdeltas attribute)": [[9, "elfpy.types.MarketDeltas.d_token_asset"]], "daily_block_number (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.daily_block_number"]], "day (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.day"]], "days (elfpy.types.stretchedtime property)": [[9, "elfpy.types.StretchedTime.days"]], "elfpy.types": [[9, "module-elfpy.types"]], "fee (elfpy.types.tradebreakdown attribute)": [[9, "elfpy.types.TradeBreakdown.fee"]], "fee_percent (elfpy.types.randomsimulationvariables attribute)": [[9, "elfpy.types.RandomSimulationVariables.fee_percent"]], "fee_percent (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.fee_percent"]], "floor_fee (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.floor_fee"]], "init_share_price (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.init_share_price"]], "init_share_price (elfpy.types.randomsimulationvariables attribute)": [[9, "elfpy.types.RandomSimulationVariables.init_share_price"]], "init_vault_age (elfpy.types.randomsimulationvariables attribute)": [[9, "elfpy.types.RandomSimulationVariables.init_vault_age"]], "init_vault_age (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.init_vault_age"]], "lp_reserves (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.lp_reserves"]], "market_result (elfpy.types.traderesult attribute)": [[9, "elfpy.types.TradeResult.market_result"]], "market_step_size (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.market_step_size"]], "mint_time (elfpy.types.marketaction attribute)": [[9, "elfpy.types.MarketAction.mint_time"]], "model_name (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.model_name"]], "normalized_time (elfpy.types.stretchedtime property)": [[9, "elfpy.types.StretchedTime.normalized_time"]], "num_blocks_per_day (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.num_blocks_per_day"]], "num_trading_days (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.num_trading_days"]], "pool_apr (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.pool_apr"]], "position_duration (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.position_duration"]], "run_number (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.run_number"]], "run_trade_number (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.run_trade_number"]], "share_price (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.share_price"]], "share_reserves (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.share_reserves"]], "simulation_start_time (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.simulation_start_time"]], "spot_price (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.spot_price"]], "stretched_time (elfpy.types.stretchedtime property)": [[9, "elfpy.types.StretchedTime.stretched_time"]], "target_liquidity (elfpy.types.randomsimulationvariables attribute)": [[9, "elfpy.types.RandomSimulationVariables.target_liquidity"]], "target_liquidity (elfpy.types.simulationstate attribute)": [[9, "elfpy.types.SimulationState.target_liquidity"]], "target_pool_apr (elfpy.types.randomsimulationvariables attribute)": [[9, "elfpy.types.RandomSimulationVariables.target_pool_apr"]], "time_stretch (elfpy.types.stretchedtime property)": [[9, "elfpy.types.StretchedTime.time_stretch"]], "to_description() (in module elfpy.types)": [[9, "elfpy.types.to_description"]], "trade_amount (elfpy.types.marketaction attribute)": [[9, "elfpy.types.MarketAction.trade_amount"]], "unit (elfpy.types.quantity attribute)": [[9, "elfpy.types.Quantity.unit"]], "update_agent_wallet() (elfpy.types.simulationstate method)": [[9, "elfpy.types.SimulationState.update_agent_wallet"]], "update_market_state() (elfpy.types.simulationstate method)": [[9, "elfpy.types.SimulationState.update_market_state"]], "user_result (elfpy.types.traderesult attribute)": [[9, "elfpy.types.TradeResult.user_result"]], "vault_apr (elfpy.types.marketstate attribute)": [[9, "elfpy.types.MarketState.vault_apr"]], "vault_apr (elfpy.types.randomsimulationvariables attribute)": [[9, "elfpy.types.RandomSimulationVariables.vault_apr"]], "wallet_address (elfpy.types.marketaction attribute)": [[9, "elfpy.types.MarketAction.wallet_address"]], "with_fee (elfpy.types.tradebreakdown attribute)": [[9, "elfpy.types.TradeBreakdown.with_fee"]], "without_fee (elfpy.types.tradebreakdown attribute)": [[9, "elfpy.types.TradeBreakdown.without_fee"]], "without_fee_or_slippage (elfpy.types.tradebreakdown attribute)": [[9, "elfpy.types.TradeBreakdown.without_fee_or_slippage"]], "ammconfig (class in elfpy.utils.config)": [[10, "elfpy.utils.config.AMMConfig"]], "config (class in elfpy.utils.config)": [[10, "elfpy.utils.config.Config"]], "marketconfig (class in elfpy.utils.config)": [[10, "elfpy.utils.config.MarketConfig"]], "simulatorconfig (class in elfpy.utils.config)": [[10, "elfpy.utils.config.SimulatorConfig"]], "__getitem__() (elfpy.utils.config.ammconfig method)": [[10, "elfpy.utils.config.AMMConfig.__getitem__"]], "__getitem__() (elfpy.utils.config.config method)": [[10, "elfpy.utils.config.Config.__getitem__"]], "__getitem__() (elfpy.utils.config.marketconfig method)": [[10, "elfpy.utils.config.MarketConfig.__getitem__"]], "__getitem__() (elfpy.utils.config.simulatorconfig method)": [[10, "elfpy.utils.config.SimulatorConfig.__getitem__"]], "__post_init__() (elfpy.utils.config.simulatorconfig method)": [[10, "elfpy.utils.config.SimulatorConfig.__post_init__"]], "__setitem__() (elfpy.utils.config.ammconfig method)": [[10, "elfpy.utils.config.AMMConfig.__setitem__"]], "__setitem__() (elfpy.utils.config.marketconfig method)": [[10, "elfpy.utils.config.MarketConfig.__setitem__"]], "__setitem__() (elfpy.utils.config.simulatorconfig method)": [[10, "elfpy.utils.config.SimulatorConfig.__setitem__"]], "agent_policies (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.agent_policies"]], "amm (elfpy.utils.config.config attribute)": [[10, "elfpy.utils.config.Config.amm"]], "base_asset_price (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.base_asset_price"]], "compound_vault_apr (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.compound_vault_apr"]], "elfpy.utils.config": [[10, "module-elfpy.utils.config"]], "floor_fee (elfpy.utils.config.ammconfig attribute)": [[10, "elfpy.utils.config.AMMConfig.floor_fee"]], "get_random_variables() (in module elfpy.utils.config)": [[10, "elfpy.utils.config.get_random_variables"]], "init_lp (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.init_lp"]], "init_vault_age (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.init_vault_age"]], "logging_level (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.logging_level"]], "market (elfpy.utils.config.config attribute)": [[10, "elfpy.utils.config.Config.market"]], "max_fee (elfpy.utils.config.ammconfig attribute)": [[10, "elfpy.utils.config.AMMConfig.max_fee"]], "max_pool_apr (elfpy.utils.config.ammconfig attribute)": [[10, "elfpy.utils.config.AMMConfig.max_pool_apr"]], "max_target_liquidity (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.max_target_liquidity"]], "max_target_volume (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.max_target_volume"]], "max_vault_age (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.max_vault_age"]], "min_fee (elfpy.utils.config.ammconfig attribute)": [[10, "elfpy.utils.config.AMMConfig.min_fee"]], "min_pool_apr (elfpy.utils.config.ammconfig attribute)": [[10, "elfpy.utils.config.AMMConfig.min_pool_apr"]], "min_target_liquidity (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.min_target_liquidity"]], "min_target_volume (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.min_target_volume"]], "min_vault_age (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.min_vault_age"]], "num_blocks_per_day (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.num_blocks_per_day"]], "num_trading_days (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.num_trading_days"]], "precision (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.precision"]], "pricing_model_name (elfpy.utils.config.ammconfig attribute)": [[10, "elfpy.utils.config.AMMConfig.pricing_model_name"]], "random_seed (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.random_seed"]], "rng (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.rng"]], "setup_vault_apr() (in module elfpy.utils.config)": [[10, "elfpy.utils.config.setup_vault_apr"]], "shuffle_users (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.shuffle_users"]], "simulator (elfpy.utils.config.config attribute)": [[10, "elfpy.utils.config.Config.simulator"]], "token_duration (elfpy.utils.config.simulatorconfig attribute)": [[10, "elfpy.utils.config.SimulatorConfig.token_duration"]], "vault_apr (elfpy.utils.config.marketconfig attribute)": [[10, "elfpy.utils.config.MarketConfig.vault_apr"]], "elfpy.utils": [[11, "module-elfpy.utils"]], "customencoder (class in elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.CustomEncoder"]], "annotate() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.annotate"]], "clear_axes() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.clear_axes"]], "clear_axis() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.clear_axis"]], "close_logging() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.close_logging"]], "default() (elfpy.utils.outputs.customencoder method)": [[12, "elfpy.utils.outputs.CustomEncoder.default"]], "delete_log_file() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.delete_log_file"]], "elfpy.utils.outputs": [[12, "module-elfpy.utils.outputs"]], "format_axis() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.format_axis"]], "get_gridspec_subplots() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.get_gridspec_subplots"]], "plot_longs_and_shorts() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.plot_longs_and_shorts"]], "plot_market_lp_reserves() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.plot_market_lp_reserves"]], "plot_market_spot_price() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.plot_market_spot_price"]], "plot_pool_apr() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.plot_pool_apr"]], "plot_wallet_returns() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.plot_wallet_returns"]], "setup_logging() (in module elfpy.utils.outputs)": [[12, "elfpy.utils.outputs.setup_logging"]], "elfpy.utils.parse_config": [[13, "module-elfpy.utils.parse_config"]], "load_and_parse_config_file() (in module elfpy.utils.parse_config)": [[13, "elfpy.utils.parse_config.load_and_parse_config_file"]], "load_config_file() (in module elfpy.utils.parse_config)": [[13, "elfpy.utils.parse_config.load_config_file"]], "override_config_variables() (in module elfpy.utils.parse_config)": [[13, "elfpy.utils.parse_config.override_config_variables"]], "parse_simulation_config() (in module elfpy.utils.parse_config)": [[13, "elfpy.utils.parse_config.parse_simulation_config"]], "text_to_logging_level() (in module elfpy.utils.parse_config)": [[13, "elfpy.utils.parse_config.text_to_logging_level"]], "aggregate_trade_data() (in module elfpy.utils.post_processing)": [[14, "elfpy.utils.post_processing.aggregate_trade_data"]], "compute_derived_variables() (in module elfpy.utils.post_processing)": [[14, "elfpy.utils.post_processing.compute_derived_variables"]], "elfpy.utils.post_processing": [[14, "module-elfpy.utils.post_processing"]], "get_simulation_state_df() (in module elfpy.utils.post_processing)": [[14, "elfpy.utils.post_processing.get_simulation_state_df"]], "calc_apr_from_spot_price() (in module elfpy.utils.price)": [[15, "elfpy.utils.price.calc_apr_from_spot_price"]], "calc_spot_price_from_apr() (in module elfpy.utils.price)": [[15, "elfpy.utils.price.calc_spot_price_from_apr"]], "elfpy.utils.price": [[15, "module-elfpy.utils.price"]], "elfpy.utils.sim_utils": [[16, "module-elfpy.utils.sim_utils"]], "get_init_lp_agent() (in module elfpy.utils.sim_utils)": [[16, "elfpy.utils.sim_utils.get_init_lp_agent"]], "get_market() (in module elfpy.utils.sim_utils)": [[16, "elfpy.utils.sim_utils.get_market"]], "get_pricing_model() (in module elfpy.utils.sim_utils)": [[16, "elfpy.utils.sim_utils.get_pricing_model"]], "get_simulator() (in module elfpy.utils.sim_utils)": [[16, "elfpy.utils.sim_utils.get_simulator"]], "override_random_variables() (in module elfpy.utils.sim_utils)": [[16, "elfpy.utils.sim_utils.override_random_variables"]], "block_number_to_datetime() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.block_number_to_datetime"]], "current_datetime() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.current_datetime"]], "days_to_time_remaining() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.days_to_time_remaining"]], "elfpy.utils.time": [[17, "module-elfpy.utils.time"]], "get_yearfrac_remaining() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.get_yearfrac_remaining"]], "norm_days() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.norm_days"]], "stretch_time() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.stretch_time"]], "time_to_days_remaining() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.time_to_days_remaining"]], "unnorm_days() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.unnorm_days"]], "unstretch_time() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.unstretch_time"]], "yearfrac_as_datetime() (in module elfpy.utils.time)": [[17, "elfpy.utils.time.yearfrac_as_datetime"]], "long (class in elfpy.wallet)": [[18, "elfpy.wallet.Long"]], "short (class in elfpy.wallet)": [[18, "elfpy.wallet.Short"]], "wallet (class in elfpy.wallet)": [[18, "elfpy.wallet.Wallet"]], "__getitem__() (elfpy.wallet.wallet method)": [[18, "elfpy.wallet.Wallet.__getitem__"]], "__setitem__() (elfpy.wallet.wallet method)": [[18, "elfpy.wallet.Wallet.__setitem__"]], "__str__() (elfpy.wallet.long method)": [[18, "elfpy.wallet.Long.__str__"]], "__str__() (elfpy.wallet.short method)": [[18, "elfpy.wallet.Short.__str__"]], "__str__() (elfpy.wallet.wallet method)": [[18, "elfpy.wallet.Wallet.__str__"]], "address (elfpy.wallet.wallet attribute)": [[18, "elfpy.wallet.Wallet.address"]], "balance (elfpy.wallet.long attribute)": [[18, "elfpy.wallet.Long.balance"]], "balance (elfpy.wallet.short attribute)": [[18, "elfpy.wallet.Short.balance"]], "base (elfpy.wallet.wallet attribute)": [[18, "elfpy.wallet.Wallet.base"]], "elfpy.wallet": [[18, "module-elfpy.wallet"]], "fees_paid (elfpy.wallet.wallet attribute)": [[18, "elfpy.wallet.Wallet.fees_paid"]], "longs (elfpy.wallet.wallet attribute)": [[18, "elfpy.wallet.Wallet.longs"]], "lp_tokens (elfpy.wallet.wallet attribute)": [[18, "elfpy.wallet.Wallet.lp_tokens"]], "margin (elfpy.wallet.short attribute)": [[18, "elfpy.wallet.Short.margin"]], "shorts (elfpy.wallet.wallet attribute)": [[18, "elfpy.wallet.Wallet.shorts"]], "state (elfpy.wallet.wallet property)": [[18, "elfpy.wallet.Wallet.state"]], "policy (class in init_lp)": [[20, "init_lp.Policy"]], "action() (init_lp.policy method)": [[20, "init_lp.Policy.action"]], "init_lp": [[20, "module-init_lp"]], "policy (class in lp_and_withdraw)": [[21, "lp_and_withdraw.Policy"]], "action() (lp_and_withdraw.policy method)": [[21, "lp_and_withdraw.Policy.action"]], "lp_and_withdraw": [[21, "module-lp_and_withdraw"]], "noaction (class in no_action)": [[22, "no_action.NoAction"]], "action() (no_action.noaction method)": [[22, "no_action.NoAction.action"]], "no_action": [[22, "module-no_action"]], "policy (class in single_long)": [[23, "single_long.Policy"]], "action() (single_long.policy method)": [[23, "single_long.Policy.action"]], "single_long": [[23, "module-single_long"]], "policy (class in single_lp)": [[24, "single_lp.Policy"]], "action() (single_lp.policy method)": [[24, "single_lp.Policy.action"]], "single_lp": [[24, "module-single_lp"]], "policy (class in single_short)": [[25, "single_short.Policy"]], "action() (single_short.policy method)": [[25, "single_short.Policy.action"]], "single_short": [[25, "module-single_short"]]}})