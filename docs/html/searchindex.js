Search.setIndex({"docnames": ["autoapi/elfpy/agent/index", "autoapi/elfpy/index", "autoapi/elfpy/markets/index", "autoapi/elfpy/pricing_models/base/index", "autoapi/elfpy/pricing_models/hyperdrive/index", "autoapi/elfpy/pricing_models/index", "autoapi/elfpy/pricing_models/yieldspace/index", "autoapi/elfpy/simulators/index", "autoapi/elfpy/types/index", "autoapi/elfpy/utils/config/index", "autoapi/elfpy/utils/index", "autoapi/elfpy/utils/outputs/index", "autoapi/elfpy/utils/parse_config/index", "autoapi/elfpy/utils/post_processing/index", "autoapi/elfpy/utils/price/index", "autoapi/elfpy/utils/sim_utils/index", "autoapi/elfpy/utils/time/index", "autoapi/elfpy/wallet/index", "autoapi/index", "autoapi/init_lp/index", "autoapi/lp_and_withdraw/index", "autoapi/no_action/index", "autoapi/single_long/index", "autoapi/single_lp/index", "autoapi/single_short/index", "index"], "filenames": ["autoapi/elfpy/agent/index.rst", "autoapi/elfpy/index.rst", "autoapi/elfpy/markets/index.rst", "autoapi/elfpy/pricing_models/base/index.rst", "autoapi/elfpy/pricing_models/hyperdrive/index.rst", "autoapi/elfpy/pricing_models/index.rst", "autoapi/elfpy/pricing_models/yieldspace/index.rst", "autoapi/elfpy/simulators/index.rst", "autoapi/elfpy/types/index.rst", "autoapi/elfpy/utils/config/index.rst", "autoapi/elfpy/utils/index.rst", "autoapi/elfpy/utils/outputs/index.rst", "autoapi/elfpy/utils/parse_config/index.rst", "autoapi/elfpy/utils/post_processing/index.rst", "autoapi/elfpy/utils/price/index.rst", "autoapi/elfpy/utils/sim_utils/index.rst", "autoapi/elfpy/utils/time/index.rst", "autoapi/elfpy/wallet/index.rst", "autoapi/index.rst", "autoapi/init_lp/index.rst", "autoapi/lp_and_withdraw/index.rst", "autoapi/no_action/index.rst", "autoapi/single_long/index.rst", "autoapi/single_lp/index.rst", "autoapi/single_short/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.agent</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.markets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.hyperdrive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.pricing_models.yieldspace</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.simulators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.outputs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.parse_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.post_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.price</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.sim_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.utils.time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">elfpy.wallet</span></code>", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">init_lp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lp_and_withdraw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">no_action</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">single_long</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">single_lp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">single_short</span></code>", "Welcome to elfpy\u2019s documentation!"], "terms": {"implement": [0, 15, 17, 19, 20, 21, 23, 24], "abstract": [0, 3, 17], "control": [0, 17], "behavior": [0, 11, 17], "wallet_address": [0, 2, 8, 19, 20, 21, 22, 23, 24], "int": [0, 2, 7, 8, 9, 11, 12, 16, 17, 21], "budget": [0, 19, 20, 21, 22, 23, 24], "float": [0, 2, 3, 4, 6, 7, 8, 9, 14, 15, 16, 17, 21], "conduct": 0, "trade": [0, 2, 3, 4, 6, 7, 8, 11, 13, 15, 21], "market": [0, 1, 3, 6, 7, 8, 9, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24], "ha": [0, 2, 11, 16, 17, 19, 20, 22, 23, 24], "i": [0, 2, 3, 4, 6, 7, 8, 9, 11, 13, 15, 17, 19, 21], "dict": [0, 8, 9, 12, 15, 17], "kei": [0, 7, 8, 9, 12, 13, 15, 17], "date": 0, "valu": [0, 1, 2, 3, 7, 8, 9, 15, 16, 17], "an": [0, 2, 4, 6, 8, 11, 12, 15, 17, 21], "how": [0, 2, 3, 6, 15], "mani": [0, 3, 6], "token": [0, 2, 3, 4, 6, 8, 11, 15, 16, 17], "thei": [0, 2], "have": [0, 2, 7, 11, 15], "object": [0, 7, 8, 9, 11, 12, 15], "thi": [0, 2, 3, 4, 6, 7, 8, 11, 15, 17, 18], "type": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "rng": [0, 7, 9], "random": [0, 7, 8, 9, 15], "number": [0, 2, 7, 9, 11, 16], "gener": [0, 7, 9, 18], "us": [0, 2, 3, 4, 6, 7, 8, 9, 15, 16, 19], "variou": 0, "simul": [0, 1, 2, 3, 8, 9, 11, 12, 13, 15, 16, 18], "function": [0, 2, 3, 7], "numpi": [0, 7, 9], "_gener": [0, 7], "id": [0, 7], "identifi": [0, 3, 4, 6], "specif": [0, 2, 7, 8, 9], "amount": [0, 2, 3, 4, 6, 8, 15, 16, 17, 19, 22], "asset": [0, 3, 4, 6, 11, 14, 17], "avail": 0, "spend": 0, "last_update_spend": 0, "time": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 14, 15, 18, 19, 20, 22, 23, 24], "rel": [0, 16], "yearfrac": [0, 14, 16], "when": [0, 2, 3, 17, 20], "last": 0, "made": 0, "track": [0, 7], "pnl": 0, "product_of_time_and_bas": 0, "helper": [0, 2, 8, 11, 13, 15, 16], "attribut": 0, "over": [0, 11, 13], "wallet": [0, 1, 2, 7, 8, 11, 18], "which": [0, 2, 7, 11, 13, 16, 21], "": [0, 1, 2, 4, 6, 8, 11, 16, 17], "balanc": [0, 17], "create_agent_act": 0, "action_typ": [0, 2, 8], "marketactiontyp": [0, 2, 8], "trade_amount": [0, 2, 8], "mint_tim": [0, 2, 8, 16], "0": [0, 1, 2, 3, 8, 14, 15, 16, 17], "marketact": [0, 2, 7, 8, 21], "creat": [0, 8, 18], "return": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 21], "repres": 0, "can": [0, 2, 3, 4, 6, 7, 8, 15, 19, 20, 23, 24], "make": [0, 11], "paramet": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17], "action": [0, 2, 8, 15, 19, 20, 21, 22, 23, 24], "execut": [0, 2, 7, 8], "must": [0, 2, 4, 6, 7, 12], "one": [0, 15, 19, 20, 22, 23, 24], "support": [0, 3], "relev": [0, 11], "were": 0, "mint": [0, 2, 3, 6, 15, 16], "The": [0, 2, 3, 4, 6, 7, 8, 15, 17], "contain": [0, 2, 3, 7, 8, 9, 11, 12, 13, 15, 18], "detail": [0, 2, 8, 15], "about": [0, 8], "list": [0, 7, 8, 9, 11, 15, 21], "method": [0, 2, 3, 8], "meant": 0, "polici": [0, 19, 20, 21, 22, 23, 24], "specifi": [0, 4, 6, 8, 12, 15, 22], "from": [0, 2, 3, 6, 7, 11, 14, 15, 16, 21], "get_max_long": [0, 3], "get": [0, 7, 8, 15, 16], "approxim": 0, "maximum": [0, 3], "base": [0, 1, 2, 4, 5, 6, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "typic": 0, "would": [0, 3, 9, 14], "call": [0, 11], "determin": [0, 15], "much": [0, 2, 15], "enter": 0, "long": [0, 3, 11, 16, 17, 22, 24], "posit": [0, 3, 14, 17, 22], "open": [0, 2, 15, 17, 19, 20, 22, 23, 24], "get_max_short": [0, 3], "bond": [0, 2, 3, 4, 6, 14, 15, 17, 19], "short": [0, 2, 3, 11, 15, 17, 19, 24], "current": [0, 2, 3, 4, 6, 7, 14, 16, 17], "get_trad": 0, "comput": [0, 2, 3, 6, 7, 8, 13, 15], "direct": [0, 7], "chosen": 0, "logic": [0, 2], "we": [0, 2, 8], "calcoutgivenin": 0, "becaus": 0, "know": 0, "want": [0, 4, 6], "care": 0, "less": [0, 16], "exit": 0, "close": [0, 2, 11, 22, 24], "calcingivenout": 0, "what": [0, 17], "pricing_model": [0, 1, 2, 15, 18], "pricingmodel": [0, 2, 3, 6, 7, 15], "price": [0, 1, 2, 3, 4, 6, 7, 10, 13, 15, 18], "model": [0, 2, 3, 4, 6, 7, 15], "update_wallet": 0, "wallet_delta": 0, "none": [0, 2, 7, 8, 11, 15, 17], "updat": [0, 2, 7, 8], "hold": [0, 2], "It": [0, 2], "accord": [0, 2, 16], "pass": [0, 3, 15, 20, 22], "_update_long": 0, "iter": [0, 11, 15], "tupl": [0, 2, 3, 6, 7, 11], "intern": [0, 7], "data": [0, 9], "A": [0, 7, 8, 15], "other": [0, 4, 6, 8], "its": [0, 2, 3], "_update_short": 0, "shortscontain": 0, "get_liquidation_trad": 0, "final": [0, 7], "liquid": [0, 2, 3, 7, 15, 20, 23, 24], "order": [0, 7], "where": 0, "applic": 0, "log_status_report": 0, "log": [0, 2, 11, 12], "user": [0, 2, 3, 4, 6, 8, 9, 12, 17, 19, 20, 21, 22, 23, 24], "state": [0, 2, 3, 4, 6, 7, 8, 17], "log_final_report": 0, "report": 0, "hyperdr": [1, 2, 5, 15, 18], "yieldspac": [1, 2, 3, 4, 5, 15, 18], "util": [1, 7, 18], "config": [1, 7, 10, 12, 15, 18], "output": [1, 4, 6, 7, 10, 13, 15, 18], "parse_config": [1, 10, 18], "post_process": [1, 10, 18], "sim_util": [1, 10, 18], "agent": [1, 2, 7, 8, 11, 15, 17, 18, 19, 20, 21, 22, 23, 24], "default_log_level": [1, 11], "default_log_formatt": 1, "multilin": 1, "string": [1, 2, 7, 11, 12], "show": 1, "asctim": 1, "levelnam": 1, "modul": [1, 25], "funcnam": 1, "messag": 1, "default_log_datetim": 1, "y": [1, 4, 6, 11], "m": 1, "d": [1, 6], "h": 1, "default_log_maxbyt": [1, 11], "black": 1, "cycl": 1, "colorblind": 1, "cmapcyc": 1, "twilight": 1, "cmapdiv": 1, "burd": 1, "cmapseq": 1, "viridi": 1, "cmapcat": 1, "colorblind10": 1, "diverg": 1, "div": 1, "framealpha": 1, "fontnam": 1, "san": 1, "serif": 1, "fontsiz": [1, 11], "9": 1, "gridalpha": 1, "1": [1, 2, 3, 4, 6, 7, 8, 11, 15, 16, 18, 19], "gridbelow": 1, "line": [1, 7], "gridpad": 1, "3": 1, "gridratio": 1, "5": [1, 3, 14, 15], "gridstyl": 1, "labelpad": 1, "4": 1, "larges": 1, "larg": 1, "legendloc": 1, "best": 1, "linewidth": [1, 11], "6": [1, 2, 15], "margin": [1, 2, 17], "05": [1, 3, 14], "mathtext": 1, "smallsiz": 1, "medium": 1, "titleweight": 1, "bold": 1, "tickdir": 1, "out": [1, 2, 3, 4, 6], "ticklen": 1, "ticklenratio": 1, "tickminor": 1, "true": [1, 7, 11], "tickpad": 1, "2": [1, 2, 6], "tickwidthratio": 1, "8": 1, "titlepad": 1, "white": 1, "zline": 1, "zpatch": 1, "rc_param": 1, "store": [2, 7, 9, 17], "inform": [2, 8], "interfac": 2, "amm": [2, 3, 4, 6, 7, 8, 9, 12], "market_st": [2, 3, 4, 6, 8], "marketst": [2, 3, 4, 6, 8], "share_reserv": [2, 3, 8], "bond_reserv": [2, 3, 8], "base_buff": [2, 8], "bond_buff": [2, 8], "lp_reserv": [2, 8], "vault_apr": [2, 7, 8, 9, 15], "share_pric": [2, 3, 8], "init_share_pric": [2, 3, 8, 15], "position_dur": [2, 3, 8, 15], "stretchedtim": [2, 3, 4, 6, 8, 14], "365": [2, 16], "fee_perc": [2, 3, 4, 6, 8, 15], "variabl": [2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 17], "given": [2, 3, 4, 6, 14, 16], "also": 2, "some": [2, 13], "assess": 2, "condit": 2, "properti": [2, 8, 17], "rate": [2, 3, 6], "apr": [2, 3, 9, 11, 14, 15], "spot_pric": [2, 8], "share": [2, 3, 4, 6, 15, 19], "reserv": [2, 3, 4, 6, 11, 15, 19], "check_action_typ": 2, "pricing_model_nam": [2, 9], "str": [2, 3, 4, 6, 7, 8, 9, 11, 12, 15, 17], "ensur": [2, 3], "allow": [2, 9], "see": 2, "all": [2, 7], "accept": 2, "perform": [2, 4, 8, 15, 21], "name": [2, 3, 4, 6, 15], "trade_and_upd": 2, "agent_act": 2, "check": 2, "ar": [2, 3, 4, 6, 7, 8, 15], "being": 2, "handl": 2, "each": [2, 7, 8, 11, 15, 21], "case": [2, 4, 6], "open_long": [2, 8], "close_long": [2, 8], "open_short": [2, 8], "close_short": [2, 8], "add_liquid": [2, 8], "new": [2, 7, 8], "delta": [2, 4, 6, 8], "pool": [2, 3, 14, 15, 16], "address": [2, 17], "lp": [2, 3, 6, 11, 15, 17, 19, 20, 23], "fungibl": 2, "eas": 2, "remove_liquid": [2, 8], "figur": [2, 11], "contribut": 2, "calcualt": 2, "fee": [2, 3, 4, 6, 8, 15, 17], "weight": 2, "resolv": 2, "add": [2, 3, 8, 11, 20, 23], "option": [2, 7, 9, 11, 15], "update_market": 2, "market_delta": 2, "marketdelta": [2, 8], "increment": [2, 7], "member": [2, 3, 4, 6, 7, 12, 13, 15], "reflect": 2, "get_market_state_str": 2, "format": [2, 3, 7, 8, 11, 16], "tick": [2, 11], "delta_tim": 2, "need": [2, 16], "account": [2, 15], "cover": 2, "worst": 2, "scenario": 2, "p": [2, 3], "come": 2, "sourc": [2, 3], "proce": 2, "your": 2, "sale": 2, "max": 2, "you": [2, 19, 20, 23, 24], "depost": 2, "two": 2, "compon": 2, "both": [2, 11], "yet": 2, "happili": 2, "up": [2, 3, 7, 15, 17], "unit": [2, 3, 4, 6, 8, 14, 16], "so": [2, 7, 15], "follow": [2, 3], "ident": [2, 7], "total": [2, 3, 8, 11, 15, 16], "deposit": [2, 4, 6, 15], "face": 2, "guarante": 2, "system": 2, "alwai": [2, 4, 6], "fulli": 2, "back": 2, "equal": 2, "give": 2, "u": 2, "reduc": 2, "longer": 2, "same": [2, 9, 12, 15], "drain": 2, "pai": [2, 4, 6], "bought": 2, "minu": 2, "cost": 2, "bui": 2, "d_base": [2, 3, 6, 8], "trade_result": [2, 3], "user_result": [2, 8], "neg": 2, "more": [2, 15], "take": 2, "spec": 2, "turn": 2, "after": [2, 8, 9, 22], "ad": [2, 4, 6, 17], "remov": [2, 20, 23], "log_market_step_str": 2, "step": 2, "abc": 3, "calcul": [3, 4, 6, 14, 15, 16], "should": [3, 4, 6, 8, 15, 16], "instanti": [3, 7, 8, 11, 15], "own": 3, "assum": 3, "child": 3, "calc_in_given_out": [3, 4, 6], "quantiti": [3, 4, 6, 8, 11], "time_remain": [3, 4, 6, 14, 16], "traderesult": [3, 4, 6, 8], "adjust": [3, 15], "calc_out_given_in": [3, 4, 6], "in_": [3, 4, 6], "calc_lp_out_given_tokens_in": [3, 6], "calc_lp_in_given_tokens_out": [3, 6], "calc_tokens_out_given_lp_in": [3, 6], "lp_in": [3, 6], "addit": [3, 6, 15], "model_nam": [3, 4, 6, 8, 13, 15], "uniqu": [3, 4, 6], "model_typ": [3, 4, 6], "lower": [3, 4, 6], "snake_cas": [3, 4, 6], "_calc_k_const": [3, 6], "decim": [3, 6, 14, 15], "k": [3, 4, 6], "constant": [3, 4, 6, 8, 16], "mathemat": [3, 6], "calc_bond_reserv": 3, "target_apr": 3, "e": [3, 15, 16], "target": [3, 15], "fix": [3, 14], "exampl": [3, 14], "days_remain": [3, 16], "dai": [3, 7, 8, 11, 13, 15, 16], "left": [3, 16], "until": [3, 14, 15, 16, 23, 24], "matur": [3, 14, 16], "time_stretch": [3, 8, 16], "stretch": [3, 4, 6, 8, 15, 16], "year": [3, 15, 16], "origin": 3, "start": [3, 16], "expect": 3, "input": [3, 4, 6, 7, 12, 15], "todo": [3, 15], "write": 3, "test": [3, 11], "calc_share_reserv": 3, "pt": [3, 4, 6, 8], "provid": [3, 4, 6, 7, 14, 15, 16], "calc_liquid": 3, "target_liquid": [3, 8, 15], "volum": [3, 7], "suppli": [3, 11], "scale": [3, 16], "factor": [3, 16], "while": 3, "keep": [3, 13], "ratio": [3, 15], "preserv": 3, "total_liquid": 3, "term": [3, 4, 6, 14, 16], "total_reserv": 3, "arbitrari": 3, "au": 3, "math": [3, 6], "target_liquidity_usd": 3, "try": 3, "achiev": [3, 15], "desir": [3, 15, 19], "seed": [3, 7], "durat": [3, 14, 15, 16], "calc_total_liquidity_from_reserves_and_pric": 3, "underli": [3, 11], "yield": [3, 4, 6, 15], "calc_spot_price_from_reserv": 3, "spot": [3, 13, 14], "defin": [3, 9, 12], "begin": [3, 4, 6], "align": 3, "frac": [3, 4, 6], "2y": [3, 4, 6], "cz": [3, 4, 6], "mu": [3, 4, 6], "z": [3, 4, 6], "tau": [3, 4, 6], "end": [3, 4, 6], "remain": [3, 4, 6, 14, 16], "incorpor": [3, 4, 6], "princip": 3, "_calc_spot_price_from_reserves_high_precis": 3, "variant": 3, "result": [3, 4, 8, 15], "high": 3, "precis": [3, 9], "calc_apr_from_reserv": 3, "bisect": 3, "percent": [3, 15], "charg": 3, "purchas": 3, "calc_time_stretch": 3, "check_input_assert": 3, "appli": [3, 8], "set": [3, 7, 8, 11, 15, 17], "assert": 3, "check_output_assert": 3, "hyperdrivepricingmodel": 4, "yieldspacepricingmodel": [4, 6], "combin": 4, "sum": 4, "invari": [4, 6], "modif": [4, 6, 9], "enabl": [4, 6], "bear": [4, 6, 15], "vault": [4, 6, 15], "receiv": [4, 6], "c": [4, 6], "cdot": [4, 6], "t": [4, 6, 15, 23, 24], "text": [4, 6, 11], "_in": [4, 6], "f": [4, 6], "phi": [4, 6], "percentag": [4, 6], "differ": [4, 6, 15], "between": [4, 6, 7, 15, 16], "paid": [4, 6, 17], "without": [4, 6, 15], "slippag": [4, 6, 8, 15], "_out": [4, 6], "r": 6, "d_b": 6, "wrap": 7, "experi": 7, "random_simulation_vari": 7, "randomsimulationvari": [7, 8, 9, 12, 15], "environ": 7, "experiment": 7, "includ": [7, 8], "rang": 7, "To": [7, 15], "conjunct": 7, "check_vault_apr": 7, "verifi": 7, "right": 7, "length": [7, 9, 16], "set_rng": 7, "assign": [7, 9, 21], "forc": 7, "across": 7, "run": [7, 9, 11, 15], "construct": [7, 8, 9, 15], "np": 7, "default_rng": 7, "log_config_vari": 7, "print": 7, "get_simulation_state_str": 7, "state_str": 7, "self": [7, 8, 17], "__dict__": 7, "cast": 7, "separ": [7, 11], "market_step_s": [7, 8], "minimum": 7, "block": [7, 16], "blocks_per_year": 7, "add_ag": 7, "agent_list": 7, "append": [7, 8], "simulation_st": [7, 13], "If": [7, 11], "alreadi": 7, "happen": 7, "indic": [7, 21], "run_trade_numb": [7, 8], "empti": [7, 15, 21], "prepend": 7, "still": [7, 16], "easili": 7, "convert": [7, 12, 13, 16, 17], "panda": [7, 13], "datafram": [7, 13], "collect_and_execute_trad": 7, "last_block_in_sim": 7, "bool": [7, 9, 11], "fals": [7, 11], "them": 7, "occur": 7, "collect_trad": 7, "agent_id": 7, "ani": [7, 11, 15, 17], "collect": [7, 8, 15], "These": 7, "correspond": [7, 12, 15], "regist": 7, "associ": 7, "collect_liquidation_trad": 7, "execute_trad": 7, "run_simul": 7, "dictionari": [7, 12, 13, 15], "primari": 7, "loop": 7, "group": 7, "num_trading_dai": [7, 8, 9], "There": 7, "doe": 7, "update_simulation_st": 7, "common": 8, "throughtout": 8, "codebas": 8, "to_descript": 8, "descript": [8, 12, 15], "dataclass": [8, 9, 12, 15, 17], "metadata": 8, "wei": 8, "1e": [8, 15], "18": [8, 11], "max_reserves_differ": 8, "20000000000": 8, "tokentyp": 8, "enum": 8, "descriptor": 8, "normalized_tim": 8, "normal": [8, 16], "stretched_tim": [8, 16], "__str__": [8, 17], "chang": [8, 12, 15], "d_base_asset": 8, "d_token_asset": 8, "d_base_buff": 8, "d_bond_buff": 8, "d_lp_reserv": 8, "d_share_pric": 8, "__getitem__": [8, 9, 17], "__setitem__": [8, 9, 17], "like": [8, 11], "total_suppli": 8, "apply_delta": 8, "agenttraderesult": 8, "d_bond": 8, "markettraderesult": 8, "tradebreakdown": 8, "granular": 8, "breakdown": 8, "relat": 8, "without_fee_or_slippag": 8, "with_fe": 8, "without_fe": 8, "addition": 8, "market_result": 8, "dure": 8, "setup": [8, 11, 15, 21], "target_pool_apr": [8, 15], "init_vault_ag": [8, 9], "__post_init__": [8, 9], "simulationst": [8, 13], "run_numb": 8, "simulation_start_tim": 8, "block_numb": [8, 16], "daily_block_numb": 8, "block_timestamp": 8, "current_market_datetim": 8, "current_market_yearfrac": 8, "floor_fe": [8, 9], "base_asset_pric": [8, 9], "pool_apr": 8, "num_blocks_per_dai": [8, 9], "update_market_st": 8, "entri": 8, "copi": 8, "update_agent_wallet": 8, "referenc": 8, "structur": 9, "marketconfig": [9, 12], "min_target_liquid": 9, "max_target_liquid": 9, "min_target_volum": 9, "max_target_volum": 9, "min_vault_ag": 9, "max_vault_ag": 9, "union": 9, "callabl": 9, "ammconfig": [9, 12], "min_fe": 9, "max_fe": 9, "min_pool_apr": 9, "max_pool_apr": 9, "simulatorconfig": [9, 12], "token_dur": [9, 15, 16], "shuffle_us": 9, "agent_polici": 9, "init_lp": [9, 11, 15, 18], "compound_vault_apr": 9, "logging_level": 9, "random_se": 9, "setup_vault_apr": 9, "note": [9, 15], "infinit": 9, "small": [9, 15], "get_random_vari": 9, "initi": [9, 15, 19], "deliv": 11, "plot_market_lp_reserv": 11, "matplotlib": 11, "plot": 11, "per": [11, 15], "plot_market_spot_pric": 11, "plot_pool_apr": 11, "plot_longs_and_short": 11, "exclude_first_ag": 11, "xtick_step": 11, "10": 11, "exclud": 11, "first": [11, 15], "usual": 11, "plot_wallet_return": 11, "get_gridspec_subplot": 11, "nrow": 11, "ncol": 11, "kwarg": 11, "pyplot": 11, "ax": 11, "gridspec": 11, "reason": 11, "space": 11, "row": 11, "column": [11, 13], "keyword": 11, "argument": [11, 15], "clear_axi": 11, "axi": 11, "spine": 11, "clear": 11, "label": 11, "proplot": 11, "color": 11, "default": [11, 15, 16], "invis": 11, "clear_ax": 11, "format_axi": 11, "axis_handl": 11, "xlabel": 11, "linestyl": 11, "grei": 11, "annot": 11, "major_offset": 11, "minor_offset": 11, "val": 11, "legend": 11, "delete_log_fil": 11, "logger": 11, "handler": 11, "file": [11, 12], "delet": 11, "setup_log": 11, "log_filenam": 11, "max_byt": 11, "log_level": 11, "close_log": 11, "delete_log": 11, "customencod": 11, "skipkei": 11, "ensure_ascii": 11, "check_circular": 11, "allow_nan": 11, "sort_kei": 11, "indent": 11, "json": 11, "jsonencod": 11, "custom": 11, "encod": 11, "dump": 11, "o": 11, "overrid": [11, 15], "pars": 12, "load": 12, "toml": 12, "load_and_parse_config_fil": 12, "config_fil": 12, "wrapper": 12, "absolut": 12, "path": 12, "nest": 12, "class": [12, 13, 15], "load_config_fil": 12, "config_dict": 12, "parse_simulation_config": 12, "text_to_logging_level": 12, "logging_text": 12, "level": [12, 15], "integ": 12, "debug": 12, "info": 12, "warn": 12, "error": 12, "critic": 12, "override_config_vari": 12, "override_dict": [12, 15], "replac": 12, "exist": 12, "ones": 12, "field": [12, 15], "post": 13, "process": 13, "get_simulation_state_df": 13, "well": 13, "compute_derived_vari": 13, "deriv": 13, "aggregate_trade_data": 13, "aggreg": 13, "mean": 13, "trades_agg": 13, "calc_apr_from_spot_pric": 14, "normalized_time_remain": 14, "calc_spot_price_from_apr": 14, "get_simul": 15, "random_sim_var": 15, "sane": 15, "get_init_lp_ag": 15, "seed_liquid": 15, "requir": 15, "hit": 15, "larger": 15, "estim": 15, "due": 15, "next": 15, "monoton": 15, "decreas": 15, "sinc": [15, 16], "diminish": 15, "here": 15, "http": 15, "github": 15, "com": 15, "element": 15, "fi": 15, "elf": 15, "pull": 15, "136": 15, "issuecom": 15, "1405922764": 15, "lper": 15, "within": 15, "15": 15, "13": 15, "init_lp_ag": 15, "get_market": 15, "explicitli": 15, "portion": 15, "express": 15, "expiri": 15, "fraction": [15, 16], "g": [15, 16], "month": 15, "valut": 15, "renam": 15, "doesn": [15, 23, 24], "get_pricing_model": 15, "match": 15, "override_random_vari": 15, "random_vari": 15, "current_datetim": 16, "datetim": 16, "utc": 16, "block_number_to_datetim": 16, "start_tim": 16, "time_between_block": 16, "timestamp": 16, "second": 16, "wa": 16, "valid": 16, "yearfrac_as_datetim": 16, "plu": 16, "get_yearfrac_remain": 16, "market_tim": 16, "elaps": 16, "question": 16, "than": 16, "norm_dai": 16, "normalizing_const": 16, "assumpt": 16, "stretch_tim": 16, "unnorm_dai": 16, "normed_dai": 16, "unstretch_tim": 16, "unstretch": 16, "been": 16, "days_to_time_remain": 16, "time_to_days_remain": 16, "trader": 17, "held": 17, "lp_token": 17, "fees_paid": 17, "public": 17, "instead": 17, "page": [18, 25], "auto": 18, "document": 18, "elfpi": [18, 19, 20, 21, 22, 23, 24], "lp_and_withdraw": 18, "single_long": 18, "single_short": 18, "no_act": 18, "single_lp": 18, "sphinx": 18, "autoapi": 18, "special": 19, "strategi": [19, 20, 22, 23, 24], "1000": [19, 20, 22, 23], "first_base_to_lp": 19, "pt_to_short": 19, "100": [19, 24], "second_base_to_lp": 19, "simpl": [19, 20, 22, 23, 24], "onli": [19, 20, 22, 23, 24], "do": [19, 20, 23], "onc": [19, 20, 23, 24], "enough": 20, "inherit": 21, "thu": 21, "subclass": 21, "basicpolici": 21, "noaction": 21, "most": 21, "basic": 21, "noop": 21, "now": 21, "certain": 22, "_market": 23, "singl": 24, "thatonli": 24, "index": 25, "search": 25}, "objects": {"": [[1, 0, 0, "-", "elfpy"], [19, 0, 0, "-", "init_lp"], [20, 0, 0, "-", "lp_and_withdraw"], [21, 0, 0, "-", "no_action"], [22, 0, 0, "-", "single_long"], [23, 0, 0, "-", "single_lp"], [24, 0, 0, "-", "single_short"]], "elfpy": [[1, 1, 1, "", "BLACK"], [1, 1, 1, "", "CMAPCAT"], [1, 1, 1, "", "CMAPCYC"], [1, 1, 1, "", "CMAPDIV"], [1, 1, 1, "", "CMAPSEQ"], [1, 1, 1, "", "CYCLE"], [1, 1, 1, "", "DEFAULT_LOG_DATETIME"], [1, 1, 1, "", "DEFAULT_LOG_FORMATTER"], [1, 1, 1, "", "DEFAULT_LOG_LEVEL"], [1, 1, 1, "", "DEFAULT_LOG_MAXBYTES"], [1, 1, 1, "", "DIVERGING"], [1, 1, 1, "", "FONTNAME"], [1, 1, 1, "", "FONTSIZE"], [1, 1, 1, "", "FRAMEALPHA"], [1, 1, 1, "", "GRIDALPHA"], [1, 1, 1, "", "GRIDBELOW"], [1, 1, 1, "", "GRIDPAD"], [1, 1, 1, "", "GRIDRATIO"], [1, 1, 1, "", "GRIDSTYLE"], [1, 1, 1, "", "LABELPAD"], [1, 1, 1, "", "LARGESIZE"], [1, 1, 1, "", "LEGENDLOC"], [1, 1, 1, "", "LINEWIDTH"], [1, 1, 1, "", "MARGIN"], [1, 1, 1, "", "MATHTEXT"], [1, 1, 1, "", "SMALLSIZE"], [1, 1, 1, "", "TICKDIR"], [1, 1, 1, "", "TICKLEN"], [1, 1, 1, "", "TICKLENRATIO"], [1, 1, 1, "", "TICKMINOR"], [1, 1, 1, "", "TICKPAD"], [1, 1, 1, "", "TICKWIDTHRATIO"], [1, 1, 1, "", "TITLEPAD"], [1, 1, 1, "", "TITLEWEIGHT"], [1, 1, 1, "", "WHITE"], [1, 1, 1, "", "ZLINES"], [1, 1, 1, "", "ZPATCHES"], [0, 0, 0, "-", "agent"], [2, 0, 0, "-", "markets"], [5, 0, 0, "-", "pricing_models"], [1, 1, 1, "", "rc_params"], [7, 0, 0, "-", "simulators"], [8, 0, 0, "-", "types"], [10, 0, 0, "-", "utils"], [17, 0, 0, "-", "wallet"]], "elfpy.agent": [[0, 2, 1, "", "Agent"]], "elfpy.agent.Agent": [[0, 3, 1, "", "_update_longs"], [0, 3, 1, "", "_update_shorts"], [0, 3, 1, "", "action"], [0, 4, 1, "", "budget"], [0, 3, 1, "", "create_agent_action"], [0, 3, 1, "", "get_liquidation_trades"], [0, 3, 1, "", "get_max_long"], [0, 3, 1, "", "get_max_short"], [0, 3, 1, "", "get_trades"], [0, 4, 1, "", "last_update_spend"], [0, 3, 1, "", "log_final_report"], [0, 3, 1, "", "log_status_report"], [0, 4, 1, "", "market"], [0, 4, 1, "", "product_of_time_and_base"], [0, 4, 1, "", "rng"], [0, 3, 1, "", "update_wallet"], [0, 4, 1, "", "wallet"], [0, 4, 1, "", "wallet_address"]], "elfpy.markets": [[2, 2, 1, "", "Market"]], "elfpy.markets.Market": [[2, 3, 1, "", "add_liquidity"], [2, 3, 1, "", "check_action_type"], [2, 3, 1, "", "close_long"], [2, 3, 1, "", "close_short"], [2, 3, 1, "", "get_market_state_string"], [2, 3, 1, "", "log_market_step_string"], [2, 3, 1, "", "open_long"], [2, 3, 1, "", "open_short"], [2, 5, 1, "", "rate"], [2, 3, 1, "", "remove_liquidity"], [2, 5, 1, "", "spot_price"], [2, 3, 1, "", "tick"], [2, 3, 1, "", "trade_and_update"], [2, 3, 1, "", "update_market"]], "elfpy.pricing_models": [[3, 0, 0, "-", "base"], [4, 0, 0, "-", "hyperdrive"], [6, 0, 0, "-", "yieldspace"]], "elfpy.pricing_models.base": [[3, 2, 1, "", "PricingModel"]], "elfpy.pricing_models.base.PricingModel": [[3, 3, 1, "", "_calc_k_const"], [3, 3, 1, "", "_calc_spot_price_from_reserves_high_precision"], [3, 3, 1, "", "calc_apr_from_reserves"], [3, 3, 1, "", "calc_bond_reserves"], [3, 3, 1, "", "calc_in_given_out"], [3, 3, 1, "", "calc_liquidity"], [3, 3, 1, "", "calc_lp_in_given_tokens_out"], [3, 3, 1, "", "calc_lp_out_given_tokens_in"], [3, 3, 1, "", "calc_out_given_in"], [3, 3, 1, "", "calc_share_reserves"], [3, 3, 1, "", "calc_spot_price_from_reserves"], [3, 3, 1, "", "calc_time_stretch"], [3, 3, 1, "", "calc_tokens_out_given_lp_in"], [3, 3, 1, "", "calc_total_liquidity_from_reserves_and_price"], [3, 3, 1, "", "check_input_assertions"], [3, 3, 1, "", "check_output_assertions"], [3, 3, 1, "", "get_max_long"], [3, 3, 1, "", "get_max_short"], [3, 3, 1, "", "model_name"], [3, 3, 1, "", "model_type"]], "elfpy.pricing_models.hyperdrive": [[4, 2, 1, "", "HyperdrivePricingModel"]], "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel": [[4, 3, 1, "", "calc_in_given_out"], [4, 3, 1, "", "calc_out_given_in"], [4, 3, 1, "", "model_name"], [4, 3, 1, "", "model_type"]], "elfpy.pricing_models.yieldspace": [[6, 2, 1, "", "YieldSpacePricingModel"]], "elfpy.pricing_models.yieldspace.YieldSpacePricingModel": [[6, 3, 1, "", "_calc_k_const"], [6, 3, 1, "", "calc_in_given_out"], [6, 3, 1, "", "calc_lp_in_given_tokens_out"], [6, 3, 1, "", "calc_lp_out_given_tokens_in"], [6, 3, 1, "", "calc_out_given_in"], [6, 3, 1, "", "calc_tokens_out_given_lp_in"], [6, 3, 1, "", "model_name"], [6, 3, 1, "", "model_type"]], "elfpy.simulators": [[7, 2, 1, "", "Simulator"]], "elfpy.simulators.Simulator": [[7, 3, 1, "", "add_agents"], [7, 3, 1, "", "check_vault_apr"], [7, 3, 1, "", "collect_and_execute_trades"], [7, 3, 1, "", "collect_liquidation_trades"], [7, 3, 1, "", "collect_trades"], [7, 3, 1, "", "execute_trades"], [7, 3, 1, "", "get_simulation_state_string"], [7, 3, 1, "", "log_config_variables"], [7, 3, 1, "", "market_step_size"], [7, 3, 1, "", "run_simulation"], [7, 3, 1, "", "set_rng"], [7, 3, 1, "", "update_simulation_state"]], "elfpy.types": [[8, 2, 1, "", "AgentTradeResult"], [8, 1, 1, "", "MAX_RESERVES_DIFFERENCE"], [8, 2, 1, "", "MarketAction"], [8, 2, 1, "", "MarketActionType"], [8, 2, 1, "", "MarketDeltas"], [8, 2, 1, "", "MarketState"], [8, 2, 1, "", "MarketTradeResult"], [8, 2, 1, "", "Quantity"], [8, 2, 1, "", "RandomSimulationVariables"], [8, 2, 1, "", "SimulationState"], [8, 2, 1, "", "StretchedTime"], [8, 2, 1, "", "TokenType"], [8, 2, 1, "", "TradeBreakdown"], [8, 2, 1, "", "TradeResult"], [8, 1, 1, "", "WEI"], [8, 6, 1, "", "to_description"]], "elfpy.types.AgentTradeResult": [[8, 4, 1, "", "d_base"], [8, 4, 1, "", "d_bonds"]], "elfpy.types.MarketAction": [[8, 3, 1, "", "__str__"], [8, 4, 1, "", "action_type"], [8, 4, 1, "", "mint_time"], [8, 4, 1, "", "trade_amount"], [8, 4, 1, "", "wallet_address"]], "elfpy.types.MarketActionType": [[8, 4, 1, "", "ADD_LIQUIDITY"], [8, 4, 1, "", "CLOSE_LONG"], [8, 4, 1, "", "CLOSE_SHORT"], [8, 4, 1, "", "OPEN_LONG"], [8, 4, 1, "", "OPEN_SHORT"], [8, 4, 1, "", "REMOVE_LIQUIDITY"]], "elfpy.types.MarketDeltas": [[8, 3, 1, "", "__getitem__"], [8, 3, 1, "", "__setitem__"], [8, 3, 1, "", "__str__"], [8, 4, 1, "", "d_base_asset"], [8, 4, 1, "", "d_base_buffer"], [8, 4, 1, "", "d_bond_buffer"], [8, 4, 1, "", "d_lp_reserves"], [8, 4, 1, "", "d_share_price"], [8, 4, 1, "", "d_token_asset"]], "elfpy.types.MarketState": [[8, 3, 1, "", "__str__"], [8, 3, 1, "", "apply_delta"], [8, 4, 1, "", "base_buffer"], [8, 4, 1, "", "bond_buffer"], [8, 4, 1, "", "bond_reserves"], [8, 4, 1, "", "init_share_price"], [8, 4, 1, "", "lp_reserves"], [8, 4, 1, "", "share_price"], [8, 4, 1, "", "share_reserves"], [8, 4, 1, "", "vault_apr"]], "elfpy.types.MarketTradeResult": [[8, 4, 1, "", "d_base"], [8, 4, 1, "", "d_bonds"]], "elfpy.types.Quantity": [[8, 4, 1, "", "amount"], [8, 4, 1, "", "unit"]], "elfpy.types.RandomSimulationVariables": [[8, 3, 1, "", "__post_init__"], [8, 4, 1, "", "fee_percent"], [8, 4, 1, "", "init_share_price"], [8, 4, 1, "", "init_vault_age"], [8, 4, 1, "", "target_liquidity"], [8, 4, 1, "", "target_pool_apr"], [8, 4, 1, "", "vault_apr"]], "elfpy.types.SimulationState": [[8, 3, 1, "", "__getitem__"], [8, 3, 1, "", "__setitem__"], [8, 4, 1, "", "base_asset_price"], [8, 4, 1, "", "block_number"], [8, 4, 1, "", "block_timestamp"], [8, 4, 1, "", "current_market_datetime"], [8, 4, 1, "", "current_market_yearfrac"], [8, 4, 1, "", "daily_block_number"], [8, 4, 1, "", "day"], [8, 4, 1, "", "fee_percent"], [8, 4, 1, "", "floor_fee"], [8, 4, 1, "", "init_vault_age"], [8, 4, 1, "", "market_step_size"], [8, 4, 1, "", "model_name"], [8, 4, 1, "", "num_blocks_per_day"], [8, 4, 1, "", "num_trading_days"], [8, 4, 1, "", "pool_apr"], [8, 4, 1, "", "position_duration"], [8, 4, 1, "", "run_number"], [8, 4, 1, "", "run_trade_number"], [8, 4, 1, "", "simulation_start_time"], [8, 4, 1, "", "spot_price"], [8, 4, 1, "", "target_liquidity"], [8, 3, 1, "", "update_agent_wallet"], [8, 3, 1, "", "update_market_state"]], "elfpy.types.StretchedTime": [[8, 3, 1, "", "__str__"], [8, 5, 1, "", "days"], [8, 5, 1, "", "normalized_time"], [8, 5, 1, "", "stretched_time"], [8, 5, 1, "", "time_stretch"]], "elfpy.types.TokenType": [[8, 4, 1, "", "BASE"], [8, 4, 1, "", "PT"]], "elfpy.types.TradeBreakdown": [[8, 4, 1, "", "fee"], [8, 4, 1, "", "with_fee"], [8, 4, 1, "", "without_fee"], [8, 4, 1, "", "without_fee_or_slippage"]], "elfpy.types.TradeResult": [[8, 4, 1, "", "breakdown"], [8, 4, 1, "", "market_result"], [8, 4, 1, "", "user_result"]], "elfpy.utils": [[9, 0, 0, "-", "config"], [11, 0, 0, "-", "outputs"], [12, 0, 0, "-", "parse_config"], [13, 0, 0, "-", "post_processing"], [14, 0, 0, "-", "price"], [15, 0, 0, "-", "sim_utils"], [16, 0, 0, "-", "time"]], "elfpy.utils.config": [[9, 2, 1, "", "AMMConfig"], [9, 2, 1, "", "Config"], [9, 2, 1, "", "MarketConfig"], [9, 2, 1, "", "SimulatorConfig"], [9, 6, 1, "", "get_random_variables"], [9, 6, 1, "", "setup_vault_apr"]], "elfpy.utils.config.AMMConfig": [[9, 3, 1, "", "__getitem__"], [9, 3, 1, "", "__setitem__"], [9, 4, 1, "", "floor_fee"], [9, 4, 1, "", "max_fee"], [9, 4, 1, "", "max_pool_apr"], [9, 4, 1, "", "min_fee"], [9, 4, 1, "", "min_pool_apr"], [9, 4, 1, "", "pricing_model_name"]], "elfpy.utils.config.Config": [[9, 3, 1, "", "__getitem__"], [9, 4, 1, "", "amm"], [9, 4, 1, "", "market"], [9, 4, 1, "", "simulator"]], "elfpy.utils.config.MarketConfig": [[9, 3, 1, "", "__getitem__"], [9, 3, 1, "", "__setitem__"], [9, 4, 1, "", "base_asset_price"], [9, 4, 1, "", "max_target_liquidity"], [9, 4, 1, "", "max_target_volume"], [9, 4, 1, "", "max_vault_age"], [9, 4, 1, "", "min_target_liquidity"], [9, 4, 1, "", "min_target_volume"], [9, 4, 1, "", "min_vault_age"], [9, 4, 1, "", "vault_apr"]], "elfpy.utils.config.SimulatorConfig": [[9, 3, 1, "", "__getitem__"], [9, 3, 1, "", "__post_init__"], [9, 3, 1, "", "__setitem__"], [9, 4, 1, "", "agent_policies"], [9, 4, 1, "", "compound_vault_apr"], [9, 4, 1, "", "init_lp"], [9, 4, 1, "", "init_vault_age"], [9, 4, 1, "", "logging_level"], [9, 4, 1, "", "num_blocks_per_day"], [9, 4, 1, "", "num_trading_days"], [9, 4, 1, "", "precision"], [9, 4, 1, "", "random_seed"], [9, 4, 1, "", "rng"], [9, 4, 1, "", "shuffle_users"], [9, 4, 1, "", "token_duration"]], "elfpy.utils.outputs": [[11, 2, 1, "", "CustomEncoder"], [11, 6, 1, "", "annotate"], [11, 6, 1, "", "clear_axes"], [11, 6, 1, "", "clear_axis"], [11, 6, 1, "", "close_logging"], [11, 6, 1, "", "delete_log_file"], [11, 6, 1, "", "format_axis"], [11, 6, 1, "", "get_gridspec_subplots"], [11, 6, 1, "", "plot_longs_and_shorts"], [11, 6, 1, "", "plot_market_lp_reserves"], [11, 6, 1, "", "plot_market_spot_price"], [11, 6, 1, "", "plot_pool_apr"], [11, 6, 1, "", "plot_wallet_returns"], [11, 6, 1, "", "setup_logging"]], "elfpy.utils.outputs.CustomEncoder": [[11, 3, 1, "", "default"]], "elfpy.utils.parse_config": [[12, 6, 1, "", "load_and_parse_config_file"], [12, 6, 1, "", "load_config_file"], [12, 6, 1, "", "override_config_variables"], [12, 6, 1, "", "parse_simulation_config"], [12, 6, 1, "", "text_to_logging_level"]], "elfpy.utils.post_processing": [[13, 6, 1, "", "aggregate_trade_data"], [13, 6, 1, "", "compute_derived_variables"], [13, 6, 1, "", "get_simulation_state_df"]], "elfpy.utils.price": [[14, 6, 1, "", "calc_apr_from_spot_price"], [14, 6, 1, "", "calc_spot_price_from_apr"]], "elfpy.utils.sim_utils": [[15, 6, 1, "", "get_init_lp_agent"], [15, 6, 1, "", "get_market"], [15, 6, 1, "", "get_pricing_model"], [15, 6, 1, "", "get_simulator"], [15, 6, 1, "", "override_random_variables"]], "elfpy.utils.time": [[16, 6, 1, "", "block_number_to_datetime"], [16, 6, 1, "", "current_datetime"], [16, 6, 1, "", "days_to_time_remaining"], [16, 6, 1, "", "get_yearfrac_remaining"], [16, 6, 1, "", "norm_days"], [16, 6, 1, "", "stretch_time"], [16, 6, 1, "", "time_to_days_remaining"], [16, 6, 1, "", "unnorm_days"], [16, 6, 1, "", "unstretch_time"], [16, 6, 1, "", "yearfrac_as_datetime"]], "elfpy.wallet": [[17, 2, 1, "", "Long"], [17, 2, 1, "", "Short"], [17, 2, 1, "", "Wallet"]], "elfpy.wallet.Long": [[17, 3, 1, "", "__str__"], [17, 4, 1, "", "balance"]], "elfpy.wallet.Short": [[17, 3, 1, "", "__str__"], [17, 4, 1, "", "balance"], [17, 4, 1, "", "margin"]], "elfpy.wallet.Wallet": [[17, 3, 1, "", "__getitem__"], [17, 3, 1, "", "__setitem__"], [17, 3, 1, "", "__str__"], [17, 4, 1, "", "address"], [17, 4, 1, "", "base"], [17, 4, 1, "", "fees_paid"], [17, 4, 1, "", "longs"], [17, 4, 1, "", "lp_tokens"], [17, 4, 1, "", "shorts"], [17, 5, 1, "", "state"]], "init_lp": [[19, 2, 1, "", "Policy"]], "init_lp.Policy": [[19, 3, 1, "", "action"]], "lp_and_withdraw": [[20, 2, 1, "", "Policy"]], "lp_and_withdraw.Policy": [[20, 3, 1, "", "action"]], "no_action": [[21, 2, 1, "", "NoAction"]], "no_action.NoAction": [[21, 3, 1, "", "action"]], "single_long": [[22, 2, 1, "", "Policy"]], "single_long.Policy": [[22, 3, 1, "", "action"]], "single_lp": [[23, 2, 1, "", "Policy"]], "single_lp.Policy": [[23, 3, 1, "", "action"]], "single_short": [[24, 2, 1, "", "Policy"]], "single_short.Policy": [[24, 3, 1, "", "action"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "titleterms": {"elfpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25], "agent": 0, "modul": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24], "content": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24], "class": [0, 2, 3, 4, 6, 7, 8, 9, 11, 17, 19, 20, 21, 22, 23, 24], "subpackag": 1, "submodul": [1, 5, 10], "packag": 1, "market": 2, "pricing_model": [3, 4, 5, 6], "base": 3, "hyperdr": 4, "yieldspac": 6, "simul": 7, "type": 8, "function": [8, 9, 11, 12, 13, 14, 15, 16], "attribut": 8, "todo": [8, 17], "util": [9, 10, 11, 12, 13, 14, 15, 16], "config": 9, "output": 11, "parse_config": 12, "post_process": 13, "price": 14, "sim_util": 15, "time": 16, "wallet": 17, "api": 18, "refer": 18, "init_lp": 19, "lp_and_withdraw": 20, "no_act": 21, "single_long": 22, "single_lp": 23, "single_short": 24, "welcom": 25, "": 25, "document": 25, "indic": 25, "tabl": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"elfpy.agent": [[0, "module-elfpy.agent"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"]], "Classes": [[0, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [11, "classes"], [17, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"]], "elfpy": [[1, "module-elfpy"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [5, "submodules"], [10, "submodules"]], "Package Contents": [[1, "package-contents"]], "elfpy.markets": [[2, "module-elfpy.markets"]], "elfpy.pricing_models.base": [[3, "module-elfpy.pricing_models.base"]], "elfpy.pricing_models.hyperdrive": [[4, "module-elfpy.pricing_models.hyperdrive"]], "elfpy.pricing_models": [[5, "module-elfpy.pricing_models"]], "elfpy.pricing_models.yieldspace": [[6, "module-elfpy.pricing_models.yieldspace"]], "elfpy.simulators": [[7, "module-elfpy.simulators"]], "elfpy.types": [[8, "module-elfpy.types"]], "Functions": [[8, "functions"], [9, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"]], "Attributes": [[8, "attributes"]], "Todo": [[8, "id1"], [17, "id1"]], "elfpy.utils.config": [[9, "module-elfpy.utils.config"]], "elfpy.utils": [[10, "module-elfpy.utils"]], "elfpy.utils.outputs": [[11, "module-elfpy.utils.outputs"]], "elfpy.utils.parse_config": [[12, "module-elfpy.utils.parse_config"]], "elfpy.utils.post_processing": [[13, "module-elfpy.utils.post_processing"]], "elfpy.utils.price": [[14, "module-elfpy.utils.price"]], "elfpy.utils.sim_utils": [[15, "module-elfpy.utils.sim_utils"]], "elfpy.utils.time": [[16, "module-elfpy.utils.time"]], "elfpy.wallet": [[17, "module-elfpy.wallet"]], "API Reference": [[18, "api-reference"]], "init_lp": [[19, "module-init_lp"]], "lp_and_withdraw": [[20, "module-lp_and_withdraw"]], "no_action": [[21, "module-no_action"]], "single_long": [[22, "module-single_long"]], "single_lp": [[23, "module-single_lp"]], "single_short": [[24, "module-single_short"]], "Welcome to elfpy\u2019s documentation!": [[25, "welcome-to-elfpy-s-documentation"]], "Indices and tables": [[25, "indices-and-tables"]]}, "indexentries": {"agent (class in elfpy.agent)": [[0, "elfpy.agent.Agent"]], "_update_longs() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent._update_longs"]], "_update_shorts() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent._update_shorts"]], "action() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.action"]], "budget (elfpy.agent.agent attribute)": [[0, "elfpy.agent.Agent.budget"]], "create_agent_action() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.create_agent_action"]], "elfpy.agent": [[0, "module-elfpy.agent"]], "get_liquidation_trades() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.get_liquidation_trades"]], "get_max_long() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.get_max_long"]], "get_max_short() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.get_max_short"]], "get_trades() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.get_trades"]], "last_update_spend (elfpy.agent.agent attribute)": [[0, "elfpy.agent.Agent.last_update_spend"]], "log_final_report() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.log_final_report"]], "log_status_report() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.log_status_report"]], "market (elfpy.agent.agent attribute)": [[0, "elfpy.agent.Agent.market"]], "module": [[0, "module-elfpy.agent"], [1, "module-elfpy"], [2, "module-elfpy.markets"], [3, "module-elfpy.pricing_models.base"], [4, "module-elfpy.pricing_models.hyperdrive"], [5, "module-elfpy.pricing_models"], [6, "module-elfpy.pricing_models.yieldspace"], [7, "module-elfpy.simulators"], [8, "module-elfpy.types"], [9, "module-elfpy.utils.config"], [10, "module-elfpy.utils"], [11, "module-elfpy.utils.outputs"], [12, "module-elfpy.utils.parse_config"], [13, "module-elfpy.utils.post_processing"], [14, "module-elfpy.utils.price"], [15, "module-elfpy.utils.sim_utils"], [16, "module-elfpy.utils.time"], [17, "module-elfpy.wallet"], [19, "module-init_lp"], [20, "module-lp_and_withdraw"], [21, "module-no_action"], [22, "module-single_long"], [23, "module-single_lp"], [24, "module-single_short"]], "product_of_time_and_base (elfpy.agent.agent attribute)": [[0, "elfpy.agent.Agent.product_of_time_and_base"]], "rng (elfpy.agent.agent attribute)": [[0, "elfpy.agent.Agent.rng"]], "update_wallet() (elfpy.agent.agent method)": [[0, "elfpy.agent.Agent.update_wallet"]], "wallet (elfpy.agent.agent attribute)": [[0, "elfpy.agent.Agent.wallet"]], "wallet_address (elfpy.agent.agent attribute)": [[0, "elfpy.agent.Agent.wallet_address"]], "black (in module elfpy)": [[1, "elfpy.BLACK"]], "cmapcat (in module elfpy)": [[1, "elfpy.CMAPCAT"]], "cmapcyc (in module elfpy)": [[1, "elfpy.CMAPCYC"]], "cmapdiv (in module elfpy)": [[1, "elfpy.CMAPDIV"]], "cmapseq (in module elfpy)": [[1, "elfpy.CMAPSEQ"]], "cycle (in module elfpy)": [[1, "elfpy.CYCLE"]], "default_log_datetime (in module elfpy)": [[1, "elfpy.DEFAULT_LOG_DATETIME"]], "default_log_formatter (in module elfpy)": [[1, "elfpy.DEFAULT_LOG_FORMATTER"]], "default_log_level (in module elfpy)": [[1, "elfpy.DEFAULT_LOG_LEVEL"]], "default_log_maxbytes (in module elfpy)": [[1, "elfpy.DEFAULT_LOG_MAXBYTES"]], "diverging (in module elfpy)": [[1, "elfpy.DIVERGING"]], "fontname (in module elfpy)": [[1, "elfpy.FONTNAME"]], "fontsize (in module elfpy)": [[1, "elfpy.FONTSIZE"]], "framealpha (in module elfpy)": [[1, "elfpy.FRAMEALPHA"]], "gridalpha (in module elfpy)": [[1, "elfpy.GRIDALPHA"]], "gridbelow (in module elfpy)": [[1, "elfpy.GRIDBELOW"]], "gridpad (in module elfpy)": [[1, "elfpy.GRIDPAD"]], "gridratio (in module elfpy)": [[1, "elfpy.GRIDRATIO"]], "gridstyle (in module elfpy)": [[1, "elfpy.GRIDSTYLE"]], "labelpad (in module elfpy)": [[1, "elfpy.LABELPAD"]], "largesize (in module elfpy)": [[1, "elfpy.LARGESIZE"]], "legendloc (in module elfpy)": [[1, "elfpy.LEGENDLOC"]], "linewidth (in module elfpy)": [[1, "elfpy.LINEWIDTH"]], "margin (in module elfpy)": [[1, "elfpy.MARGIN"]], "mathtext (in module elfpy)": [[1, "elfpy.MATHTEXT"]], "smallsize (in module elfpy)": [[1, "elfpy.SMALLSIZE"]], "tickdir (in module elfpy)": [[1, "elfpy.TICKDIR"]], "ticklen (in module elfpy)": [[1, "elfpy.TICKLEN"]], "ticklenratio (in module elfpy)": [[1, "elfpy.TICKLENRATIO"]], "tickminor (in module elfpy)": [[1, "elfpy.TICKMINOR"]], "tickpad (in module elfpy)": [[1, "elfpy.TICKPAD"]], "tickwidthratio (in module elfpy)": [[1, "elfpy.TICKWIDTHRATIO"]], "titlepad (in module elfpy)": [[1, "elfpy.TITLEPAD"]], "titleweight (in module elfpy)": [[1, "elfpy.TITLEWEIGHT"]], "white (in module elfpy)": [[1, "elfpy.WHITE"]], "zlines (in module elfpy)": [[1, "elfpy.ZLINES"]], "zpatches (in module elfpy)": [[1, "elfpy.ZPATCHES"]], "elfpy": [[1, "module-elfpy"]], "rc_params (in module elfpy)": [[1, "elfpy.rc_params"]], "market (class in elfpy.markets)": [[2, "elfpy.markets.Market"]], "add_liquidity() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.add_liquidity"]], "check_action_type() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.check_action_type"]], "close_long() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.close_long"]], "close_short() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.close_short"]], "elfpy.markets": [[2, "module-elfpy.markets"]], "get_market_state_string() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.get_market_state_string"]], "log_market_step_string() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.log_market_step_string"]], "open_long() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.open_long"]], "open_short() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.open_short"]], "rate (elfpy.markets.market property)": [[2, "elfpy.markets.Market.rate"]], "remove_liquidity() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.remove_liquidity"]], "spot_price (elfpy.markets.market property)": [[2, "elfpy.markets.Market.spot_price"]], "tick() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.tick"]], "trade_and_update() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.trade_and_update"]], "update_market() (elfpy.markets.market method)": [[2, "elfpy.markets.Market.update_market"]], "pricingmodel (class in elfpy.pricing_models.base)": [[3, "elfpy.pricing_models.base.PricingModel"]], "_calc_k_const() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel._calc_k_const"]], "_calc_spot_price_from_reserves_high_precision() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel._calc_spot_price_from_reserves_high_precision"]], "calc_apr_from_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_apr_from_reserves"]], "calc_bond_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_bond_reserves"]], "calc_in_given_out() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_in_given_out"]], "calc_liquidity() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_liquidity"]], "calc_lp_in_given_tokens_out() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_lp_in_given_tokens_out"]], "calc_lp_out_given_tokens_in() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_lp_out_given_tokens_in"]], "calc_out_given_in() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_out_given_in"]], "calc_share_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_share_reserves"]], "calc_spot_price_from_reserves() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_spot_price_from_reserves"]], "calc_time_stretch() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_time_stretch"]], "calc_tokens_out_given_lp_in() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_tokens_out_given_lp_in"]], "calc_total_liquidity_from_reserves_and_price() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.calc_total_liquidity_from_reserves_and_price"]], "check_input_assertions() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.check_input_assertions"]], "check_output_assertions() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.check_output_assertions"]], "elfpy.pricing_models.base": [[3, "module-elfpy.pricing_models.base"]], "get_max_long() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.get_max_long"]], "get_max_short() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.get_max_short"]], "model_name() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.model_name"]], "model_type() (elfpy.pricing_models.base.pricingmodel method)": [[3, "elfpy.pricing_models.base.PricingModel.model_type"]], "hyperdrivepricingmodel (class in elfpy.pricing_models.hyperdrive)": [[4, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel"]], "calc_in_given_out() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[4, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.calc_in_given_out"]], "calc_out_given_in() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[4, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.calc_out_given_in"]], "elfpy.pricing_models.hyperdrive": [[4, "module-elfpy.pricing_models.hyperdrive"]], "model_name() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[4, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.model_name"]], "model_type() (elfpy.pricing_models.hyperdrive.hyperdrivepricingmodel method)": [[4, "elfpy.pricing_models.hyperdrive.HyperdrivePricingModel.model_type"]], "elfpy.pricing_models": [[5, "module-elfpy.pricing_models"]], "yieldspacepricingmodel (class in elfpy.pricing_models.yieldspace)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel"]], "_calc_k_const() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel._calc_k_const"]], "calc_in_given_out() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_in_given_out"]], "calc_lp_in_given_tokens_out() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_lp_in_given_tokens_out"]], "calc_lp_out_given_tokens_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_lp_out_given_tokens_in"]], "calc_out_given_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_out_given_in"]], "calc_tokens_out_given_lp_in() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.calc_tokens_out_given_lp_in"]], "elfpy.pricing_models.yieldspace": [[6, "module-elfpy.pricing_models.yieldspace"]], "model_name() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.model_name"]], "model_type() (elfpy.pricing_models.yieldspace.yieldspacepricingmodel method)": [[6, "elfpy.pricing_models.yieldspace.YieldSpacePricingModel.model_type"]], "simulator (class in elfpy.simulators)": [[7, "elfpy.simulators.Simulator"]], "add_agents() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.add_agents"]], "check_vault_apr() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.check_vault_apr"]], "collect_and_execute_trades() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.collect_and_execute_trades"]], "collect_liquidation_trades() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.collect_liquidation_trades"]], "collect_trades() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.collect_trades"]], "elfpy.simulators": [[7, "module-elfpy.simulators"]], "execute_trades() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.execute_trades"]], "get_simulation_state_string() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.get_simulation_state_string"]], "log_config_variables() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.log_config_variables"]], "market_step_size() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.market_step_size"]], "run_simulation() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.run_simulation"]], "set_rng() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.set_rng"]], "update_simulation_state() (elfpy.simulators.simulator method)": [[7, "elfpy.simulators.Simulator.update_simulation_state"]], "add_liquidity (elfpy.types.marketactiontype attribute)": [[8, "elfpy.types.MarketActionType.ADD_LIQUIDITY"]], "agenttraderesult (class in elfpy.types)": [[8, "elfpy.types.AgentTradeResult"]], "base (elfpy.types.tokentype attribute)": [[8, "elfpy.types.TokenType.BASE"]], "close_long (elfpy.types.marketactiontype attribute)": [[8, "elfpy.types.MarketActionType.CLOSE_LONG"]], "close_short (elfpy.types.marketactiontype attribute)": [[8, "elfpy.types.MarketActionType.CLOSE_SHORT"]], "max_reserves_difference (in module elfpy.types)": [[8, "elfpy.types.MAX_RESERVES_DIFFERENCE"]], "marketaction (class in elfpy.types)": [[8, "elfpy.types.MarketAction"]], "marketactiontype (class in elfpy.types)": [[8, "elfpy.types.MarketActionType"]], "marketdeltas (class in elfpy.types)": [[8, "elfpy.types.MarketDeltas"]], "marketstate (class in elfpy.types)": [[8, "elfpy.types.MarketState"]], "markettraderesult (class in elfpy.types)": [[8, "elfpy.types.MarketTradeResult"]], "open_long (elfpy.types.marketactiontype attribute)": [[8, "elfpy.types.MarketActionType.OPEN_LONG"]], "open_short (elfpy.types.marketactiontype attribute)": [[8, "elfpy.types.MarketActionType.OPEN_SHORT"]], "pt (elfpy.types.tokentype attribute)": [[8, "elfpy.types.TokenType.PT"]], "quantity (class in elfpy.types)": [[8, "elfpy.types.Quantity"]], "remove_liquidity (elfpy.types.marketactiontype attribute)": [[8, "elfpy.types.MarketActionType.REMOVE_LIQUIDITY"]], "randomsimulationvariables (class in elfpy.types)": [[8, "elfpy.types.RandomSimulationVariables"]], "simulationstate (class in elfpy.types)": [[8, "elfpy.types.SimulationState"]], "stretchedtime (class in elfpy.types)": [[8, "elfpy.types.StretchedTime"]], "tokentype (class in elfpy.types)": [[8, "elfpy.types.TokenType"]], "tradebreakdown (class in elfpy.types)": [[8, "elfpy.types.TradeBreakdown"]], "traderesult (class in elfpy.types)": [[8, "elfpy.types.TradeResult"]], "wei (in module elfpy.types)": [[8, "elfpy.types.WEI"]], "__getitem__() (elfpy.types.marketdeltas method)": [[8, "elfpy.types.MarketDeltas.__getitem__"]], "__getitem__() (elfpy.types.simulationstate method)": [[8, "elfpy.types.SimulationState.__getitem__"]], "__post_init__() (elfpy.types.randomsimulationvariables method)": [[8, "elfpy.types.RandomSimulationVariables.__post_init__"]], "__setitem__() (elfpy.types.marketdeltas method)": [[8, "elfpy.types.MarketDeltas.__setitem__"]], "__setitem__() (elfpy.types.simulationstate method)": [[8, "elfpy.types.SimulationState.__setitem__"]], "__str__() (elfpy.types.marketaction method)": [[8, "elfpy.types.MarketAction.__str__"]], "__str__() (elfpy.types.marketdeltas method)": [[8, "elfpy.types.MarketDeltas.__str__"]], "__str__() (elfpy.types.marketstate method)": [[8, "elfpy.types.MarketState.__str__"]], "__str__() (elfpy.types.stretchedtime method)": [[8, "elfpy.types.StretchedTime.__str__"]], "action_type (elfpy.types.marketaction attribute)": [[8, "elfpy.types.MarketAction.action_type"]], "amount (elfpy.types.quantity attribute)": [[8, "elfpy.types.Quantity.amount"]], "apply_delta() (elfpy.types.marketstate method)": [[8, "elfpy.types.MarketState.apply_delta"]], "base_asset_price (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.base_asset_price"]], "base_buffer (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.base_buffer"]], "block_number (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.block_number"]], "block_timestamp (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.block_timestamp"]], "bond_buffer (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.bond_buffer"]], "bond_reserves (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.bond_reserves"]], "breakdown (elfpy.types.traderesult attribute)": [[8, "elfpy.types.TradeResult.breakdown"]], "current_market_datetime (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.current_market_datetime"]], "current_market_yearfrac (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.current_market_yearfrac"]], "d_base (elfpy.types.agenttraderesult attribute)": [[8, "elfpy.types.AgentTradeResult.d_base"]], "d_base (elfpy.types.markettraderesult attribute)": [[8, "elfpy.types.MarketTradeResult.d_base"]], "d_base_asset (elfpy.types.marketdeltas attribute)": [[8, "elfpy.types.MarketDeltas.d_base_asset"]], "d_base_buffer (elfpy.types.marketdeltas attribute)": [[8, "elfpy.types.MarketDeltas.d_base_buffer"]], "d_bond_buffer (elfpy.types.marketdeltas attribute)": [[8, "elfpy.types.MarketDeltas.d_bond_buffer"]], "d_bonds (elfpy.types.agenttraderesult attribute)": [[8, "elfpy.types.AgentTradeResult.d_bonds"]], "d_bonds (elfpy.types.markettraderesult attribute)": [[8, "elfpy.types.MarketTradeResult.d_bonds"]], "d_lp_reserves (elfpy.types.marketdeltas attribute)": [[8, "elfpy.types.MarketDeltas.d_lp_reserves"]], "d_share_price (elfpy.types.marketdeltas attribute)": [[8, "elfpy.types.MarketDeltas.d_share_price"]], "d_token_asset (elfpy.types.marketdeltas attribute)": [[8, "elfpy.types.MarketDeltas.d_token_asset"]], "daily_block_number (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.daily_block_number"]], "day (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.day"]], "days (elfpy.types.stretchedtime property)": [[8, "elfpy.types.StretchedTime.days"]], "elfpy.types": [[8, "module-elfpy.types"]], "fee (elfpy.types.tradebreakdown attribute)": [[8, "elfpy.types.TradeBreakdown.fee"]], "fee_percent (elfpy.types.randomsimulationvariables attribute)": [[8, "elfpy.types.RandomSimulationVariables.fee_percent"]], "fee_percent (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.fee_percent"]], "floor_fee (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.floor_fee"]], "init_share_price (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.init_share_price"]], "init_share_price (elfpy.types.randomsimulationvariables attribute)": [[8, "elfpy.types.RandomSimulationVariables.init_share_price"]], "init_vault_age (elfpy.types.randomsimulationvariables attribute)": [[8, "elfpy.types.RandomSimulationVariables.init_vault_age"]], "init_vault_age (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.init_vault_age"]], "lp_reserves (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.lp_reserves"]], "market_result (elfpy.types.traderesult attribute)": [[8, "elfpy.types.TradeResult.market_result"]], "market_step_size (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.market_step_size"]], "mint_time (elfpy.types.marketaction attribute)": [[8, "elfpy.types.MarketAction.mint_time"]], "model_name (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.model_name"]], "normalized_time (elfpy.types.stretchedtime property)": [[8, "elfpy.types.StretchedTime.normalized_time"]], "num_blocks_per_day (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.num_blocks_per_day"]], "num_trading_days (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.num_trading_days"]], "pool_apr (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.pool_apr"]], "position_duration (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.position_duration"]], "run_number (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.run_number"]], "run_trade_number (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.run_trade_number"]], "share_price (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.share_price"]], "share_reserves (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.share_reserves"]], "simulation_start_time (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.simulation_start_time"]], "spot_price (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.spot_price"]], "stretched_time (elfpy.types.stretchedtime property)": [[8, "elfpy.types.StretchedTime.stretched_time"]], "target_liquidity (elfpy.types.randomsimulationvariables attribute)": [[8, "elfpy.types.RandomSimulationVariables.target_liquidity"]], "target_liquidity (elfpy.types.simulationstate attribute)": [[8, "elfpy.types.SimulationState.target_liquidity"]], "target_pool_apr (elfpy.types.randomsimulationvariables attribute)": [[8, "elfpy.types.RandomSimulationVariables.target_pool_apr"]], "time_stretch (elfpy.types.stretchedtime property)": [[8, "elfpy.types.StretchedTime.time_stretch"]], "to_description() (in module elfpy.types)": [[8, "elfpy.types.to_description"]], "trade_amount (elfpy.types.marketaction attribute)": [[8, "elfpy.types.MarketAction.trade_amount"]], "unit (elfpy.types.quantity attribute)": [[8, "elfpy.types.Quantity.unit"]], "update_agent_wallet() (elfpy.types.simulationstate method)": [[8, "elfpy.types.SimulationState.update_agent_wallet"]], "update_market_state() (elfpy.types.simulationstate method)": [[8, "elfpy.types.SimulationState.update_market_state"]], "user_result (elfpy.types.traderesult attribute)": [[8, "elfpy.types.TradeResult.user_result"]], "vault_apr (elfpy.types.marketstate attribute)": [[8, "elfpy.types.MarketState.vault_apr"]], "vault_apr (elfpy.types.randomsimulationvariables attribute)": [[8, "elfpy.types.RandomSimulationVariables.vault_apr"]], "wallet_address (elfpy.types.marketaction attribute)": [[8, "elfpy.types.MarketAction.wallet_address"]], "with_fee (elfpy.types.tradebreakdown attribute)": [[8, "elfpy.types.TradeBreakdown.with_fee"]], "without_fee (elfpy.types.tradebreakdown attribute)": [[8, "elfpy.types.TradeBreakdown.without_fee"]], "without_fee_or_slippage (elfpy.types.tradebreakdown attribute)": [[8, "elfpy.types.TradeBreakdown.without_fee_or_slippage"]], "ammconfig (class in elfpy.utils.config)": [[9, "elfpy.utils.config.AMMConfig"]], "config (class in elfpy.utils.config)": [[9, "elfpy.utils.config.Config"]], "marketconfig (class in elfpy.utils.config)": [[9, "elfpy.utils.config.MarketConfig"]], "simulatorconfig (class in elfpy.utils.config)": [[9, "elfpy.utils.config.SimulatorConfig"]], "__getitem__() (elfpy.utils.config.ammconfig method)": [[9, "elfpy.utils.config.AMMConfig.__getitem__"]], "__getitem__() (elfpy.utils.config.config method)": [[9, "elfpy.utils.config.Config.__getitem__"]], "__getitem__() (elfpy.utils.config.marketconfig method)": [[9, "elfpy.utils.config.MarketConfig.__getitem__"]], "__getitem__() (elfpy.utils.config.simulatorconfig method)": [[9, "elfpy.utils.config.SimulatorConfig.__getitem__"]], "__post_init__() (elfpy.utils.config.simulatorconfig method)": [[9, "elfpy.utils.config.SimulatorConfig.__post_init__"]], "__setitem__() (elfpy.utils.config.ammconfig method)": [[9, "elfpy.utils.config.AMMConfig.__setitem__"]], "__setitem__() (elfpy.utils.config.marketconfig method)": [[9, "elfpy.utils.config.MarketConfig.__setitem__"]], "__setitem__() (elfpy.utils.config.simulatorconfig method)": [[9, "elfpy.utils.config.SimulatorConfig.__setitem__"]], "agent_policies (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.agent_policies"]], "amm (elfpy.utils.config.config attribute)": [[9, "elfpy.utils.config.Config.amm"]], "base_asset_price (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.base_asset_price"]], "compound_vault_apr (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.compound_vault_apr"]], "elfpy.utils.config": [[9, "module-elfpy.utils.config"]], "floor_fee (elfpy.utils.config.ammconfig attribute)": [[9, "elfpy.utils.config.AMMConfig.floor_fee"]], "get_random_variables() (in module elfpy.utils.config)": [[9, "elfpy.utils.config.get_random_variables"]], "init_lp (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.init_lp"]], "init_vault_age (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.init_vault_age"]], "logging_level (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.logging_level"]], "market (elfpy.utils.config.config attribute)": [[9, "elfpy.utils.config.Config.market"]], "max_fee (elfpy.utils.config.ammconfig attribute)": [[9, "elfpy.utils.config.AMMConfig.max_fee"]], "max_pool_apr (elfpy.utils.config.ammconfig attribute)": [[9, "elfpy.utils.config.AMMConfig.max_pool_apr"]], "max_target_liquidity (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.max_target_liquidity"]], "max_target_volume (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.max_target_volume"]], "max_vault_age (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.max_vault_age"]], "min_fee (elfpy.utils.config.ammconfig attribute)": [[9, "elfpy.utils.config.AMMConfig.min_fee"]], "min_pool_apr (elfpy.utils.config.ammconfig attribute)": [[9, "elfpy.utils.config.AMMConfig.min_pool_apr"]], "min_target_liquidity (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.min_target_liquidity"]], "min_target_volume (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.min_target_volume"]], "min_vault_age (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.min_vault_age"]], "num_blocks_per_day (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.num_blocks_per_day"]], "num_trading_days (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.num_trading_days"]], "precision (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.precision"]], "pricing_model_name (elfpy.utils.config.ammconfig attribute)": [[9, "elfpy.utils.config.AMMConfig.pricing_model_name"]], "random_seed (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.random_seed"]], "rng (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.rng"]], "setup_vault_apr() (in module elfpy.utils.config)": [[9, "elfpy.utils.config.setup_vault_apr"]], "shuffle_users (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.shuffle_users"]], "simulator (elfpy.utils.config.config attribute)": [[9, "elfpy.utils.config.Config.simulator"]], "token_duration (elfpy.utils.config.simulatorconfig attribute)": [[9, "elfpy.utils.config.SimulatorConfig.token_duration"]], "vault_apr (elfpy.utils.config.marketconfig attribute)": [[9, "elfpy.utils.config.MarketConfig.vault_apr"]], "elfpy.utils": [[10, "module-elfpy.utils"]], "customencoder (class in elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.CustomEncoder"]], "annotate() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.annotate"]], "clear_axes() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.clear_axes"]], "clear_axis() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.clear_axis"]], "close_logging() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.close_logging"]], "default() (elfpy.utils.outputs.customencoder method)": [[11, "elfpy.utils.outputs.CustomEncoder.default"]], "delete_log_file() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.delete_log_file"]], "elfpy.utils.outputs": [[11, "module-elfpy.utils.outputs"]], "format_axis() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.format_axis"]], "get_gridspec_subplots() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.get_gridspec_subplots"]], "plot_longs_and_shorts() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.plot_longs_and_shorts"]], "plot_market_lp_reserves() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.plot_market_lp_reserves"]], "plot_market_spot_price() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.plot_market_spot_price"]], "plot_pool_apr() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.plot_pool_apr"]], "plot_wallet_returns() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.plot_wallet_returns"]], "setup_logging() (in module elfpy.utils.outputs)": [[11, "elfpy.utils.outputs.setup_logging"]], "elfpy.utils.parse_config": [[12, "module-elfpy.utils.parse_config"]], "load_and_parse_config_file() (in module elfpy.utils.parse_config)": [[12, "elfpy.utils.parse_config.load_and_parse_config_file"]], "load_config_file() (in module elfpy.utils.parse_config)": [[12, "elfpy.utils.parse_config.load_config_file"]], "override_config_variables() (in module elfpy.utils.parse_config)": [[12, "elfpy.utils.parse_config.override_config_variables"]], "parse_simulation_config() (in module elfpy.utils.parse_config)": [[12, "elfpy.utils.parse_config.parse_simulation_config"]], "text_to_logging_level() (in module elfpy.utils.parse_config)": [[12, "elfpy.utils.parse_config.text_to_logging_level"]], "aggregate_trade_data() (in module elfpy.utils.post_processing)": [[13, "elfpy.utils.post_processing.aggregate_trade_data"]], "compute_derived_variables() (in module elfpy.utils.post_processing)": [[13, "elfpy.utils.post_processing.compute_derived_variables"]], "elfpy.utils.post_processing": [[13, "module-elfpy.utils.post_processing"]], "get_simulation_state_df() (in module elfpy.utils.post_processing)": [[13, "elfpy.utils.post_processing.get_simulation_state_df"]], "calc_apr_from_spot_price() (in module elfpy.utils.price)": [[14, "elfpy.utils.price.calc_apr_from_spot_price"]], "calc_spot_price_from_apr() (in module elfpy.utils.price)": [[14, "elfpy.utils.price.calc_spot_price_from_apr"]], "elfpy.utils.price": [[14, "module-elfpy.utils.price"]], "elfpy.utils.sim_utils": [[15, "module-elfpy.utils.sim_utils"]], "get_init_lp_agent() (in module elfpy.utils.sim_utils)": [[15, "elfpy.utils.sim_utils.get_init_lp_agent"]], "get_market() (in module elfpy.utils.sim_utils)": [[15, "elfpy.utils.sim_utils.get_market"]], "get_pricing_model() (in module elfpy.utils.sim_utils)": [[15, "elfpy.utils.sim_utils.get_pricing_model"]], "get_simulator() (in module elfpy.utils.sim_utils)": [[15, "elfpy.utils.sim_utils.get_simulator"]], "override_random_variables() (in module elfpy.utils.sim_utils)": [[15, "elfpy.utils.sim_utils.override_random_variables"]], "block_number_to_datetime() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.block_number_to_datetime"]], "current_datetime() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.current_datetime"]], "days_to_time_remaining() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.days_to_time_remaining"]], "elfpy.utils.time": [[16, "module-elfpy.utils.time"]], "get_yearfrac_remaining() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.get_yearfrac_remaining"]], "norm_days() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.norm_days"]], "stretch_time() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.stretch_time"]], "time_to_days_remaining() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.time_to_days_remaining"]], "unnorm_days() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.unnorm_days"]], "unstretch_time() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.unstretch_time"]], "yearfrac_as_datetime() (in module elfpy.utils.time)": [[16, "elfpy.utils.time.yearfrac_as_datetime"]], "long (class in elfpy.wallet)": [[17, "elfpy.wallet.Long"]], "short (class in elfpy.wallet)": [[17, "elfpy.wallet.Short"]], "wallet (class in elfpy.wallet)": [[17, "elfpy.wallet.Wallet"]], "__getitem__() (elfpy.wallet.wallet method)": [[17, "elfpy.wallet.Wallet.__getitem__"]], "__setitem__() (elfpy.wallet.wallet method)": [[17, "elfpy.wallet.Wallet.__setitem__"]], "__str__() (elfpy.wallet.long method)": [[17, "elfpy.wallet.Long.__str__"]], "__str__() (elfpy.wallet.short method)": [[17, "elfpy.wallet.Short.__str__"]], "__str__() (elfpy.wallet.wallet method)": [[17, "elfpy.wallet.Wallet.__str__"]], "address (elfpy.wallet.wallet attribute)": [[17, "elfpy.wallet.Wallet.address"]], "balance (elfpy.wallet.long attribute)": [[17, "elfpy.wallet.Long.balance"]], "balance (elfpy.wallet.short attribute)": [[17, "elfpy.wallet.Short.balance"]], "base (elfpy.wallet.wallet attribute)": [[17, "elfpy.wallet.Wallet.base"]], "elfpy.wallet": [[17, "module-elfpy.wallet"]], "fees_paid (elfpy.wallet.wallet attribute)": [[17, "elfpy.wallet.Wallet.fees_paid"]], "longs (elfpy.wallet.wallet attribute)": [[17, "elfpy.wallet.Wallet.longs"]], "lp_tokens (elfpy.wallet.wallet attribute)": [[17, "elfpy.wallet.Wallet.lp_tokens"]], "margin (elfpy.wallet.short attribute)": [[17, "elfpy.wallet.Short.margin"]], "shorts (elfpy.wallet.wallet attribute)": [[17, "elfpy.wallet.Wallet.shorts"]], "state (elfpy.wallet.wallet property)": [[17, "elfpy.wallet.Wallet.state"]], "policy (class in init_lp)": [[19, "init_lp.Policy"]], "action() (init_lp.policy method)": [[19, "init_lp.Policy.action"]], "init_lp": [[19, "module-init_lp"]], "policy (class in lp_and_withdraw)": [[20, "lp_and_withdraw.Policy"]], "action() (lp_and_withdraw.policy method)": [[20, "lp_and_withdraw.Policy.action"]], "lp_and_withdraw": [[20, "module-lp_and_withdraw"]], "noaction (class in no_action)": [[21, "no_action.NoAction"]], "action() (no_action.noaction method)": [[21, "no_action.NoAction.action"]], "no_action": [[21, "module-no_action"]], "policy (class in single_long)": [[22, "single_long.Policy"]], "action() (single_long.policy method)": [[22, "single_long.Policy.action"]], "single_long": [[22, "module-single_long"]], "policy (class in single_lp)": [[23, "single_lp.Policy"]], "action() (single_lp.policy method)": [[23, "single_lp.Policy.action"]], "single_lp": [[23, "module-single_lp"]], "policy (class in single_short)": [[24, "single_short.Policy"]], "action() (single_short.policy method)": [[24, "single_short.Policy.action"]], "single_short": [[24, "module-single_short"]]}})