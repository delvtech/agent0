"""A web3.py Contract class for the StETHTarget0Deployer contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain"""

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overriden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long


from __future__ import annotations

from typing import Any, Type, cast

from eth_account.signers.local import LocalAccount
from eth_typing import ChecksumAddress, HexStr
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import Contract, ContractConstructor, ContractFunction, ContractFunctions
from web3.exceptions import FallbackNotFound
from web3.types import ABI, BlockIdentifier, CallOverride, TxParams

from .IHyperdriveTypes import Fees, PoolConfig
from .utilities import dataclass_to_tuple, rename_returned_types, try_bytecode_hexbytes

structs = {
    "Fees": Fees,
    "PoolConfig": PoolConfig,
}


class StETHTarget0DeployerDeployTargetContractFunction(ContractFunction):
    """ContractFunction for the deployTarget method."""

    def __call__(self, config: PoolConfig, arg2: bytes, salt: bytes) -> StETHTarget0DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(config), dataclass_to_tuple(arg2), dataclass_to_tuple(salt))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: CallOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(transaction, block_identifier, state_override, ccip_read_enabled)
        return cast(str, rename_returned_types(structs, return_types, raw_values))


class StETHTarget0DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the StETHTarget0Deployer contract."""

    deployTarget: StETHTarget0DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = StETHTarget0DeployerDeployTargetContractFunction.factory(
            "deployTarget",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            function_identifier="deployTarget",
        )


stethtarget0deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {"name": "baseToken", "type": "address", "internalType": "contract IERC20"},
                        {"name": "vaultSharesToken", "type": "address", "internalType": "contract IERC20"},
                        {"name": "linkerFactory", "type": "address", "internalType": "address"},
                        {"name": "linkerCodeHash", "type": "bytes32", "internalType": "bytes32"},
                        {"name": "initialVaultSharePrice", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumShareReserves", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumTransactionAmount", "type": "uint256", "internalType": "uint256"},
                        {"name": "circuitBreakerDelta", "type": "uint256", "internalType": "uint256"},
                        {"name": "positionDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "checkpointDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "timeStretch", "type": "uint256", "internalType": "uint256"},
                        {"name": "governance", "type": "address", "internalType": "address"},
                        {"name": "feeCollector", "type": "address", "internalType": "address"},
                        {"name": "sweepCollector", "type": "address", "internalType": "address"},
                        {"name": "checkpointRewarder", "type": "address", "internalType": "address"},
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {"name": "curve", "type": "uint256", "internalType": "uint256"},
                                {"name": "flat", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceLP", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceZombie", "type": "uint256", "internalType": "uint256"},
                            ],
                        },
                    ],
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [{"name": "", "type": "address", "internalType": "address"}],
            "stateMutability": "nonpayable",
        }
    ],
)
# pylint: disable=line-too-long
stethtarget0deployer_bytecode = HexStr(
    "0x608060405234801561001057600080fd5b50613e8d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636b32370714610030575b600080fd5b61004361003e366004610227565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b604080513360208201529081018290526000906060016040516020818303038152906040528051906020012084604051610098906100cb565b6100a2919061036f565b8190604051809103906000f59050801580156100c2573d6000803e3d6000fd5b50949350505050565b6139c38061049583390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff81118282101715610112576101126100d8565b60405290565b80356001600160a01b038116811461012f57600080fd5b919050565b60006080828403121561014657600080fd5b6040516080810181811067ffffffffffffffff82111715610169576101696100d8565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f8301126101ab57600080fd5b813567ffffffffffffffff808211156101c6576101c66100d8565b604051601f8301601f19908116603f011681019082821181831017156101ee576101ee6100d8565b8160405283815286602085880101111561020757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008385036102a081121561023e57600080fd5b6102608082121561024e57600080fd5b6102566100ee565b915061026186610118565b825261026f60208701610118565b602083015261028060408701610118565b6040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c083015260e086013560e08301526101008087013581840152506101208087013581840152506101408087013581840152506101606102e9818801610118565b908301526101806102fb878201610118565b908301526101a061030d878201610118565b908301526101c061031f878201610118565b908301526101e061033288888301610134565b9083015290935084013567ffffffffffffffff81111561035157600080fd5b61035d8682870161019a565b92505061028084013590509250925092565b81516001600160a01b031681526102608101602083015161039b60208401826001600160a01b03169052565b5060408301516103b660408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525061016080840151610428828501826001600160a01b03169052565b5050610180838101516001600160a01b03908116918401919091526101a0808501518216908401526101c080850151909116908301526101e09283015180519383019390935260208301516102008301526040830151610220830152606090920151610240909101529056fe6102606040523480156200001257600080fd5b50604051620039c3380380620039c3833981016040819052620000359162000202565b600160005580516001600160a01b039081166080908152602080840151831660a0908152918401516101a0908152918401516101c090815260c0808601516101e090815260e0808801516102005261012080890151909352610100808901519091526101408089015190915290870180515190925281519093015190925281516040908101516101609081529251606090810151610180908152918701518616610220528601516102405291850151600980546001600160a01b031990811692871692909217905591850151600a8054841691861691909117905591840151600b80548316918516919091179055920151600c8054909316911617905562000315565b60405161020081016001600160401b03811182821017156200016a57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200018857600080fd5b919050565b600060808284031215620001a057600080fd5b604051608081016001600160401b0381118282101715620001d157634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600061026082840312156200021657600080fd5b6200022062000138565b6200022b8362000170565b81526200023b6020840162000170565b60208201526200024e6040840162000170565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120808401518183015250610140808401518183015250610160620002b981850162000170565b90820152610180620002cd84820162000170565b908201526101a0620002e184820162000170565b908201526101c0620002f584820162000170565b908201526101e06200030a858583016200018d565b908201529392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051610240516135926200043160003960008181610d0d0152611d43015260008181610ce60152611d0601526000610dad015260008181610d870152611efb015260008181610d610152611ed5015260008181610d370152611eaf01526000610ee901526000610ec401526000610e9f01526000610e7c015260008181610e210152611f21015260008181610dd301528181611098015261261a015260008181610dfa01526127df01526000818161064b01528181610cba015281816121c8015281816122550152818161243b015261276a015260008181610c95015261103101526135926000f3fe608060405234801561001057600080fd5b506004361061023c5760003560e01c80637180c8ca1161013b578063becee9c3116100b8578063d81657431161007c578063d81657431461051d578063e44808bc14610532578063e4af29d114610545578063e985e9c514610558578063fba560081461056b57600080fd5b8063becee9c3146104c7578063c55dae63146104e7578063c69e16ad146104ef578063c6e6f592146104f7578063cf210e651461050a57600080fd5b8063a5107626116100ff578063a510762614610466578063ab033ea914610479578063b0d965801461048c578063b88fed9f146104a1578063bd85b039146104b457600080fd5b80637180c8ca146104075780637ecebe001461041a5780639cd241af1461042d578063a22cb46514610440578063a42dce801461045357600080fd5b806320fc4881116101c957806346fbf68e1161018d57806346fbf68e146103a15780634e41a1fb146103c45780634ed2d6ac146103d757806354fd4d50146103ea57806360246c88146103f257600080fd5b806320fc4881146102fb57806321ff32a914610340578063313ce567146103615780633656eec21461037b5780633e691db91461038e57600080fd5b806306fdde031161021057806306fdde031461029a5780630a4e1493146102a257806314e5f07b146102c257806317fad7fc146102d55780631c0f12b6146102e857600080fd5b8062ad800c1461024157806301681a621461026a57806302329a291461027f57806304baa00b14610292575b600080fd5b61025461024f366004612a30565b61059a565b6040516102619190612a99565b60405180910390f35b61027d610278366004612ac1565b6105d1565b005b61027d61028d366004612aec565b6105dd565b6102546105e6565b610254610626565b6102aa61063d565b6040516001600160a01b039091168152602001610261565b61027d6102d0366004612b09565b61067d565b61027d6102e3366004612bea565b610699565b61027d6102f6366004612c7f565b6106af565b61030e610309366004612a30565b6106c2565b6040805182516001600160801b0390811682526020808501518216908301529282015190921690820152606001610261565b61035361034e366004612cc7565b61072e565b604051908152602001610261565b610369610774565b60405160ff9091168152602001610261565b610353610389366004612d09565b61078c565b61035361039c366004612d39565b6107c5565b6103b46103af366004612ac1565b6107d0565b6040519015158152602001610261565b6102546103d2366004612a30565b610806565b61027d6103e5366004612d74565b610814565b610254610862565b6103fa610897565b6040516102619190612dbe565b61027d610415366004612e5f565b610ba6565b610353610428366004612ac1565b610bb4565b61027d61043b366004612e8d565b610be0565b61027d61044e366004612e5f565b610bf1565b61027d610461366004612ac1565b610c5d565b61027d610474366004612ac1565b610c66565b61027d610487366004612ac1565b610c6f565b610494610c78565b6040516102619190612ec5565b6103536104af366004612a30565b610f26565b6103536104c2366004612a30565b610f46565b6104da6104d5366004612feb565b610f68565b604051610261919061302d565b6102aa611023565b610353611063565b610353610505366004612a30565b61107d565b610353610518366004612a30565b61108b565b6105256110c2565b6040516102619190613071565b61027d610540366004613182565b6111ce565b61027d610553366004612ac1565b611216565b6103b46105663660046131e1565b61121f565b610573611263565b6040805182516001600160801b039081168252602093840151169281019290925201610261565b60606105cc6105a8836112c2565b6040516020016105b89190612a99565b6040516020818303038152906040526113ea565b919050565b6105da8161140e565b50565b6105da81611584565b60606106236040518060400160405280600f81526020016e53744554484879706572647269766560881b8152506040516020016105b89190612a99565b90565b606061062360016040516020016105b8919061320f565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161062391016105b8565b61068e898989898989898989611620565b505050505050505050565b6106a7868686868686611817565b505050505050565b6106bc84848484336118cb565b50505050565b60408051606081018252600080825260208201819052918101919091526105cc600860008481526020019081526020016000206040516020016105b8919081546001600160801b03808216835260809190911c6020830152600190920154909116604082015260600190565b60008381526012602090815260408083206001600160a01b038681168552908352818420908516845282528083205481519283015261076d91016105b8565b9392505050565b604080516012602082015260009161062391016105b8565b6000828152600f602090815260408083206001600160a01b03851684528252808320548151928301526107bf91016105b8565b92915050565b60006107bf82611a8c565b6001600160a01b0381166000908152600e602090815260408083205490516105cc926105b89260ff169101901515815260200190565b60606105cc6105a883611bca565b8361081e81611cc8565b6001600160a01b0316336001600160a01b03161461084f57604051632aab8bd360e01b815260040160405180910390fd5b61085b85858585611d85565b5050505050565b6060610623604051806040016040528060078152602001663b18971817189b60c91b8152506040516020016105b89190612a99565b610910604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600061091a611df2565b60075460106020527fd6f7110f7a6485ce27c724322bdc9b60c9b2518194eace178d55653f1be730215460008080527f6e0956cda88cad152e89927e53611735b61a5c762d1428573c6931b0a5efcb0154939450926001600160801b039092169161098591906132e7565b61098f91906132fa565b905060008215610aa15773__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6109bc85611e0a565b6040805160e084811b6001600160e01b03191682528351600483015260208401516024830152918301516044820152606083015160648201526080830151608482015260a083015160a482015260c083015160c48201529082015160e482015261010082015161010482015261012082015161012482015261014082015161014482015261016090910151610164820152610184016040805180830381865af4158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a91919061330d565b509050610a9e8184611fa0565b90505b604080516101e0810182526002546001600160801b038082168352600454600f81900b60208501526006546001600160701b036201000082041695850195909552600160801b9485900482166060850152918490048116608084015260a0830186905260c08301879052600354849004811660e0840152600554808216610100850152918490048116610120840152908390048116610140830152600754808216610160840152929092049091166101808201526000906101a081018415610b7257610b6d8486611fb5565b610b75565b60005b81526003546001600160801b0316602091820152604051919250610b9f916105b891849101612dbe565b5050505090565b610bb08282611fca565b5050565b6001600160a01b0381166000908152601360209081526040808320548151928301526105cc91016105b8565b610bec83838333611d85565b505050565b3360008181526011602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6105da81612053565b6105da816120c7565b6105da8161213b565b610c80612949565b60408051610200810182526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f000000000000000000000000000000000000000000000000000000000000000081166020808401919091527f00000000000000000000000000000000000000000000000000000000000000008216838501527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f00000000000000000000000000000000000000000000000000000000000000006080808601919091527f000000000000000000000000000000000000000000000000000000000000000060a08601527f000000000000000000000000000000000000000000000000000000000000000060c08601527f000000000000000000000000000000000000000000000000000000000000000060e08601527f00000000000000000000000000000000000000000000000000000000000000006101008601527f00000000000000000000000000000000000000000000000000000000000000006101208601527f00000000000000000000000000000000000000000000000000000000000000006101408601526009548416610160860152600a548416610180860152600b5484166101a0860152600c549093166101c0850152845192830185527f000000000000000000000000000000000000000000000000000000000000000083527f0000000000000000000000000000000000000000000000000000000000000000838301527f0000000000000000000000000000000000000000000000000000000000000000838601527f0000000000000000000000000000000000000000000000000000000000000000908301526101e08301919091529151610623926105b8929101612ec5565b60006105cc610f34836121af565b6040516020016105b891815260200190565b6000818152601060209081526040808320548151928301526105cc91016105b8565b606060008267ffffffffffffffff811115610f8557610f85613332565b604051908082528060200260200182016040528015610fae578160200160208202803683370190505b50905060005b83811015611007576000858583818110610fd057610fd0613348565b90506020020135905060008154905080848481518110610ff257610ff2613348565b60209081029190910101525050600101610fb4565b5061101c816040516020016105b8919061302d565b5092915050565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161062391016105b8565b6000610623600d546040516020016105b891815260200190565b60006105cc610f348361223c565b60006105cc610f346110bd7f0000000000000000000000000000000000000000000000000000000000000000856132e7565b61228c565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915261062360026040516020016105b8919081546001600160801b038082168352608091821c602084015260018401548082166040850152821c60608401526002840154600f81900b83850152821c60a0840152600384015490811660c0840152811c60e083015260049092015460ff8082161515610100840152600882901c1615156101208301526001600160701b03601082901c1661014083015290911c6101608201526101800190565b846111d881611cc8565b6001600160a01b0316336001600160a01b03161461120957604051632aab8bd360e01b815260040160405180910390fd5b6106a786868686866118cb565b6105da816122d0565b6001600160a01b038281166000908152601160209081526040808320938516835292815282822054835160ff90911615159181019190915290916107bf91016105b8565b60408051808201909152600080825260208201526040805180820182526007546001600160801b03808216808452600160801b9092048116602093840190815284519384019290925290511691810191909152610623906060016105b8565b606060f882901c6001600160f81b03831660006112de82612344565b905060008360038111156112f4576112f46132bb565b03611326576040518060400160405280600d81526020016c048797065726472697665204c5609c1b81525093506113e2565b600183600381111561133a5761133a6132bb565b036113665780604051602001611350919061335e565b60405160208183030381529060405293506113e2565b600283600381111561137a5761137a6132bb565b0361139057806040516020016113509190613397565b60038360038111156113a4576113a46132bb565b036113e2576040518060400160405280601b81526020017f48797065726472697665205769746864726177616c205368617265000000000081525093505b505050919050565b80604051636e64089360e11b81526004016114059190612a99565b60405180910390fd5b6114166123f9565b600b54336000908152600e60205260409020546001600160a01b039091169060ff1615801561144e5750336001600160a01b03821614155b801561146557506009546001600160a01b03163314155b15611482576040516282b42960e81b815260040160405180910390fd5b600061148c612423565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fa91906133d1565b90506115106001600160a01b03851684836124ae565b81611519612423565b14611537576040516313dd85ff60e31b815260040160405180910390fd5b836001600160a01b0316836001600160a01b03167f951f51ee88c8e42633698bba90d1e53c0954470938036879e691c0232b47e09660405160405180910390a35050506105da6001600055565b336000908152600e602052604090205460ff161580156115af57506009546001600160a01b03163314155b156115cc576040516282b42960e81b815260040160405180910390fd5b600680548215156101000261ff00199091161790556040517f7c4d1fe30fdbfda9e9c4c43e759ef32e4db5128d4cb58ff3ae9583b89b6242a59061161590831515815260200190565b60405180910390a150565b834211156116415760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166116685760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b0387811660008181526013602090815260408083205481518084018f905280830195909552948b166060850152891515608085015260a084019490945260c08084018990528451808503909101815260e08401909452835193019290922061190160f01b61010083015261010282018c90526101228201526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611756573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b03161461179457604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b0389811660008181526013602090815260408083208054600101905560118252808320948d1680845294825291829020805460ff19168c151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050505050505050505050565b6001600160a01b038616158061183457506001600160a01b038516155b156118525760405163f0dd15fd60e01b815260040160405180910390fd5b8281146118725760405163174861a760e31b815260040160405180910390fd5b60005b838110156118c2576118ba85858381811061189257611892613348565b9050602002013588888686868181106118ad576118ad613348565b90506020020135336118cb565b600101611875565b50505050505050565b6001600160a01b03841615806118e857506001600160a01b038316155b156119065760405163f0dd15fd60e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b0316146119ca576001600160a01b0380851660009081526011602090815260408083209385168352929052205460ff166119ca5760008581526012602090815260408083206001600160a01b038089168552908352818420908516845290915290205460001981146119c85760008681526012602090815260408083206001600160a01b03808a1685529083528184209086168452909152812080548592906119c29084906132fa565b90915550505b505b6000858152600f602090815260408083206001600160a01b0388168452909152812080548492906119fc9084906132fa565b90915550506000858152600f602090815260408083206001600160a01b038716845290915281208054849290611a339084906132e7565b909155505060408051868152602081018490526001600160a01b038086169287821692918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6000611a966123f9565b611a9f82612500565b600a546001600160a01b031680611ab96020850185612ac1565b6001600160a01b031614611ae057604051630ad13b3360e21b815260040160405180910390fd5b336000908152600e602052604090205460ff16158015611b095750336001600160a01b03821614155b8015611b2057506009546001600160a01b03163314155b15611b3d576040516282b42960e81b815260040160405180910390fd5b6000611b47611df2565b600d80546000909155909150611b5e818387612536565b93506001600160a01b0383167f3e5eb8642141e29a1b4e5c28b467396f814c1698e1adfc3ff327ddb9a60383618584611b9d60408a0160208b01612aec565b60408051938452602084019290925215159082015260600160405180910390a25050506105cc6001600055565b606060f882901c6001600160f81b0383166000611be682612344565b90506000836003811115611bfc57611bfc6132bb565b03611c2e576040518060400160405280600d81526020016c0485950455244524956452d4c5609c1b81525093506113e2565b6001836003811115611c4257611c426132bb565b03611c58578060405160200161135091906133ea565b6002836003811115611c6c57611c6c6132bb565b03611c8257806040516020016113509190613422565b6003836003811115611c9657611c966132bb565b036113e257505060408051808201909152600d81526c485950455244524956452d575360981b60208201529392505050565b604080513060208083019190915281830193909352815180820383018152606080830184528151918501919091206001600160f81b031960808401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff1916608183015260958201527f000000000000000000000000000000000000000000000000000000000000000060b5808301919091528251808303909101815260d5909101909152805191012090565b60008481526012602090815260408083206001600160a01b0385811680865291845282852090881680865290845293829020869055905185815290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050565b6000611e05670de0b6b3a76400006121af565b905090565b611e6e6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e08301526003540482166101008201526005549091610120830191611f6691166125cf565b81526004546001600160801b03600160801b9182900481166020840152600554604090930192611f98929004166125cf565b905292915050565b600061076d8383670de0b6b3a7640000612645565b600061076d83670de0b6b3a764000084612645565b6009546001600160a01b03163314611ff4576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0382166000818152600e6020908152604091829020805460ff191685151590811790915591519182527f902923dcd4814f6cef7005a70e01d5cf2035ab02d4523ef3b865f1d7bab885af910160405180910390a25050565b6009546001600160a01b0316331461207d576040516282b42960e81b815260040160405180910390fd5b600a80546001600160a01b0319166001600160a01b0383169081179091556040517fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f90600090a250565b6009546001600160a01b031633146120f1576040516282b42960e81b815260040160405180910390fd5b600c80546001600160a01b0319166001600160a01b0383169081179091556040517fae062fb82c932c653cd44617343ecda1d13e375e0d6f20d969c944fbda1963d390600090a250565b6009546001600160a01b03163314612165576040516282b42960e81b815260040160405180910390fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040517f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab90600090a250565b604051630f451f7160e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637a28fb88906024015b602060405180830381865afa158015612218573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf91906133d1565b604051631920845160e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906319208451906024016121fb565b60006122b4601060006122a0600286612663565b815260200190815260200160002054612698565b6122c6601060006122a0600187612663565b6107bf919061344e565b6009546001600160a01b031633146122fa576040516282b42960e81b815260040160405180910390fd5b600b80546001600160a01b0319166001600160a01b0383169081179091556040517fc049058b1df2dd8902739ceb78992df12fa8369c06c450b3c6787137b452fdd290600090a250565b60408051604e80825260808201909252606091906000908260208201818036833701905050905060005b84156123eb5761237f600a86613484565b61238a9060306132e7565b60f81b82600161239a84876132fa565b6123a491906132fa565b815181106123b4576123b4613348565b60200101906001600160f81b031916908160001a905350806123d581613498565b91506123e49050600a866134b1565b945061236e565b918290030190815292915050565b60026000540361241c57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b604051633d7ad0b760e21b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f5eb42dc90602401602060405180830381865afa15801561248a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0591906133d1565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610bec9084906126c6565b600061250f6020830183612ac1565b6001600160a01b0316036105da5760405163f0dd15fd60e01b815260040160405180910390fd5b6000806125438585611fa0565b905061254e8161223c565b94508460000361256257600091505061076d565b8491506125756040840160208501612aec565b156125a45761259d8561258b6020860186612ac1565b61259860408701876134c5565b612729565b91506125c7565b6125c7856125b56020860186612ac1565b6125c260408701876134c5565b612744565b509392505050565b600080670de0b6b3a76400006125e36127d7565b6125ed919061350c565b90508083116125fd576000612607565b61260781846132fa565b915061076d61263e670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000061350c565b8390611fb5565b600082600019048411830215820261265c57600080fd5b5091020490565b60006001600160f81b0382111561268d5760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b60006001600160ff1b038211156126c25760405163396ea70160e11b815260040160405180910390fd5b5090565b60006126db6001600160a01b03841683612803565b905080516000141580156127005750808060200190518101906126fe9190613523565b155b15610bec57604051635274afe760e01b81526001600160a01b0384166004820152602401611405565b600060405163350b944160e11b815260040160405180910390fd5b604051638fcb4e5b60e01b81526001600160a01b038481166004830152602482018690527f00000000000000000000000000000000000000000000000000000000000000001690638fcb4e5b906044016020604051808303816000875af11580156127b3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085b91906133d1565b6000611e05427f0000000000000000000000000000000000000000000000000000000000000000612811565b606061076d83836000612827565b600061281d8284613484565b61076d90846132fa565b60608147101561284c5760405163cd78605960e01b8152306004820152602401611405565b600080856001600160a01b031684866040516128689190613540565b60006040518083038185875af1925050503d80600081146128a5576040519150601f19603f3d011682016040523d82523d6000602084013e6128aa565b606091505b50915091506128ba8683836128c4565b9695505050505050565b6060826128d9576128d482612920565b61076d565b81511580156128f057506001600160a01b0384163b155b1561291957604051639996b31560e01b81526001600160a01b0385166004820152602401611405565b508061076d565b8051156129305780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60405180610200016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001612a2b6040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b600060208284031215612a4257600080fd5b5035919050565b60005b83811015612a64578181015183820152602001612a4c565b50506000910152565b60008151808452612a85816020860160208601612a49565b601f01601f19169290920160200192915050565b60208152600061076d6020830184612a6d565b6001600160a01b03811681146105da57600080fd5b600060208284031215612ad357600080fd5b813561076d81612aac565b80151581146105da57600080fd5b600060208284031215612afe57600080fd5b813561076d81612ade565b60008060008060008060008060006101208a8c031215612b2857600080fd5b8935985060208a0135975060408a0135612b4181612aac565b965060608a0135612b5181612aac565b955060808a0135612b6181612ade565b945060a08a0135935060c08a013560ff81168114612b7e57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008083601f840112612bb057600080fd5b50813567ffffffffffffffff811115612bc857600080fd5b6020830191508360208260051b8501011115612be357600080fd5b9250929050565b60008060008060008060808789031215612c0357600080fd5b8635612c0e81612aac565b95506020870135612c1e81612aac565b9450604087013567ffffffffffffffff80821115612c3b57600080fd5b612c478a838b01612b9e565b90965094506060890135915080821115612c6057600080fd5b50612c6d89828a01612b9e565b979a9699509497509295939492505050565b60008060008060808587031215612c9557600080fd5b843593506020850135612ca781612aac565b92506040850135612cb781612aac565b9396929550929360600135925050565b600080600060608486031215612cdc57600080fd5b833592506020840135612cee81612aac565b91506040840135612cfe81612aac565b809150509250925092565b60008060408385031215612d1c57600080fd5b823591506020830135612d2e81612aac565b809150509250929050565b600060208284031215612d4b57600080fd5b813567ffffffffffffffff811115612d6257600080fd5b82016060818503121561076d57600080fd5b60008060008060808587031215612d8a57600080fd5b843593506020850135612d9c81612aac565b9250604085013591506060850135612db381612aac565b939692955090935050565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a080830151908201526101c091820151918101919091526101e00190565b60008060408385031215612e7257600080fd5b8235612e7d81612aac565b91506020830135612d2e81612ade565b600080600060608486031215612ea257600080fd5b833592506020840135612eb481612aac565b929592945050506040919091013590565b81516001600160a01b0316815261026081016020830151612ef160208401826001600160a01b03169052565b506040830151612f0c60408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525061016080840151612f7e828501826001600160a01b03169052565b5050610180838101516001600160a01b03908116918401919091526101a0808501518216908401526101c080850151909116908301526101e0808401518051828501526020810151610200850152604081015161022085015260608101516102408501525b505092915050565b60008060208385031215612ffe57600080fd5b823567ffffffffffffffff81111561301557600080fd5b61302185828601612b9e565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561306557835183529284019291840191600101613049565b50909695505050505050565b81516001600160801b031681526101808101602083015161309d60208401826001600160801b03169052565b5060408301516130b860408401826001600160801b03169052565b5060608301516130d360608401826001600160801b03169052565b5060808301516130e86080840182600f0b9052565b5060a083015161310360a08401826001600160801b03169052565b5060c083015161311e60c08401826001600160801b03169052565b5060e083015161313960e08401826001600160801b03169052565b506101008381015115159083015261012080840151151590830152610140808401516001600160701b031690830152610160808401516001600160801b03811682850152612fe3565b600080600080600060a0868803121561319a57600080fd5b8535945060208601356131ac81612aac565b935060408601356131bc81612aac565b92506060860135915060808601356131d381612aac565b809150509295509295909350565b600080604083850312156131f457600080fd5b82356131ff81612aac565b91506020830135612d2e81612aac565b600060208083526000845481600182811c91508083168061323157607f831692505b858310810361324e57634e487b7160e01b85526022600452602485fd5b87860183815260200181801561326b5760018114613281576132ac565b60ff198616825284151560051b820196506132ac565b60008b81526020902060005b868110156132a65781548482015290850190890161328d565b83019750505b50949998505050505050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156107bf576107bf6132d1565b818103818111156107bf576107bf6132d1565b6000806040838503121561332057600080fd5b825191506020830151612d2e81612ade565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b700243cb832b9323934bb32902637b7339d1607d1b81526000825161338a816011850160208701612a49565b9190910160110192915050565b710243cb832b9323934bb329029b437b93a1d160751b8152600082516133c4816012850160208701612a49565b9190910160120192915050565b6000602082840312156133e357600080fd5b5051919050565b6f242ca822a9222924ab2296a627a7239d60811b815260008251613415816010850160208701612a49565b9190910160100192915050565b70242ca822a9222924ab2296a9a427a92a1d60791b81526000825161338a816011850160208701612a49565b818103600083128015838313168383128216171561101c5761101c6132d1565b634e487b7160e01b600052601260045260246000fd5b6000826134935761349361346e565b500690565b6000600182016134aa576134aa6132d1565b5060010190565b6000826134c0576134c061346e565b500490565b6000808335601e198436030181126134dc57600080fd5b83018035915067ffffffffffffffff8211156134f757600080fd5b602001915036819003821315612be357600080fd5b80820281158282048414176107bf576107bf6132d1565b60006020828403121561353557600080fd5b815161076d81612ade565b60008251613552818460208701612a49565b919091019291505056fea2646970667358221220c0c2e88fa145be98e5cada90c6f4fcf47f0b4d9a91fd0770577660f513aae1cd64736f6c63430008140033a264697066735822122060f73a16bc0098aae5ccca1f8bd4f57c6f41221051656907b22d73d95af78e6164736f6c63430008140033"
)


class StETHTarget0DeployerContract(Contract):
    """A web3.py Contract class for the StETHTarget0Deployer contract."""

    abi: ABI = stethtarget0deployer_abi
    bytecode: bytes | None = try_bytecode_hexbytes(stethtarget0deployer_bytecode, "stethtarget0deployer")

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        try:
            # Initialize parent Contract class
            super().__init__(address=address)
            self.functions = StETHTarget0DeployerContractFunctions(stethtarget0deployer_abi, self.w3, address)  # type: ignore

        except FallbackNotFound:
            print("Fallback function not found. Continuing...")

    functions: StETHTarget0DeployerContractFunctions

    @classmethod
    def constructor(cls) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """

        return super().constructor()

    @classmethod
    def deploy(cls, w3: Web3, account: LocalAccount | ChecksumAddress) -> Self:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor()

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(cls, w3: Web3, class_name: str | None = None, **kwargs: Any) -> Type[Self]:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = StETHTarget0DeployerContractFunctions(stethtarget0deployer_abi, w3, None)

        return contract
