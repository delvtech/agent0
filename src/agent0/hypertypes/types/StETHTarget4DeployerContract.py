"""A web3.py Contract class for the StETHTarget4Deployer contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain"""

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overriden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long


from __future__ import annotations

from typing import Any, Type, cast

from eth_account.signers.local import LocalAccount
from eth_typing import ChecksumAddress, HexStr
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import Contract, ContractConstructor, ContractFunction, ContractFunctions
from web3.exceptions import FallbackNotFound
from web3.types import ABI, BlockIdentifier, CallOverride, TxParams

from .IHyperdriveTypes import Fees, PoolConfig
from .utilities import dataclass_to_tuple, rename_returned_types, try_bytecode_hexbytes

structs = {
    "Fees": Fees,
    "PoolConfig": PoolConfig,
}


class StETHTarget4DeployerDeployTargetContractFunction(ContractFunction):
    """ContractFunction for the deployTarget method."""

    def __call__(self, config: PoolConfig, arg2: bytes, salt: bytes) -> StETHTarget4DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(config), dataclass_to_tuple(arg2), dataclass_to_tuple(salt))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: CallOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(transaction, block_identifier, state_override, ccip_read_enabled)
        return cast(str, rename_returned_types(structs, return_types, raw_values))


class StETHTarget4DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the StETHTarget4Deployer contract."""

    deployTarget: StETHTarget4DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = StETHTarget4DeployerDeployTargetContractFunction.factory(
            "deployTarget",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            function_identifier="deployTarget",
        )


stethtarget4deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {"name": "baseToken", "type": "address", "internalType": "contract IERC20"},
                        {"name": "vaultSharesToken", "type": "address", "internalType": "contract IERC20"},
                        {"name": "linkerFactory", "type": "address", "internalType": "address"},
                        {"name": "linkerCodeHash", "type": "bytes32", "internalType": "bytes32"},
                        {"name": "initialVaultSharePrice", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumShareReserves", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumTransactionAmount", "type": "uint256", "internalType": "uint256"},
                        {"name": "circuitBreakerDelta", "type": "uint256", "internalType": "uint256"},
                        {"name": "positionDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "checkpointDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "timeStretch", "type": "uint256", "internalType": "uint256"},
                        {"name": "governance", "type": "address", "internalType": "address"},
                        {"name": "feeCollector", "type": "address", "internalType": "address"},
                        {"name": "sweepCollector", "type": "address", "internalType": "address"},
                        {"name": "checkpointRewarder", "type": "address", "internalType": "address"},
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {"name": "curve", "type": "uint256", "internalType": "uint256"},
                                {"name": "flat", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceLP", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceZombie", "type": "uint256", "internalType": "uint256"},
                            ],
                        },
                    ],
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [{"name": "", "type": "address", "internalType": "address"}],
            "stateMutability": "nonpayable",
        }
    ],
)
# pylint: disable=line-too-long
stethtarget4deployer_bytecode = HexStr(
    "$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401610c6b929190612bd4565b6040805180830381865af4158015610c87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cab9190612c4a565b91509150610cc9610cbb82611561565b610cc490612c6e565b611d32565b925082610cdf5760009650505050505050610d81565b610ce882611138565b60078054600090610d039084906001600160801b0316612af6565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610d3081611138565b60078054601090610d52908490600160801b90046001600160801b0316612af6565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600196505050505050505b92915050565b6000838152600f602090815260408083206001600160a01b0386168452909152902054811115610dca57604051631e9acf1760e31b815260040160405180910390fd5b6000838152600f602090815260408083206001600160a01b0386168452825280832080548590039055858352601090915281208054839290610e0d908490612a68565b909155505060408051848152602081018390526000916001600160a01b0385169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a4505050565b6000838152600f602090815260408083206001600160a01b038616845290915281208054839290610e93908490612ac3565b909155505060008381526010602052604081208054839290610eb6908490612ac3565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610e54565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e610f2a87611eca565b6040518263ffffffff1660e01b8152600401610f469190612c8a565b6040805180830381865af4158015610f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f869190612c99565b9150915080610f9c575060009485945092505050565b60075460106020527fd6f7110f7a6485ce27c724322bdc9b60c9b2518194eace178d55653f1be730215460008080527f6e0956cda88cad152e89927e53611735b61a5c762d1428573c6931b0a5efcb015490926001600160801b03169161100291612ac3565b61100c9190612a68565b90508060000361102457506000958695509350505050565b600080871161103457600061103f565b61103f848884611a56565b976001975095505050505050565b604051630f451f7160e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637a28fb88906024015b602060405180830381865afa1580156110b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d819190612cc9565b60006110e68284612a3e565b6110f09084612a68565b9392505050565b600254600454600091610421916001600160801b0390911690600f0b612004565b600061112f82611129858888611a56565b9061202a565b95945050505050565b60006001600160801b0382111561116257604051630f0af95160e11b815260040160405180910390fd5b5090565b600083815260086020526040902054600160801b90046001600160801b03168083036111925750505050565b6000848152600860205260408120546001600160801b0316908190036111ec576111bb83611138565b600086815260086020526040902080546001600160801b0319166001600160801b039290921691909117905561126a565b61123d611238670de0b6b3a76400006112058886612a68565b61120f9190612ce2565b85670de0b6b3a7640000611223878a612a68565b61122d9190612ce2565b85929190600161209f565b611138565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b61127384611138565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b60008183116112b357826110f0565b50919050565b60065460009081906112dc908490600160801b90046001600160801b031661174f565b6006546201000090046001600160701b031692509050818111156114585760006113068383612a68565b9050611315611238828661213d565b60068054601090611337908490600160801b90046001600160801b0316612b36565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611370858361215290919063ffffffff16565b9050600061139e827f000000000000000000000000000000000000000000000000000000000000000061174f565b905080600d60008282546113b29190612ac3565b909155506113c290508183612a68565b91506113cd82611138565b600280546000906113e89084906001600160801b0316612af6565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061141582612167565b6004805460009061142a908490600f0b612cf9565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b60006001600160f81b038211156114875760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b60008061149f8785612152565b915060006114cd837f000000000000000000000000000000000000000000000000000000000000000061174f565b90506114f9817f000000000000000000000000000000000000000000000000000000000000000061174f565b9150831561151c5761150b8282612a68565b6115159084612a68565b9250611533565b6115268282612a68565b6115309084612ac3565b92505b8686101561155657611546838789611a56565b9250611553828789611a56565b91505b509550959350505050565b60006001600160ff1b038211156111625760405163396ea70160e11b815260040160405180910390fd5b600454600160801b90046001600160801b03166115d4611238826115b7670de0b6b3a764000086612ce2565b600554600160801b90046001600160801b031691908a600061209f565b600580546001600160801b03928316600160801b0292169190911790556115fa86611138565b6116049082612b36565b600480546001600160801b03928316600160801b02921691909117905561162a84611138565b600280546000906116459084906001600160801b0316612af6565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061167283612191565b60048054600090611687908490600f0b612cf9565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055506116b785611138565b600280546010906116d9908490600160801b90046001600160801b0316612b36565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b60008061171d846117178a888a611a56565b90612152565b905061172a888486611a56565b6117349082612ac3565b9050868111156117445786810391505b509695505050505050565b60006110f08383670de0b6b3a7640000611a56565b60006001600160701b038211156111625760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b0316838110806117d057507f00000000000000000000000000000000000000000000000000000000000000006117ce8583612a68565b105b156117dd576117dd6121cd565b6004549084900390600f0b6117f28482612b16565b9050836117fe86611561565b13801561183357507f00000000000000000000000000000000000000000000000000000000000000006118318383612004565b105b15611840576118406121cd565b600354600160801b90046001600160801b03166118826112388261186c670de0b6b3a764000088612ce2565b6005546001600160801b031691908c600061209f565b600580546001600160801b0319166001600160801b03929092169190911790556118ac8882612a68565b90506118b781611138565b600380546001600160801b03928316600160801b0292169190911790556118dd83611138565b600280546001600160801b0319166001600160801b039290921691909117905561190682612191565b600480546001600160801b0319166001600160801b039290921691909117905561192f87611138565b60028054601090611951908490600160801b90046001600160801b0316612af6565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b60035461199a90611238906001600160801b031684846121e6565b600380546001600160801b0319166001600160801b03929092169190911790555050565b6000606060008060008661ffff1667ffffffffffffffff8111156119e4576119e4612d26565b6040519080825280601f01601f191660200182016040528015611a0e576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115611a2f578692505b828152826000602083013e90999098509650505050505050565b6000610d81826004610b8c565b6000826000190484118302158202611a6d57600080fd5b5091020490565b600080611a81858561174f565b9050611a8c8161224d565b945084600003611aa05760009150506110f0565b849150611ab36040840160208501612961565b15611ae257611adb85611ac9602086018661292a565b611ad6604087018761297e565b61229d565b9150611b05565b611b0585611af3602086018661292a565b611b00604087018761297e565b6122b8565b509392505050565b60006110f08383670de0b6b3a7640000612352565b6003546000908190611b3d906001600160801b03168461213d565b9050611b697f000000000000000000000000000000000000000000000000000000000000000082612ac3565b6002546001600160801b031611156112b3576002547f000000000000000000000000000000000000000000000000000000000000000090611bb49083906001600160801b0316612a68565b6110f09190612a68565b611bc66127fe565b600080611bd284611eca565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401611c0d9190612c8a565b6040805180830381865af4158015611c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4d9190612c99565b9350905082611c625750600091506100ad9050565b6000611c89611c8484610160015185610140015161174f90919063ffffffff16565b611561565b611ca9611c84856101200151866101000151611b0d90919063ffffffff16565b611cb39190612b16565b604080516101208101825285815260208082019590955260008052601085527f6e0956cda88cad152e89927e53611735b61a5c762d1428573c6931b0a5efcb0154818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$"
)


class StETHTarget4DeployerContract(Contract):
    """A web3.py Contract class for the StETHTarget4Deployer contract."""

    abi: ABI = stethtarget4deployer_abi
    bytecode: bytes | None = try_bytecode_hexbytes(stethtarget4deployer_bytecode, "stethtarget4deployer")

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        try:
            # Initialize parent Contract class
            super().__init__(address=address)
            self.functions = StETHTarget4DeployerContractFunctions(stethtarget4deployer_abi, self.w3, address)  # type: ignore

        except FallbackNotFound:
            print("Fallback function not found. Continuing...")

    functions: StETHTarget4DeployerContractFunctions

    @classmethod
    def constructor(cls) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """

        return super().constructor()

    @classmethod
    def deploy(cls, w3: Web3, account: LocalAccount | ChecksumAddress) -> Self:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor()

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(cls, w3: Web3, class_name: str | None = None, **kwargs: Any) -> Type[Self]:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = StETHTarget4DeployerContractFunctions(stethtarget4deployer_abi, w3, None)

        return contract
