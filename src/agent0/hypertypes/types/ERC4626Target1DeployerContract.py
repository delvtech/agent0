"""A web3.py Contract class for the ERC4626Target1Deployer contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain"""

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overriden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long


from __future__ import annotations

from typing import Any, Type, cast

from eth_account.signers.local import LocalAccount
from eth_typing import ChecksumAddress, HexStr
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import Contract, ContractConstructor, ContractFunction, ContractFunctions
from web3.exceptions import FallbackNotFound
from web3.types import ABI, BlockIdentifier, CallOverride, TxParams

from .IHyperdriveTypes import Fees, PoolConfig
from .utilities import dataclass_to_tuple, rename_returned_types, try_bytecode_hexbytes

structs = {
    "Fees": Fees,
    "PoolConfig": PoolConfig,
}


class ERC4626Target1DeployerDeployTargetContractFunction(ContractFunction):
    """ContractFunction for the deployTarget method."""

    def __call__(self, config: PoolConfig, arg2: bytes, salt: bytes) -> ERC4626Target1DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(config), dataclass_to_tuple(arg2), dataclass_to_tuple(salt))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: CallOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(transaction, block_identifier, state_override, ccip_read_enabled)
        return cast(str, rename_returned_types(structs, return_types, raw_values))


class ERC4626Target1DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the ERC4626Target1Deployer contract."""

    deployTarget: ERC4626Target1DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = ERC4626Target1DeployerDeployTargetContractFunction.factory(
            "deployTarget",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            function_identifier="deployTarget",
        )


erc4626target1deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {"name": "baseToken", "type": "address", "internalType": "contract IERC20"},
                        {"name": "vaultSharesToken", "type": "address", "internalType": "contract IERC20"},
                        {"name": "linkerFactory", "type": "address", "internalType": "address"},
                        {"name": "linkerCodeHash", "type": "bytes32", "internalType": "bytes32"},
                        {"name": "initialVaultSharePrice", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumShareReserves", "type": "uint256", "internalType": "uint256"},
                        {"name": "minimumTransactionAmount", "type": "uint256", "internalType": "uint256"},
                        {"name": "circuitBreakerDelta", "type": "uint256", "internalType": "uint256"},
                        {"name": "positionDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "checkpointDuration", "type": "uint256", "internalType": "uint256"},
                        {"name": "timeStretch", "type": "uint256", "internalType": "uint256"},
                        {"name": "governance", "type": "address", "internalType": "address"},
                        {"name": "feeCollector", "type": "address", "internalType": "address"},
                        {"name": "sweepCollector", "type": "address", "internalType": "address"},
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {"name": "curve", "type": "uint256", "internalType": "uint256"},
                                {"name": "flat", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceLP", "type": "uint256", "internalType": "uint256"},
                                {"name": "governanceZombie", "type": "uint256", "internalType": "uint256"},
                            ],
                        },
                    ],
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [{"name": "", "type": "address", "internalType": "address"}],
            "stateMutability": "nonpayable",
        }
    ],
)
# pylint: disable=line-too-long
erc4626target1deployer_bytecode = HexStr(
    "$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401611d7e929190613766565b6040805180830381865af4158015611d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbe91906137dc565b91509150611ddc611dce82611247565b611dd790613800565b61288e565b925082611df25760009650505050505050611241565b611dfb82611979565b60068054600090611e169084906001600160801b03166135de565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611e4381611979565b60068054601090611e65908490600160801b90046001600160801b03166135de565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e611ec287612a24565b6040518263ffffffff1660e01b8152600401611ede919061381c565b6040805180830381865af4158015611efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1e919061382b565b9150915080611f34575060009485945092505050565b6000808611611f44576000611f4e565b611f4e8387611529565b600654600e6020527fd2d06a3478833ecfcc0864e3afb188a7ff21caef68ea336a6e4f79f78f6fb3e95460008080527fe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c54939450926001600160801b0390921691611fb991906134d2565b611fc391906135ab565b905080600003611fdc5750600096879650945050505050565b6000611fe88383612638565b98600198509650505050505050565b6000806120026105d1565b905080831161201257600061201c565b61201c81846135ab565b9150610b97827f0000000000000000000000000000000000000000000000000000000000000000612638565b6000808061206961206188670de0b6b3a76400006135ab565b899087612b5e565b905086156120ab5761207b88886123d9565b915061209c8a8a846120958a670de0b6b3a76400006135ab565b8989612b84565b92506120a883826134d2565b90505b9750975097945050505050565b60006120d66120cf84670de0b6b3a76400006135ab565b83906123d9565b610b9790670de0b6b3a76400006135ab565b60008061211f856120f7611941565b61210191906134d2565b600154610ec4908790600160801b90046001600160801b03166135ab565b909210949350505050565b6000808080612181878661217a8b61217461214d8c670de0b6b3a76400006135ab565b7f0000000000000000000000000000000000000000000000000000000000000000906123d9565b906123d9565b9190612b5e565b93506121ad847f0000000000000000000000000000000000000000000000000000000000000000611529565b915060006121ce6121c689670de0b6b3a76400006135ab565b8a9088612b5e565b90506121fa817f00000000000000000000000000000000000000000000000000000000000000006123d9565b9350612226847f0000000000000000000000000000000000000000000000000000000000000000611529565b61223090846134d2565b915050945094509450949050565b600080600080600080888810156122ad578615612263576122608d898b6123ee565b9c505b61226e8c898b6123ee565b9b506122798b611247565b6122828d611247565b61228c91906134e5565b90506122998b898b6123ee565b9a506122a68a898b6123ee565b99506122cc565b6122b68b611247565b6122bf8d611247565b6122c991906134e5565b90505b9b9c9a9b999a975050505050505050565b6000826000036122ee57508461237e565b81156123415761231f61230184876134d2565b61230b8587611529565b612315888a611529565b611c3d91906134d2565b9050600061232d85886119a3565b90508082101561233b578091505b5061237e565b8285036123505750600061237e565b61237b61235d84876135ab565b61236785876123d9565b612371888a611529565b611c3d91906135ab565b90505b95945050505050565b600060016001607f1b03198212806123a5575060016001607f1b0382135b156112715760405163a5353be560e01b815260040160405180910390fd5b60008183136123d25781610b97565b5090919050565b6000610b978383670de0b6b3a7640000612b5e565b600082600019048411830215820261240557600080fd5b5091020490565b6040516363737ac960e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c6e6f59290602401611900565b604051635d043b2960e11b8152600481018590526001600160a01b0384811660248301523060448301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063ba087652906064016020604051808303816000875af11580156124d6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061008191906136cf565b61252e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486612ba7565b50505050565b6000808061255561254d88670de0b6b3a76400006135ab565b8990876123ee565b905086156120ab576125678888611529565b915061209c8a8a846125818a670de0b6b3a76400006135ab565b8989612bf9565b6000806125958484612c0a565b9092509050806125a7576125a7611388565b5092915050565b6000816000036125c75750670de0b6b3a7640000611241565b826000036125d757506000611241565b60006125e283611247565b905060006125f76125f286611247565b612c49565b905081810261260e670de0b6b3a76400008261385b565b905061261981612e6f565b9695505050505050565b6000610b9783670de0b6b3a764000084612b5e565b6000610b9783670de0b6b3a7640000846123ee565b600060016001607f1b038211156112715760405163a5353be560e01b815260040160405180910390fd5b6002546000908190612692906001600160801b031684612623565b90506126be7f0000000000000000000000000000000000000000000000000000000000000000826134d2565b6001546001600160801b031611156119b2576001547f0000000000000000000000000000000000000000000000000000000000000000906127099083906001600160801b03166135ab565b610b9791906135ab565b61271b6133aa565b60008061272784612a24565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612762919061381c565b6040805180830381865af415801561277e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a2919061382b565b93509050826127b75750600091506128869050565b60006127de6127d984610160015185610140015161152990919063ffffffff16565b611247565b6127fe6127d98561012001518661010001516123d990919063ffffffff16565b61280891906134e5565b604080516101208101825285815260208082019590955260008052600e85527fe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c5481830152606081018a9052608081018b905260a0810192909252845160c08301529284015160e08201529290910151610100830152509150600190505b935093915050565b60015460035460405163685a2be760e11b81526001600160801b0380841660048301819052600f9390930b60248301819052600160801b90940416604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$"
)


class ERC4626Target1DeployerContract(Contract):
    """A web3.py Contract class for the ERC4626Target1Deployer contract."""

    abi: ABI = erc4626target1deployer_abi
    bytecode: bytes | None = try_bytecode_hexbytes(erc4626target1deployer_bytecode, "erc4626target1deployer")

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        try:
            # Initialize parent Contract class
            super().__init__(address=address)
            self.functions = ERC4626Target1DeployerContractFunctions(erc4626target1deployer_abi, self.w3, address)  # type: ignore

        except FallbackNotFound:
            print("Fallback function not found. Continuing...")

    functions: ERC4626Target1DeployerContractFunctions

    @classmethod
    def constructor(cls) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """

        return super().constructor()

    @classmethod
    def deploy(cls, w3: Web3, account: LocalAccount | ChecksumAddress) -> Self:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor()

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address)
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(cls, w3: Web3, class_name: str | None = None, **kwargs: Any) -> Type[Self]:
        """Deploys and instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = ERC4626Target1DeployerContractFunctions(erc4626target1deployer_abi, w3, None)

        return contract
